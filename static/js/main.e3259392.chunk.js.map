{"version":3,"sources":["lib/readFile.ts","styles/images/powered-by.png","lib/demo.ts","views/RandomView.tsx","store/reducers.ts","store/context.tsx","components/Header.tsx","components/DropPad.tsx","lib/resources.ts","styles/theme.tsx","components/FileList/FileItem.tsx","lib/winner.ts","components/FileList/index.tsx","lib/portColor.ts","lib/processStats.ts","containers/FileListInput.tsx","views/MainView.tsx","lib/hooks/useParam.ts","lib/hooks/useKeyPress.ts","lib/hooks/useOnClickOutside.ts","components/ColorPicker.tsx","containers/Settings.tsx","containers/CharDisplay/index.tsx","components/Block.tsx","components/InlineEdit/index.tsx","components/TextBlock.tsx","containers/NameBlock.tsx","containers/ScoreBlock.tsx","components/GameResult/HeadToHead.tsx","components/GameResult/StageTimer.tsx","components/GameResult/index.tsx","containers/GameDisplay/index.tsx","components/Stat.tsx","containers/StatDisplay/Statistics.tsx","containers/StatDisplay/index.tsx","containers/RenderDisplay.tsx","views/RenderView.tsx","App.tsx","serviceWorker.ts","index.tsx","lib/stats.js"],"names":["readFileAsSlippiGame","file","a","readFileAsArrayBuffer","data","arr","Int8Array","buf","Buffer","from","SlippiGame","generateGameDetails","name","game","filePath","settings","getSettings","frames","getFrames","stats","getStats","metadata","getMetadata","latestFrame","getLatestFrame","gameEnd","getGameEnd","Promise","resolve","reject","fr","FileReader","onabort","onerror","readAsBinaryString","addEventListener","string","this","resultString","result","Uint8Array","length","i","charCodeAt","buffer","readAsArrayBuffer","module","exports","getRandomArbitrary","min","max","Math","random","getRandomInt","ceil","floor","generateDemoQuery","paramMap","generateRandomCharacter","char1","color1","char2","color2","leftWins","rightWins","totalGames","gt","gameKey","leftWillWin","gameValue","generateRandomGame","join","score","winner","forEach","key","move","moveUtil","getMoveShortName","toUpperCase","generateRandomMove","toFixed","charId","charInfo","characterUtil","getCharacterInfo","colorIndex","colors","LEGAL_STAGE_IDS","playerInfos","stageIndex","generateRandomStageId","mins","secs","String","padStart","generateRandomDuration","Types","RandomView","search","URLSearchParams","toString","to","pathname","initialState","files","AppContext","createContext","state","dispatch","mainReducer","action","type","ADD_GAME","payload","filename","details","fileToReplace","findIndex","f","loading","SET_ERROR","error","ADD_FILE","Boolean","find","push","REMOVE_FILE","filter","CLEAR_ALL","reducer","AppProvider","children","useReducer","Provider","value","Header","styled","h1","Container","div","props","isDragAccept","isDragActive","getColor","DropPad","useDropzone","getRootProps","getInputProps","isDragReject","sanitize","text","replacement","toLowerCase","replace","getCharacterFolderFromId","characterId","color","character","charFolder","colorFolder","process","getCharacterFolderFromName","getCharacterName","getCharacterPortrait","folder","defaultTheme","primaryColor","secondaryColor","GlobalTheme","styles","css","BasicFileItem","onRemove","className","onClick","title","CharacterIcon","src","getCharacterStockIcon","style","height","FileItem","console","log","lastFrame","stageName","stageUtil","getStageName","stageId","players","duration","convertFrameCountToDurationString","frame","winnerIndex","Object","keys","map","post","reduce","b","stocksRemaining","percent","playerIndex","icons","player","getCharacterColorName","characterColor","port","PortColor","FileList","getPortColor","portNumber","P1","P2","P3","P4","extractNameAndCode","playerPort","index","playerTag","nametag","netplayName","get","ProcessButton","button","p","backgroundColor","FileListInput","history","useHistory","useContext","onDrop","useCallback","acceptedFiles","startTime","Date","getTime","promises","all","then","time","finishedProcessing","buttonText","accept","disabled","gameDetails","filtered","filterGames","Error","generateStats","games","summary","params","lastGame","leftPlayer","rightPlayer","leftColor","rightColor","lastGameDetails","leftTag","leftCode","rightTag","rightCode","name1","name2","sub1","sub2","stage","id","gameDuration","playerInfo","gameResult","s","opk1","results","simple","opk2","dpo1","dpo2","nw1","nw2","playerRes","opponentRes","mckm1","shortName","count","mckm2","mcno1","mcno2","ipm1","ipm2","akp1","akp2","tdd1","tdd2","processStats","linkStyle","MainView","href","target","rel","useParam","defaultValue","useState","setValue","location","useLocation","useEffect","currentValue","setParam","val","set","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","window","removeEventListener","useOnClickOutside","ref","handler","listener","event","current","contains","document","ColorPicker","onChange","React","show","setShow","wrapperRef","useRef","hex","Outer","Settings","setPrimaryColor","setSecondaryColor","setLeftColor","setRightColor","open","setOpen","FLIP_RIGHT_CHARS","CharDisplay","colorParam","charParam","align","theme","char","facing","imgSrc","side","getCharacterVSScreen","alignment","defaultAlignment","includes","getAlignment","Block","optional","InlineEdit","onSetText","textAlign","isInputActive","setIsInputActive","inputValue","setInputValue","textRef","inputRef","tab","enter","esc","focus","maxWidth","e","defaultProps","TextBlock","onEdit","child","Name","Subtitle","NameBlock","nameParam","defaultName","subtitleParam","setName","sub","setSub","StyledBlock","ScoreBlock","setScore","highlight","BaseHeadImage","HeadImage","invWaypoint","waypoint","dim","imageSrc","HeadToHead","result1","result2","p1","p2","Text","span","StageTimer","stageIcon","getStageIcon","GameResult","rest","Game","winningSide","gameInfo","split","res1","res2","gameWinner","GameDisplay","total","parseInt","StatLabel","labelBackground","labelColor","StatContent","OuterStat","Stat","label","leftText","rightText","onLeftTextBlur","onRightTextBlur","ConnectedStat","param1","param2","field1","setField1","field2","setField2","MostCommonKillMove","MostCommonNeutralOpener","AverageKillPercent","NeutralWins","OpeningsPerKill","TotalDamageDone","Divider","StatDisplay","RenderDisplay","RenderView","textDecoration","alt","poweredByImage","hot","basename","exact","path","component","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","require","stages","moves","characters","moment","_","OPENINGS_PER_KILL","DAMAGE_PER_OPENING","NEUTRAL_WINS","KILL_MOVES","NEUTRAL_OPENER_MOVES","EARLY_KILLS","LATE_DEATHS","SELF_DESTRUCTS","INPUTS_PER_MINUTE","AVG_KILL_PERCENT","HIGH_DAMAGE_PUNISHES","DAMAGE_DONE","statDefininitions","betterDirection","recommendedRounding","calculate","genOverallRatioStat","killMoves","flatMap","conversions","conversionsForPlayer","conversion","isForPlayer","didKill","last","killMovesByMove","groupBy","killMoveCounts","first","moveId","getMoveName","orderedKillMoveCounts","orderBy","topKillMove","simpleText","neutralMoves","isNeutralWin","openingType","neutralMovesByMove","neutralMoveCounts","orderedNeutralMoveCounts","topNeutralMove","oppStocks","stocks","stock","isOpp","hasEndPercent","endPercent","orderedOppStocks","earliestKillStock","number","take","playerStocks","isPlayer","orderedPlayerStocks","latestDeathStock","sdCounts","playerEndedStocks","oppKillConversions","sdSum","sum","sumBy","ratio","genSimpleFromRatio","punishes","getDamageDone","punish","startPercent","orderedPunishes","topPunish","field","fixedNum","statRatios","overallStats","keyBy","avg","averageRatios","ratios","gamesByIsSingles","nonSinglesGames","some","singlesGames","gamesByPorts","chain","ports","gamesWithSamePorts","shift","flatGames","flatten","isEmpty","computeStats","firstGame","orderIndices","indices","clone","reverse","statKey","def","iIndices","output","generateGameInfo","orderedGames","startAt","generatePlayerInfo","characterName","opp","oppIndex","gameEndMethod","lrasInitiatorIndex","getResultForPlayer","playerInfoGen","generateBtsSummary","fixedStats","generateSummaryItem","fullStatOutput","statsById","statsToRandomizeById","statId","statOutput","sdStat","sds1","sds2","shuffled","shuffle","shuffledToInclude","frameCount","utc","as","format","generateOutput","btsSummary"],"mappings":"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","file":"static/js/main.e3259392.chunk.js","sourcesContent":["import {\n  FrameEntryType,\n  FramesType,\n  GameEndType,\n  GameStartType,\n  MetadataType,\n  SlippiGame,\n  StatsType,\n} from \"@slippi/slippi-js\";\n\nimport generateStats from \"./stats\";\n\nexport interface GameDetails {\n  filePath: string;\n  settings: GameStartType;\n  frames: FramesType;\n  stats: StatsType;\n  metadata: MetadataType;\n  latestFrame: FrameEntryType | null;\n  gameEnd: GameEndType | null;\n}\n\nexport async function generateStatsOutput(files: File[]) {\n  const games = await readFilesAsSlippiGameDetails(files);\n  console.log(games);\n  const output = generateStats(games);\n  console.log(output);\n  return output;\n}\n\nexport async function readFileAsSlippiGame(file: File): Promise<SlippiGame> {\n  const data = (await readFileAsArrayBuffer(file)) as ArrayBuffer;\n  const arr = new Int8Array(data);\n  const buf = Buffer.from(arr);\n  return new SlippiGame(buf);\n}\n\nexport async function readFileAsGameDetails(file: File): Promise<GameDetails> {\n  const game = await readFileAsSlippiGame(file);\n  return generateGameDetails(file.name, game);\n}\n\nexport function generateGameDetails(name: string, game: SlippiGame): GameDetails {\n  return {\n    filePath: name,\n    settings: game.getSettings(),\n    frames: game.getFrames(),\n    stats: game.getStats(),\n    metadata: game.getMetadata(),\n    latestFrame: game.getLatestFrame(),\n    gameEnd: game.getGameEnd(),\n  };\n}\n\nexport async function readFilesAsSlippiGameDetails(files: File[]): Promise<GameDetails[]> {\n  const promises = files.map(async (f) => {\n    console.log(\"checking file: \", f);\n    const data = (await readFileAsArrayBuffer(f)) as ArrayBuffer;\n    const arr = new Int8Array(data);\n    const buf = Buffer.from(arr);\n    const game = new SlippiGame(buf);\n    // console.log(game.getStats());\n    return {\n      filePath: f.name,\n      settings: game.getSettings(),\n      frames: game.getFrames(),\n      stats: game.getStats(),\n      metadata: game.getMetadata(),\n      latestFrame: game.getLatestFrame(),\n      gameEnd: game.getGameEnd(),\n    };\n  });\n  return Promise.all(promises);\n}\n\nexport async function readFileAsArrayBuffer(file: File): Promise<string | ArrayBufferLike> {\n  return new Promise((resolve, reject) => {\n    const fr = new FileReader();\n    fr.onabort = () => reject(\"file reading was aborted\");\n    fr.onerror = () => reject(\"file reading has failed\");\n    if (fr.readAsBinaryString) {\n      fr.addEventListener(\n        \"load\",\n        function () {\n          const string = (this as any).resultString != null ? (this as any).resultString : this.result;\n          const result = new Uint8Array(string.length);\n          for (let i = 0; i < string.length; i++) {\n            result[i] = string.charCodeAt(i);\n          }\n          resolve(result.buffer);\n        },\n        false\n      );\n      fr.readAsBinaryString(file);\n    } else {\n      fr.addEventListener(\n        \"load\",\n        function () {\n          if (this.result) {\n            resolve(this.result);\n          } else {\n            reject(\"no data read\");\n          }\n        },\n        false\n      );\n      fr.readAsArrayBuffer(file);\n    }\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/powered-by.61867ea8.png\";","import { characters as characterUtil, moves as moveUtil } from \"@slippi/slippi-js\";\n\n/*\n * Random functions are taken from: https://stackoverflow.com/questions/1527803/generating-random-whole-numbers-in-javascript-in-a-specific-range\n */\n\n/**\n * Returns a random number between min (inclusive) and max (exclusive)\n */\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\n/**\n * Returns a random integer between min (inclusive) and max (inclusive).\n * The value is no lower than min (or the next integer greater than min\n * if min isn't an integer) and no greater than max (or the next integer\n * lower than max if max isn't an integer).\n * Using Math.round() will give you a non-uniform distribution!\n */\nfunction getRandomInt(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function generateDemoQuery(): Record<string, any> {\n  const paramMap: Record<string, any> = {};\n\n  // Set names\n  paramMap.name1 = \"FOLLOW\";\n  paramMap.name2 = \"ON\";\n  paramMap.sub1 = \"@_vinceau\";\n  paramMap.sub2 = \"TWITTER\";\n\n  // Set colors\n  const [char1, color1] = generateRandomCharacter();\n  const [char2, color2] = generateRandomCharacter();\n  paramMap.char1 = char1;\n  paramMap.color1 = color1;\n  paramMap.char2 = char2;\n  paramMap.color2 = color2;\n\n  // Track game wins\n  let leftWins = 0;\n  let rightWins = 0;\n\n  // Random games\n  const totalGames = getRandomInt(3, 5);\n  paramMap.gt = totalGames;\n  for (let i = 1; i <= totalGames; i++) {\n    const gameKey = `g${i}`;\n    const leftWillWin = Math.random() < 0.5;\n    const leftPlayerInfo = [char1, color1, leftWillWin ? \"winner\" : \"loser\"].join(\",\");\n    const rightPlayerInfo = [char2, color2, leftWillWin ? \"loser\" : \"winner\"].join(\",\");\n    const gameValue = generateRandomGame([leftPlayerInfo, rightPlayerInfo]);\n    paramMap[gameKey] = gameValue;\n\n    if (leftWillWin) {\n      leftWins += 1;\n    } else {\n      rightWins += 1;\n    }\n  }\n\n  // Set score\n  paramMap.score = `${leftWins} - ${rightWins}`;\n  // Set winner\n  if (leftWins !== rightWins) {\n    paramMap.winner = leftWins > rightWins ? \"left\" : \"right\";\n  }\n\n  // Random moves\n  [\"mckm1\", \"mckm2\", \"mcno1\", \"mcno2\"].forEach((key) => {\n    paramMap[key] = generateRandomMove();\n  });\n\n  // Random openings per kill\n  [\"opk1\", \"opk2\"].forEach((key) => {\n    paramMap[key] = getRandomArbitrary(5, 15).toFixed(1);\n  });\n\n  // Total damage done\n  [\"tdd1\", \"tdd2\"].forEach((key) => {\n    paramMap[key] = getRandomArbitrary(1000, 2000).toFixed(1);\n  });\n\n  // Average kill percent\n  [\"akp1\", \"akp2\"].forEach((key) => {\n    paramMap[key] = getRandomArbitrary(50, 200).toFixed(1);\n  });\n\n  // Neutral wins\n  [\"nw1\", \"nw2\"].forEach((key) => {\n    paramMap[key] = getRandomInt(30, 80);\n  });\n\n  return paramMap;\n}\n\nfunction generateRandomMove(): string {\n  const move = getRandomInt(7, 21);\n  const name = moveUtil.getMoveShortName(move).toUpperCase();\n  return `${name} - ${move}`;\n}\n\nfunction generateRandomCharacter() {\n  const charId = getRandomInt(0, 25);\n  const charInfo = characterUtil.getCharacterInfo(charId);\n  const colorIndex = getRandomInt(0, charInfo.colors.length - 1);\n  const color = charInfo.colors[colorIndex];\n  return [charId, color] as const;\n}\n\nconst LEGAL_STAGE_IDS = [2, 3, 8, 28, 31, 32];\n\nfunction generateRandomStageId(): number {\n  const stageIndex = getRandomInt(0, LEGAL_STAGE_IDS.length - 1);\n  return LEGAL_STAGE_IDS[stageIndex];\n}\n\nfunction generateRandomDuration(): string {\n  const mins = getRandomInt(0, 7);\n  const secs = String(getRandomInt(0, 60)).padStart(2, \"0\");\n  return `${mins}:${secs}`;\n}\n\nfunction generateRandomGame(playerInfos: string[]): string {\n  const stageId = generateRandomStageId();\n  const gameDuration = generateRandomDuration();\n  const gameValue = [stageId, gameDuration, ...playerInfos].join(\",\");\n  return gameValue;\n}\n","import React from \"react\";\nimport { generateDemoQuery } from \"lib/demo\";\nimport { Redirect } from \"react-router-dom\";\n\nexport const RandomView: React.FC = () => {\n  const paramMap = generateDemoQuery();\n  const search = \"?\" + new URLSearchParams(paramMap).toString();\n  return (\n    <Redirect\n      to={{\n        pathname: \"/render\",\n        search,\n      }}\n    />\n  );\n};\n","import SlippiGame from \"@slippi/slippi-js\";\nimport { GameDetails } from \"lib/readFile\";\n\nimport { InitialStateType } from \"./types\";\n\ntype ActionMap<M extends { [index: string]: any }> = {\n  [Key in keyof M]: M[Key] extends undefined\n    ? {\n        type: Key;\n      }\n    : {\n        type: Key;\n        payload: M[Key];\n      };\n};\n\nexport enum Types {\n  ADD_GAME = \"ADD_GAME\",\n  SET_ERROR = \"SET_ERROR\",\n  ADD_FILE = \"ADD_FILE\",\n  REMOVE_FILE = \"REMOVE_FILE\",\n  CLEAR_ALL = \"CLEAR_ALL\",\n}\n\ntype ActionPayload = {\n  [Types.ADD_GAME]: {\n    filename: string;\n    game: SlippiGame;\n    details: GameDetails;\n  };\n  [Types.SET_ERROR]: {\n    filename: string;\n    error: any;\n  };\n  [Types.ADD_FILE]: {\n    filename: string;\n  };\n  [Types.REMOVE_FILE]: {\n    filename: string;\n  };\n  [Types.CLEAR_ALL]: never;\n};\n\nexport type ReducerActions = ActionMap<ActionPayload>[keyof ActionMap<ActionPayload>];\n\nexport const reducer = (state: InitialStateType, action: ReducerActions) => {\n  switch (action.type) {\n    case Types.ADD_GAME: {\n      const { filename, details } = action.payload;\n      const files = state.files;\n      const fileToReplace = files.findIndex((f) => f.filename === filename);\n      if (fileToReplace !== -1) {\n        files[fileToReplace].details = details;\n        files[fileToReplace].loading = false;\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.SET_ERROR: {\n      const { filename, error } = action.payload;\n      const files = state.files;\n      const fileToReplace = files.findIndex((f) => f.filename === filename);\n      if (fileToReplace !== -1) {\n        files[fileToReplace].error = error;\n        files[fileToReplace].loading = false;\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.ADD_FILE: {\n      const { filename } = action.payload;\n      const files = state.files;\n      const alreadyExists = Boolean(files.find((f) => f.filename === filename));\n      if (!alreadyExists) {\n        files.push({\n          filename,\n          loading: true,\n          details: null,\n        });\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.REMOVE_FILE: {\n      const { filename } = action.payload;\n      const files = state.files.filter((f) => f.filename !== filename);\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.CLEAR_ALL: {\n      return {\n        ...state,\n        files: [],\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import React, { createContext, Dispatch, useReducer } from \"react\";\n\nimport { reducer, ReducerActions } from \"./reducers\";\nimport { InitialStateType } from \"./types\";\n\nconst initialState: InitialStateType = {\n  files: [],\n};\n\nconst AppContext = createContext<{\n  state: InitialStateType;\n  dispatch: Dispatch<ReducerActions>;\n}>({\n  state: initialState,\n  dispatch: () => null,\n});\n\nconst mainReducer = (state: InitialStateType, action: ReducerActions) => reducer(state, action);\n\nconst AppProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(mainReducer, initialState);\n\n  return <AppContext.Provider value={{ state, dispatch }}>{children}</AppContext.Provider>;\n};\n\nexport { AppProvider, AppContext };\n","import styled from \"@emotion/styled\";\n\nexport const Header = styled.h1`\n  text-transform: uppercase;\n  font-weight: 800;\n  font-size: 5.5rem;\n  margin: 2rem;\n  padding-bottom: 1rem;\n  position: relative;\n  text-align: center;\n\n  &::before {\n    z-index: -1;\n    content: \"\";\n    display: block;\n    background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.2), transparent);\n    height: 0.1rem;\n    position: absolute;\n    width: 80%;\n    margin-left: 50%;\n    transform: translateX(-50%);\n    bottom: 0;\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { DropzoneOptions, useDropzone } from \"react-dropzone\";\n\nconst getColor = (props: any) => {\n  if (props.isDragAccept) {\n    return \"#00e676\";\n  }\n  if (props.isDragActive) {\n    return \"#2196f3\";\n  }\n  return \"#eeeeee\";\n};\n\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-width: 2px;\n  border-color: ${(props) => getColor(props)};\n  border-style: dashed;\n  background-color: rgba(0, 0, 0, 0.3);\n  color: white;\n  outline: none;\n  transition: border 0.24s ease-in-out;\n  p {\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n`;\n\nexport const DropPad: React.FC<Partial<DropzoneOptions>> = (props) => {\n  const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone(props);\n\n  return (\n    <Container {...getRootProps({ isDragActive, isDragAccept, isDragReject })}>\n      <input {...getInputProps()} />\n      <p>Drag SLP files here or click to select</p>\n    </Container>\n  );\n};\n","import { characters as characterUtil, stages as stageUtil } from \"@slippi/slippi-js\";\n\nexport type Side = \"left\" | \"right\";\n\nfunction sanitize(text: string, replacement = \"-\"): string {\n  return text.toLowerCase().replace(/[. &]+/gi, replacement);\n}\n\nfunction getCharacterFolderFromId(characterId: string | number, color?: string) {\n  const characterName = characterUtil.getCharacterName(+characterId);\n  return getCharacterFolderFromName(characterName, color);\n}\n\nfunction getCharacterFolderFromName(character: string, color = \"Default\") {\n  const charFolder = sanitize(character);\n  const colorFolder = sanitize(color);\n  return `${process.env.PUBLIC_URL}/images/characters/${charFolder}/${colorFolder}`;\n}\n\nexport function getCharacterPortrait(characterId: string | number, color?: string): string {\n  const folder = getCharacterFolderFromId(characterId, color);\n  return `${folder}/portrait.png`;\n}\n\nexport function getCharacterVSScreen(side: Side, characterId: string | number, color?: string): string {\n  const folder = getCharacterFolderFromId(characterId, color);\n  return `${folder}/vs-${side}.png`;\n}\n\nexport function getCharacterStockIcon(characterId: string | number, color?: string): string {\n  const folder = getCharacterFolderFromId(characterId, color);\n  return `${folder}/stock.png`;\n}\n\nexport function getStageIcon(stageId: string | number): string {\n  const stageName = stageUtil.getStageName(+stageId);\n  return `${process.env.PUBLIC_URL}/images/stages/${stageName}.png`;\n}\n","/** @jsx jsx */\nimport { css, Global, jsx } from \"@emotion/core\";\n\nexport interface Theme {\n  primaryColor: string;\n  secondaryColor: string;\n}\n\nexport const defaultTheme: Theme = {\n  primaryColor: \"#286163\",\n  secondaryColor: \"#121020\",\n};\n\nexport const GlobalTheme: React.FC<Theme> = ({ primaryColor, secondaryColor }) => {\n  return (\n    <Global\n      styles={css`\n        body.themed {\n          background: radial-gradient(circle at center -30%, ${primaryColor}, ${secondaryColor});\n        }\n      `}\n    />\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { stages as stageUtil, characters as characterUtil } from \"@slippi/slippi-js\";\nimport { getCharacterStockIcon } from \"lib/resources\";\nimport { convertFrameCountToDurationString } from \"lib/stats\";\nimport { findWinner } from \"lib/winner\";\nimport React from \"react\";\nimport { ProcessedFile } from \"store/types\";\nimport { defaultTheme } from \"styles/theme\";\n\nconst BasicFileItem: React.FC<{ name: string; onRemove?: () => void }> = (props) => {\n  const { onRemove, name, children } = props;\n  return (\n    <div\n      css={css`\n        padding: 1.5rem 2rem;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        color: rgba(255, 255, 255, 0.8);\n        background-color: rgba(0, 0, 0, 0.3);\n        opacity: 0.8;\n        transition: opacity 0.2s ease-in-out;\n        &:hover {\n          opacity: 1;\n          .remove-button {\n            opacity: 1;\n          }\n        }\n        .remove-button {\n          opacity: 0;\n          transition: opacity 0.2s ease-in-out;\n          background: white;\n          color: ${defaultTheme.secondaryColor};\n          border: none;\n          font-weight: bold;\n          font-size: 2.5rem;\n          cursor: pointer;\n          padding: 0.2rem 1.2rem;\n          margin: 0;\n        }\n      `}\n    >\n      <div\n        css={css`\n          flex: 1;\n        `}\n      >\n        <div\n          css={css`\n            font-size: 1.6rem;\n            font-weight: bold;\n            margin-bottom: 1rem;\n            font-family: monospace;\n          `}\n        >\n          {name}\n        </div>\n        <div>{children}</div>\n      </div>\n      {onRemove && (\n        <button className=\"remove-button\" onClick={onRemove} title=\"Remove\">\n          x\n        </button>\n      )}\n    </div>\n  );\n};\n\nconst CharacterIcon: React.FC<{\n  charId: string | number;\n  color: string;\n  winner?: boolean;\n}> = ({ charId, color, winner }) => {\n  const src = getCharacterStockIcon(charId, color);\n  return (\n    <div\n      css={css`\n        position: relative;\n        display: inline-block;\n        margin-top: 0.5rem;\n        ${winner &&\n        `&::after {\n          position: absolute;\n          content: \" \";\n          height: 0.7rem;\n          width: 60%;\n          background-color: #ffa700;\n          left: 20%;\n          bottom: 110%;\n          clip-path: polygon(50% 0%, 75% 35%, 100% 0, 100% 100%, 0 100%, 0 0, 25% 35%);\n        }\n      `}\n      `}\n    >\n      <img src={src} style={{ height: \"3rem\" }} />\n    </div>\n  );\n};\n\nexport interface FileItemProps {\n  file: ProcessedFile;\n  onRemove: () => void;\n}\n\nexport const FileItem: React.FC<FileItemProps> = (props) => {\n  const { file, onRemove } = props;\n  const { filename, loading, error, details } = file;\n  if (loading) {\n    return <BasicFileItem name={filename}> loading...</BasicFileItem>;\n  }\n  if (error || !details) {\n    return (\n      <BasicFileItem onRemove={onRemove} name={filename}>\n        error :c\n      </BasicFileItem>\n    );\n  }\n\n  console.log(details);\n  const stageName = stageUtil.getStageName(details.settings.stageId as number);\n  const players = details.settings.players;\n  const duration = details.latestFrame ? convertFrameCountToDurationString(details.latestFrame.frame) : \"N/A\";\n  const winnerIndex = details.latestFrame ? findWinner(details.latestFrame) : null;\n  const icons = players.map((player) => {\n    const winner = player.playerIndex === winnerIndex;\n    const charId = player.characterId as number;\n    const color = characterUtil.getCharacterColorName(charId, player.characterColor as number);\n    return <CharacterIcon key={`${player.port}-icon`} charId={charId} color={color} winner={winner} />;\n  });\n  return (\n    <BasicFileItem onRemove={onRemove} name={filename}>\n      <div\n        css={css`\n          display: grid;\n          justify-items: center;\n          align-items: center;\n          grid-template-columns: repeat(3, 1fr);\n          font-weight: bold;\n        `}\n      >\n        <div>{stageName}</div>\n        <div\n          css={css`\n            display: grid;\n            grid-auto-flow: column;\n            grid-column-gap: 1rem;\n          `}\n        >\n          {icons}\n        </div>\n        <div>{duration}</div>\n      </div>\n    </BasicFileItem>\n  );\n};\n","import { FrameEntryType } from \"@slippi/slippi-js\";\n\n/**\n * Given the last frame of the game, determine the winner first based on stock count\n * then based on remaining percent.\n * If percents are tied, return null;\n *\n * @returns the player index of the winner\n */\nexport const findWinner = (lastFrame: FrameEntryType): number | null => {\n  const postFrameEntries = Object.keys(lastFrame.players).map((i: any) => (lastFrame.players[i] as any).post);\n  const winnerPostFrame = postFrameEntries.reduce((a, b) => {\n    // Determine winner based on stock count\n    if (a.stocksRemaining > b.stocksRemaining) {\n      return a;\n    }\n    if (a.stocksRemaining < b.stocksRemaining) {\n      return b;\n    }\n\n    // Stocks are the same so determine winner based off remaining percent\n    if (a.percent < b.percent) {\n      return a;\n    }\n    if (a.percent > b.percent) {\n      return b;\n    }\n\n    // Just return null if no winner\n    return null;\n  });\n\n  return winnerPostFrame.playerIndex;\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport { ProcessedFile } from \"store/types\";\n\nimport { FileItem } from \"./FileItem\";\n\nexport interface FileListProps {\n  files: ProcessedFile[];\n  onRemove: (filename: string) => void;\n}\n\nexport const FileList: React.FC<FileListProps> = (props) => {\n  const { files, onRemove } = props;\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-template-columns: 100%;\n        grid-row-gap: 1rem;\n        max-height: 500px;\n        overflow-y: auto;\n      `}\n    >\n      {files.map((f) => (\n        <FileItem key={f.filename} file={f} onRemove={() => onRemove(f.filename)} />\n      ))}\n    </div>\n  );\n};\n","export enum PortColor {\n  P1 = \"#f52e2e\",\n  P2 = \"#5463ff\",\n  P3 = \"#ffc717\",\n  P4 = \"#1f9e40\",\n}\n\nexport function getPortColor(portNumber: number): string {\n  switch (portNumber) {\n    case 1:\n      return PortColor.P1;\n    case 2:\n      return PortColor.P2;\n    case 3:\n      return PortColor.P3;\n    case 4:\n      return PortColor.P4;\n    default:\n      return PortColor.P1;\n  }\n}\n","import generateStats, { filterGames } from \"lib/stats\";\nimport { get } from \"lodash\";\n\nimport { getPortColor } from \"./portColor\";\nimport { GameDetails } from \"./readFile\";\n\nconst extractNameAndCode = (playerPort: number, details: GameDetails) => {\n  const settings = details.settings;\n  const metadata = details.metadata;\n  const index = playerPort - 1;\n  const player = settings.players.find((player) => player.playerIndex === index);\n  const playerTag = player ? player.nametag : null;\n  const netplayName: string | null = get(metadata, [\"players\", index, \"names\", \"netplay\"], null);\n  const netplayCode: string | null = get(metadata, [\"players\", index, \"names\", \"code\"], null);\n  const name = playerTag || netplayName || \"\";\n  return [name, netplayCode || \"\"] as const;\n};\n\nexport function processStats(gameDetails: GameDetails[]): URLSearchParams {\n  const filtered = filterGames(gameDetails);\n  if (!filtered || filtered.length === 0) {\n    throw new Error(\"No valid games\");\n  }\n\n  const { games, summary } = generateStats(filtered);\n  const params: any = {}; // \"mckm1\": , \"mckm2\", \"mcno1\", \"mcno2\", \"opk1\", \"opk2\", \"tdd1\", \"tdd2\", \"dpo1\", \"dpo2\", \"ipm1\", \"ipm2\", \"akp1\", \"akp2\", \"nw1\", \"nw2\"};\n\n  // Set character info\n  const lastGame = games[games.length - 1];\n  const leftPlayer = lastGame.players[0];\n  const rightPlayer = lastGame.players[1];\n  params.leftColor = getPortColor(leftPlayer.port);\n  params.rightColor = getPortColor(rightPlayer.port);\n\n  params.char1 = leftPlayer.characterId;\n  params.char2 = rightPlayer.characterId;\n  params.color1 = leftPlayer.characterColor;\n  params.color2 = rightPlayer.characterColor;\n\n  // Set name tags\n  const lastGameDetails = filtered[filtered.length - 1];\n  const [leftTag, leftCode] = extractNameAndCode(leftPlayer.port, lastGameDetails);\n  const [rightTag, rightCode] = extractNameAndCode(rightPlayer.port, lastGameDetails);\n  params.name1 = leftTag.toUpperCase();\n  params.name2 = rightTag.toUpperCase();\n  params.sub1 = leftCode;\n  params.sub2 = rightCode;\n\n  // Set game info\n  params.gt = games.length; // Set the total number of games\n\n  // Track game wins\n  let leftWins = 0;\n  let rightWins = 0;\n\n  (games as any[]).forEach((game, i) => {\n    console.log(\"processing game: \", game);\n    const gameKey = `g${i + 1}`;\n    const stageId: number = game.stage.id;\n    const gameDuration: string = game.duration;\n    const playerInfo = game.players.map((p: any) => [p.characterId, p.characterColor, p.gameResult].join(\",\"));\n    const gameValue = [stageId, gameDuration, ...playerInfo].join(\",\");\n    console.log(`${gameKey} : ${gameValue}`);\n    params[gameKey] = gameValue;\n\n    // Increment win counts\n    if (game.players[0].gameResult === \"winner\") {\n      leftWins += 1;\n    } else if (game.players[1].gameResult === \"winner\") {\n      rightWins += 1;\n    }\n  });\n\n  params.score = `${leftWins} - ${rightWins}`;\n  if (leftWins !== rightWins) {\n    params.winner = leftWins > rightWins ? \"left\" : \"right\";\n  }\n\n  // Set the stat values\n  (summary as any[]).forEach((s) => {\n    switch (s.id) {\n      case \"openingsPerKill\": {\n        params.opk1 = s.results[0].simple.text;\n        params.opk2 = s.results[1].simple.text;\n        break;\n      }\n      case \"damagePerOpening\": {\n        params.dpo1 = s.results[0].simple.text;\n        params.dpo2 = s.results[1].simple.text;\n        break;\n      }\n      case \"neutralWins\": {\n        params.nw1 = s.results[0].simple.text;\n        params.nw2 = s.results[1].simple.text;\n        break;\n      }\n      case \"killMoves\": {\n        console.log(s);\n        const playerRes = s.results[0].result[0];\n        const opponentRes = s.results[1].result[0];\n        params.mckm1 = `${playerRes.shortName.toUpperCase()} - ${playerRes.count}`;\n        params.mckm2 = `${opponentRes.shortName.toUpperCase()} - ${opponentRes.count}`;\n        break;\n      }\n      case \"neutralOpenerMoves\": {\n        const playerRes = s.results[0].result[0];\n        const opponentRes = s.results[1].result[0];\n        params.mcno1 = `${playerRes.shortName.toUpperCase()} - ${playerRes.count}`;\n        params.mcno2 = `${opponentRes.shortName.toUpperCase()} - ${opponentRes.count}`;\n        break;\n      }\n      case \"inputsPerMinute\": {\n        params.ipm1 = s.results[0].simple.text;\n        params.ipm2 = s.results[1].simple.text;\n        break;\n      }\n      case \"avgKillPercent\": {\n        params.akp1 = s.results[0].simple.text;\n        params.akp2 = s.results[1].simple.text;\n        break;\n      }\n      case \"damageDone\": {\n        params.tdd1 = s.results[0].simple.text;\n        params.tdd2 = s.results[1].simple.text;\n        break;\n      }\n    }\n  });\n\n  console.log(\"returning these params: \", params);\n  return new URLSearchParams(params);\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { DropPad } from \"components/DropPad\";\nimport { FileList } from \"components/FileList\";\nimport { processStats } from \"lib/processStats\";\nimport { GameDetails, generateGameDetails, readFileAsSlippiGame } from \"lib/readFile\";\nimport React, { useCallback, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { defaultTheme } from \"styles/theme\";\n\nimport { AppContext, Types } from \"../store\";\n\nconst ProcessButton = styled.button<{\n  backgroundColor: string;\n  color: string;\n}>`\n  background: ${(p) => p.backgroundColor};\n  border: none;\n  color: ${(p) => p.color};\n  cursor: pointer;\n  font: inherit;\n  padding: 1rem 0rem;\n  width: 100%;\n  font-weight: 700;\n  font-size: 3rem;\n  opacity: 0.8;\n  transition: opacity 0.2s ease-in-out;\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n  &:hover:enabled {\n    opacity: 1;\n  }\n`;\n\nexport const FileListInput: React.FC = () => {\n  const history = useHistory();\n  const { state, dispatch } = useContext(AppContext);\n\n  const onClick = () => {\n    const gameDetails = state.files.filter((f) => f.details !== null).map((f) => f.details as GameDetails);\n    // const s = generateStats(gameDetails);\n    // setStats(s);\n    const params = processStats(gameDetails);\n    const search = \"?\" + params.toString();\n    history.push({\n      pathname: \"/render\",\n      search,\n    });\n  };\n\n  const onRemove = (filename: string) => {\n    dispatch({\n      type: Types.REMOVE_FILE,\n      payload: {\n        filename,\n      },\n    });\n  };\n\n  const onDrop = useCallback(\n    (acceptedFiles: File[]) => {\n      const startTime = new Date().getTime();\n      const promises = acceptedFiles.map(async (file) => {\n        dispatch({\n          type: Types.ADD_FILE,\n          payload: {\n            filename: file.name,\n          },\n        });\n        try {\n          const game = await readFileAsSlippiGame(file);\n          const details = generateGameDetails(file.name, game);\n          dispatch({\n            type: Types.ADD_GAME,\n            payload: {\n              filename: file.name,\n              game,\n              details,\n            },\n          });\n        } catch (err) {\n          dispatch({\n            type: Types.SET_ERROR,\n            payload: {\n              filename: file.name,\n              error: err,\n            },\n          });\n        }\n      });\n      Promise.all(promises).then(() => {\n        const time = new Date().getTime() - startTime;\n        console.log(`Finished processing in ${time}ms`);\n      });\n    },\n    [dispatch]\n  );\n\n  const finishedProcessing = !state.files.find((f) => f.loading);\n  const buttonText =\n    state.files.length === 0 ? \"NO FILES ADDED\" : finishedProcessing ? \"GENERATE STATS\" : \"PLEASE WAIT\";\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-template-columns: 100%;\n        grid-row-gap: 1rem;\n      `}\n    >\n      <DropPad accept=\".slp\" onDrop={onDrop} />\n      <FileList files={state.files} onRemove={onRemove} />\n      <ProcessButton\n        backgroundColor={defaultTheme.primaryColor}\n        color=\"white\"\n        disabled={state.files.length === 0 || !finishedProcessing}\n        onClick={onClick}\n      >\n        {buttonText}\n      </ProcessButton>\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { Header } from \"components/Header\";\nimport { FileListInput } from \"containers/FileListInput\";\nimport React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AppContext, Types } from \"store\";\nimport { defaultTheme, GlobalTheme } from \"styles/theme\";\n\nconst linkStyle = css`\n  display: block;\n  text-align: center;\n  text-decoration: none;\n  color: ${defaultTheme.secondaryColor};\n  background: white;\n  padding: 1rem 0rem;\n  width: 100%;\n  font-weight: 700;\n  font-size: 2.3rem;\n  cursor: pointer;\n  opacity: 0.8;\n  transition: opacity 0.2s ease-in-out;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nexport const MainView: React.FC = () => {\n  const { dispatch } = useContext(AppContext);\n\n  const clearAll = () => {\n    dispatch({\n      type: Types.CLEAR_ALL,\n    });\n  };\n\n  return (\n    <div\n      css={css`\n        height: 100%;\n        width: 100%;\n        max-width: 80rem;\n        margin: 0 auto;\n      `}\n    >\n      <GlobalTheme {...defaultTheme} />\n      <Container>\n        <div\n          css={css`\n            flex: none;\n          `}\n        >\n          <Header\n            onClick={clearAll}\n            title=\"Refresh page\"\n            css={css`\n              cursor: pointer;\n            `}\n          >\n            Slippi Stats\n          </Header>\n        </div>\n        <div\n          css={css`\n            overflow-y: auto;\n            flex: auto;\n          `}\n        >\n          <FileListInput />\n        </div>\n        <div\n          css={css`\n            flex: none;\n            display: grid;\n            grid-template-columns: repeat(3, 1fr);\n            grid-column-gap: 1rem;\n            padding: 2rem 0;\n          `}\n        >\n          <Link css={linkStyle} to=\"/random\" title=\"Show random sample stats\">\n            DEMO\n          </Link>\n          <a\n            css={linkStyle}\n            title=\"Fork this on Github\"\n            href=\"https://github.com/vinceau/slippi-stats\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            GITHUB\n          </a>\n          <a\n            css={linkStyle}\n            title=\"Send love\"\n            href=\"https://twitter.com/_vinceau\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            AUTHOR\n          </a>\n        </div>\n      </Container>\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport function useParam(key: string, defaultValue = \"\") {\n  const [value, setValue] = useState<string>(defaultValue);\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const currentValue = params.get(key);\n    if (currentValue !== value) {\n      setValue(currentValue || defaultValue);\n    }\n  }, [key, defaultValue, location, value]);\n\n  const setParam = (val: string) => {\n    const params = new URLSearchParams(location.search);\n    params.set(key, val);\n    const search = \"?\" + params.toString();\n    history.push({\n      pathname: location.pathname,\n      search,\n    });\n  };\n\n  return [value, setParam] as const;\n}\n","// From: https://usehooks.com/useKeyPress/\n\nimport { useEffect, useState } from \"react\";\n\nexport function useKeyPress(targetKey: any) {\n  // State for keeping track of whether key is pressed\n\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  // Add event listeners\n\n  useEffect(() => {\n    // If pressed key is our target key then set to true\n\n    function downHandler({ key }: any) {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    }\n\n    // If released key is our target key then set to false\n\n    const upHandler = ({ key }: any) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n\n    window.addEventListener(\"keydown\", downHandler);\n\n    window.addEventListener(\"keyup\", upHandler);\n\n    // Remove event listeners on cleanup\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [targetKey]); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n}\n","// From: https://usehooks.com/useOnClickOutside/\n\nimport { useEffect } from \"react\";\n\nexport function useOnClickOutside(ref: any, handler: any) {\n  useEffect(\n    () => {\n      const listener = (event: any) => {\n        // Do nothing if clicking ref's element or descendent elements\n\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener(\"mousedown\", listener);\n\n      document.addEventListener(\"touchstart\", listener);\n\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    },\n\n    // Add ref and handler to effect dependencies\n\n    // It's worth noting that because passed in handler is a new ...\n\n    // ... function on every render that will cause this effect ...\n\n    // ... callback/cleanup to run every render. It's not a big deal ...\n\n    // ... but to optimize you can wrap handler in useCallback before ...\n\n    // ... passing it into this hook.\n\n    [ref, handler]\n  );\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { useOnClickOutside } from \"lib/hooks\";\nimport React, { useRef } from \"react\";\nimport { ChromePicker } from \"react-color\";\nexport const ColorPicker: React.FC<{\n  value: string;\n  onChange: (val: string) => void;\n}> = ({ value, onChange }) => {\n  const [show, setShow] = React.useState(false);\n  const wrapperRef = useRef(null);\n\n  useOnClickOutside(wrapperRef, () => {\n    if (show) {\n      setShow(false);\n    }\n  });\n\n  const onClick = () => {\n    if (!show) {\n      setShow(true);\n    }\n  };\n  return (\n    <div\n      ref={wrapperRef}\n      css={css`\n        position: relative;\n        height: 10rem;\n        width: 10rem;\n        border-radius: 0.5rem;\n        background-color: ${value};\n      `}\n      onClick={onClick}\n    >\n      {show && (\n        <div\n          css={css`\n            position: absolute;\n            z-index: 9999;\n            bottom: 0;\n          `}\n        >\n          <ChromePicker color={value} onChange={(color) => onChange(color.hex)} />\n        </div>\n      )}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { ColorPicker } from \"components/ColorPicker\";\nimport { useOnClickOutside, useParam } from \"lib/hooks\";\nimport { PortColor } from \"lib/portColor\";\nimport React from \"react\";\nimport { defaultTheme } from \"styles/theme\";\n\nconst Outer = styled.div`\n  background-color: rgba(0, 0, 0, 0.7);\n  height: 100%;\n  margin-top: -5rem;\n  &.open {\n    margin-top: -25%;\n  }\n  transition: all 0.2 ease-in-out;\n`;\n\nexport const Settings: React.FC = () => {\n  const [primaryColor, setPrimaryColor] = useParam(\"primaryColor\", defaultTheme.primaryColor);\n  const [secondaryColor, setSecondaryColor] = useParam(\"secondaryColor\", defaultTheme.secondaryColor);\n  const [leftColor, setLeftColor] = useParam(\"leftColor\", PortColor.P1);\n  const [rightColor, setRightColor] = useParam(\"rightColor\", PortColor.P2);\n  //   const [color, setColor] = React.useState(\"#ffffff\");\n  const [open, setOpen] = React.useState(false);\n  const wrapperRef = React.useRef(null);\n\n  useOnClickOutside(wrapperRef, () => {\n    if (open) {\n      setOpen(false);\n    }\n  });\n\n  return (\n    <Outer className={open ? \"open\" : \"\"} ref={wrapperRef}>\n      <div\n        onClick={() => setOpen(!open)}\n        css={css`\n          font-weight: bold;\n        `}\n      >\n        {open ? \"CLOSE SETTINGS\" : \"OPEN SETTINGS\"}\n      </div>\n      <div>\n        <div>Primary color</div>\n        <ColorPicker value={primaryColor} onChange={setPrimaryColor} />\n      </div>\n      <div>\n        <div>Secondary color</div>\n        <ColorPicker value={secondaryColor} onChange={setSecondaryColor} />\n      </div>\n      <div>\n        <div>Left color</div>\n        <ColorPicker value={leftColor} onChange={setLeftColor} />\n      </div>\n      <div>\n        <div>Right color</div>\n        <ColorPicker value={rightColor} onChange={setRightColor} />\n      </div>\n    </Outer>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { useParam } from \"lib/hooks\";\nimport { getCharacterVSScreen, Side } from \"lib/resources\";\nimport React from \"react\";\n\nexport interface CharDisplayProps {\n  colorParam: string;\n  charParam: string;\n  align: Side;\n  theme: string;\n}\n\n// Some characters have their faces to the right so it get cut off.\n// e.g. Sheik and Bowser\n// So make sure we return the desired alignment\nconst FLIP_RIGHT_CHARS = [\"19\", \"5\"];\n\nfunction getAlignment(facing: Side, char: string, defaultAlignment: Side): Side {\n  if (facing === \"left\") {\n    return defaultAlignment;\n  }\n\n  // We so far only care about the right hand side of the VS-screen\n  if (FLIP_RIGHT_CHARS.includes(char)) {\n    return \"right\";\n  }\n\n  return defaultAlignment;\n}\n\nexport const CharDisplay: React.FC<CharDisplayProps> = (props) => {\n  const { colorParam, charParam, align, theme } = props;\n  const [color] = useParam(colorParam);\n  const [char] = useParam(charParam);\n  const facing: Side = align === \"left\" ? \"right\" : \"left\";\n  const imgSrc = getCharacterVSScreen(facing, char, color);\n  const alignment = getAlignment(facing, char, align);\n  return (\n    <div\n      css={css`\n        height: 80%;\n        width: 100%;\n        position: relative;\n        background: radial-gradient(circle at center -30%, ${theme}, transparent);\n        &::after {\n          content: ' ';\n          position: absolute;\n          height: 100%;\n          width: 100%;\n          background-image: url(\"${imgSrc}\");\n          background-repeat: no-repeat;\n          background-size: cover;\n          background-position: top ${alignment};\n        }\n      `}\n    ></div>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const Block = styled.div<{\n  color: string;\n  backgroundColor: string;\n  optional?: boolean;\n  show?: boolean;\n}>`\n  color: ${(p) => p.color};\n  background-color: ${(p) => p.backgroundColor};\n  text-align: center;\n  padding: 0.3em 0;\n  font-size: 1.2em;\n  box-shadow: 0.2em 0.2em 0.2em black;\n  ${(p) =>\n    p.optional &&\n    `\n  opacity: ${p.show ? 1 : 0};\n  transition: opacity 0.1s ease-in-out;\n  &:hover {\n    opacity: 1;\n  }\n  `};\n`;\n","// From: https://dev.to/joelmturner/build-an-inline-edit-text-input-with-react-hooks-4nah\n\nimport \"./index.scss\";\n\nimport { useKeyPress, useOnClickOutside } from \"lib/hooks\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nexport interface InlineEditProps {\n  text: string;\n  textAlign?: \"left\" | \"right\";\n  onSetText: (text: string) => void;\n}\n\nexport const InlineEdit: React.FC<InlineEditProps> = (props) => {\n  const { text, onSetText, textAlign } = props;\n  const [isInputActive, setIsInputActive] = useState(false);\n  const [inputValue, setInputValue] = useState(text);\n\n  const wrapperRef = useRef(null);\n  const textRef = useRef(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const tab = useKeyPress(\"Tab\");\n  const enter = useKeyPress(\"Enter\");\n  const esc = useKeyPress(\"Escape\");\n\n  useEffect(() => {\n    setInputValue(text);\n  }, [text]);\n\n  // check to see if the user clicked outside of this component\n  useOnClickOutside(wrapperRef, () => {\n    if (isInputActive) {\n      onSetText(inputValue);\n      setIsInputActive(false);\n    }\n  });\n\n  // focus the cursor in the input field on edit start\n  useEffect(() => {\n    if (isInputActive && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isInputActive]);\n\n  useEffect(() => {\n    if (isInputActive) {\n      // if Enter or tab is pressed, save the text and case the editor\n      if (enter || tab) {\n        onSetText(inputValue);\n        setIsInputActive(false);\n      }\n      // if Escape is pressed, revert the text and close the editor\n      if (esc) {\n        setInputValue(props.text);\n        setIsInputActive(false);\n      }\n    }\n  }, [tab, enter, esc, isInputActive, onSetText, inputValue, props.text]); // watch for key presses\n\n  return (\n    <span className=\"inline-text\" ref={wrapperRef}>\n      <span\n        ref={textRef}\n        onClick={() => setIsInputActive(true)}\n        className={`inline-text_copy inline-text_copy--${!isInputActive ? \"active\" : \"hidden\"}`}\n      >\n        {props.text}\n      </span>\n      <input\n        ref={inputRef}\n        style={{ textAlign, maxWidth: \"100%\" }}\n        value={inputValue}\n        onChange={(e) => {\n          setInputValue(e.target.value);\n        }}\n        className={`inline-text_input inline-text_input--${isInputActive ? \"active\" : \"hidden\"}`}\n      />\n    </span>\n  );\n};\n\nInlineEdit.defaultProps = {\n  text: \"\",\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onSetText: () => {},\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\n\nimport { Block } from \"./Block\";\nimport { InlineEdit } from \"./InlineEdit\";\n\nexport interface TextBlockProps {\n  color: string;\n  backgroundColor: string;\n  value: string;\n  optional?: boolean;\n  onEdit?: (val: string) => void;\n}\n\nexport const TextBlock: React.FC<TextBlockProps> = ({ optional, onEdit, backgroundColor, value, color }) => {\n  const child = onEdit ? <InlineEdit text={value} onSetText={onEdit} /> : value;\n  return (\n    <Block optional={optional} show={Boolean(value)} color={color} backgroundColor={backgroundColor}>\n      {child}\n    </Block>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nimport { TextBlock } from \"../components/TextBlock\";\n\nconst Name = styled.div`\n  font-size: 150%;\n  font-weight: 800;\n`;\n\nconst Subtitle = styled.div<{\n  show?: boolean;\n}>`\n  margin-top: -0.3rem;\n  margin-left: auto;\n  margin-right: auto;\n  width: 80%;\n  font-weight: 600;\n`;\n\nexport interface NameBlockProps {\n  nameParam: string;\n  defaultName: string;\n  subtitleParam: string;\n  primaryColor: string;\n  secondaryColor: string;\n}\n\nexport const NameBlock: React.FC<NameBlockProps> = ({\n  nameParam,\n  defaultName,\n  subtitleParam,\n  primaryColor,\n  secondaryColor,\n}) => {\n  const [name, setName] = useParam(nameParam, defaultName);\n  const [sub, setSub] = useParam(subtitleParam);\n  return (\n    <div>\n      <Name>\n        <TextBlock value={name} onEdit={setName} color=\"white\" backgroundColor={primaryColor} />\n      </Name>\n      <Subtitle>\n        <TextBlock value={sub} optional={true} onEdit={setSub} color={secondaryColor} backgroundColor=\"white\" />\n      </Subtitle>\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { Block } from \"components/Block\";\nimport { InlineEdit } from \"components/InlineEdit\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nexport interface ScoreBlockProps {\n  primaryColor: string;\n}\n\nconst StyledBlock = styled(Block)`\n  padding: 0.5rem 4rem;\n  font-size: 5rem;\n  font-weight: 800;\n`;\n\nexport const ScoreBlock: React.FC<ScoreBlockProps> = (props) => {\n  const [score, setScore] = useParam(\"score\", \"0 - 0\");\n  return (\n    <StyledBlock color=\"white\" backgroundColor={props.primaryColor}>\n      <InlineEdit text={score} onSetText={setScore} />\n    </StyledBlock>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { getCharacterPortrait } from \"lib/resources\";\nimport React from \"react\";\n\nconst Outer = styled.div<{\n  highlight?: boolean;\n}>`\n  position: relative;\n  display: block;\n  border: solid 0.1rem rgba(255, 255, 255, ${(p) => (p.highlight ? \"0.8\" : \"0.2\")});\n  height: 5rem;\n  width: 100%;\n  max-width: 10rem;\n`;\n\nconst BaseHeadImage = styled.div`\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  &::after {\n    content: \" \";\n    height: 100%;\n    background-repeat: no-repeat;\n    background-size: cover;\n    position: absolute;\n  }\n`;\n\nconst HeadImage = styled(BaseHeadImage)<{\n  backgroundColor?: string;\n  imageSrc: string;\n  side: \"left\" | \"right\";\n  waypoint: number;\n  dim?: boolean;\n}>`\n  ${(p) => {\n    const invWaypoint = 100 - p.waypoint;\n    return `\n      ${p.side === \"right\" ? `clip-path: polygon(${p.waypoint}% 0, 100% 0, 100% 100%, ${invWaypoint}% 100%);` : \"\"}\n      ${p.dim ? \"filter: brightness(25%);\" : \"\"}\n      ${p.backgroundColor ? `background: radial-gradient(circle at center -30%, ${p.backgroundColor}, black);` : \"\"}\n      &::after {\n        width: ${p.waypoint}%;\n        background-image: url(\"${p.imageSrc}\");\n        background-position: top ${p.side};\n        ${p.side === \"right\" ? `left: ${invWaypoint}%;` : \"transform: scaleX(-1);\"}\n      }\n    `;\n  }}\n`;\n\nexport interface HeadToHeadProps {\n  char1: number | string;\n  color1: string;\n  result1: string;\n  char2: number | string;\n  color2: string;\n  result2: string;\n  leftColor: string;\n  rightColor: string;\n  highlight?: boolean;\n}\n\nexport const HeadToHead: React.FC<HeadToHeadProps> = ({\n  char1,\n  color1,\n  result1,\n  char2,\n  color2,\n  result2,\n  leftColor,\n  rightColor,\n  highlight,\n}) => {\n  const waypoint = 55;\n  const p1 = getCharacterPortrait(char1, color1);\n  const p2 = getCharacterPortrait(char2, color2);\n\n  return (\n    <Outer highlight={highlight}>\n      <HeadImage backgroundColor={leftColor} imageSrc={p1} waypoint={waypoint} side=\"left\" dim={result1 === \"loser\"} />\n      <HeadImage\n        backgroundColor={rightColor}\n        imageSrc={p2}\n        waypoint={waypoint}\n        side=\"right\"\n        dim={result2 === \"loser\"}\n      />\n    </Outer>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { getStageIcon } from \"lib/resources\";\nimport React from \"react\";\n\ninterface StageTimerProps {\n  stageId: string | number;\n  duration: string;\n  highlight?: boolean;\n}\n\nconst Text = styled.span`\n  font-size: 2.5rem;\n  font-weight: bold;\n  opacity: 0.7;\n  text-shadow: 2px 2px 2px black;\n`;\n\nconst Outer = styled.div<{\n  src: string;\n  highlight?: boolean;\n}>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  height: 9rem;\n  width: 100%;\n  border: solid 1px rgba(255, 255, 255, ${(p) => (p.highlight ? \"0.8\" : \"0.2\")});\n  z-index: 0;\n\n  &::after {\n    content: ' ';\n    height: 100%;\n    width: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-image: url(\"${(p) => p.src}\");\n    background-repeat: no-repeat;\n    background-size: 105% auto;\n    background-position: center;\n    filter: blur(2px) brightness(30%);\n    z-index: -1;\n  }\n`;\n\nexport const StageTimer: React.FC<StageTimerProps> = ({ stageId, duration, highlight }) => {\n  const stageIcon = getStageIcon(stageId);\n  return (\n    <Outer src={stageIcon} highlight={highlight}>\n      <Text>{duration}</Text>\n    </Outer>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React from \"react\";\n\nimport { HeadToHead } from \"./HeadToHead\";\nimport { StageTimer } from \"./StageTimer\";\n\nexport interface GameResultProps {\n  stageId: string;\n  duration: string;\n  char1: number | string;\n  color1: string;\n  result1: string;\n  char2: number | string;\n  color2: string;\n  result2: string;\n  leftColor: string;\n  rightColor: string;\n  highlight?: boolean;\n}\n\nexport const GameResult: React.FC<GameResultProps> = (props) => {\n  const { stageId, duration, ...rest } = props;\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-template-columns: 100%;\n        justify-items: center;\n        width: 100%;\n        max-width: 18rem;\n        grid-row-gap: 2rem;\n      `}\n    >\n      <HeadToHead {...rest} />\n      <StageTimer stageId={stageId} duration={duration} highlight={props.highlight} />\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { GameResult } from \"components/GameResult\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nconst Game: React.FC<{\n  index: number;\n  leftColor: string;\n  rightColor: string;\n  winningSide?: string;\n}> = ({ index, leftColor, rightColor, winningSide }) => {\n  const [gameInfo] = useParam(`g${index}`);\n  // The game info starts off undefined\n  if (!gameInfo) {\n    return null;\n  }\n  const [stageId, duration, char1, color1, res1, char2, color2, res2] = gameInfo.split(\",\");\n  const gameWinner = res1 === \"winner\" ? \"left\" : res2 === \"winner\" ? \"right\" : \"\";\n  return (\n    <GameResult\n      highlight={winningSide === gameWinner}\n      stageId={stageId}\n      duration={duration}\n      char1={char1}\n      color1={color1}\n      result1={res1}\n      char2={char2}\n      color2={color2}\n      result2={res2}\n      leftColor={leftColor}\n      rightColor={rightColor}\n    />\n  );\n};\n\nexport const GameDisplay: React.FC<{\n  leftColor: string;\n  rightColor: string;\n  winningSide?: string;\n}> = (props) => {\n  const [gt] = useParam(`gt`);\n  const total = parseInt(gt, 10) || 0;\n\n  const games = [];\n  for (let i = 1; i <= total; i++) {\n    games.push(\n      <Game\n        key={`g${i}`}\n        index={i}\n        leftColor={props.leftColor}\n        rightColor={props.rightColor}\n        winningSide={props.winningSide}\n      />\n    );\n  }\n\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-column-gap: 2rem;\n        grid-template-columns: repeat(${total}, 1fr);\n        justify-items: center;\n      `}\n    >\n      {games}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\n\nimport { InlineEdit } from \"./InlineEdit\";\n\nexport interface StatProps {\n  type?: \"text\" | \"number\";\n  label: string;\n  labelColor?: string;\n  labelBackground?: string;\n  leftText: string;\n  rightText: string;\n  onLeftTextBlur?: (text: string) => void;\n  onRightTextBlur?: (text: string) => void;\n}\n\nconst StatLabel = styled.div<{\n  labelBackground: string;\n  labelColor: string;\n}>`\n  text-align: center;\n  background-color: ${(p) => p.labelBackground};\n  color: ${(p) => p.labelColor};\n  padding: 0.3em 2.5em;\n  font-weight: 700;\n  font-size: 1.2em;\n  box-shadow: 0.2em 0.2em 0.2em black;\n  justify-self: center;\n  z-index: 1;\n`;\n\nconst StatContent = styled.div<{\n  type: \"text\" | \"number\";\n}>`\n  width: 100%;\n  font-weight: 800;\n  font-size: ${(p) => (p.type === \"text\" ? \"1.4em\" : \"2.3em\")};\n`;\n\nconst OuterStat = styled.div`\n  display: grid;\n  grid-template-columns: 20% 60% 20%;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  &::before {\n    z-index: -1;\n    content: \"\";\n    display: block;\n    background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.4), transparent);\n    height: 0.1rem;\n    position: absolute;\n    width: 80%;\n    margin-left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nexport const Stat: React.FC<StatProps> = (props) => {\n  const { type, label, leftText, rightText, labelBackground, labelColor } = props;\n  return (\n    <OuterStat>\n      <StatContent\n        type={type!}\n        css={css`\n          justify-self: start;\n        `}\n      >\n        <InlineEdit text={leftText} onSetText={props.onLeftTextBlur!} />\n      </StatContent>\n      <StatLabel labelBackground={labelBackground!} labelColor={labelColor!}>\n        {label}\n      </StatLabel>\n      <StatContent\n        type={type!}\n        css={css`\n          justify-self: end;\n          text-align: right;\n        `}\n      >\n        <InlineEdit text={rightText} textAlign=\"right\" onSetText={props.onRightTextBlur!} />\n      </StatContent>\n    </OuterStat>\n  );\n};\n\nStat.defaultProps = {\n  type: \"number\",\n  labelColor: \"black\",\n  labelBackground: \"white\",\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onLeftTextBlur: () => {},\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onRightTextBlur: () => {},\n};\n","import { Stat } from \"components/Stat\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\ninterface ThemeProps {\n  primaryColor: string;\n  secondaryColor: string;\n}\n\ninterface ConnectedStatProps extends ThemeProps {\n  param1: string;\n  param2: string;\n  label: string;\n  type?: \"text\" | \"number\";\n}\n\nconst ConnectedStat: React.FC<ConnectedStatProps> = (props) => {\n  const { param1, param2, label, type, primaryColor, secondaryColor } = props;\n  const defaultValue = type === \"number\" ? \"0\" : \"-\";\n  const [field1, setField1] = useParam(param1, defaultValue);\n  const [field2, setField2] = useParam(param2, defaultValue);\n  const labelColor = type === \"number\" ? secondaryColor : \"white\";\n  const labelBackground = type === \"number\" ? \"white\" : primaryColor;\n  return (\n    <Stat\n      type={type}\n      leftText={field1}\n      onLeftTextBlur={(text) => setField1(text)}\n      label={label}\n      rightText={field2}\n      onRightTextBlur={(text) => setField2(text)}\n      labelColor={labelColor}\n      labelBackground={labelBackground}\n    />\n  );\n};\n\nConnectedStat.defaultProps = {\n  type: \"number\",\n};\n\nexport const MostCommonKillMove: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat type=\"text\" param1=\"mckm1\" param2=\"mckm2\" label=\"MOST COMMON KILL MOVE\" {...props} />;\n};\n\nexport const MostCommonNeutralOpener: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat type=\"text\" param1=\"mcno1\" param2=\"mcno2\" label=\"MOST COMMON NEUTRAL OPENER\" {...props} />;\n};\n\nexport const AverageKillPercent: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat param1=\"akp1\" param2=\"akp2\" label=\"AVERAGE KILL PERCENT\" {...props} />;\n};\n\nexport const NeutralWins: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat param1=\"nw1\" param2=\"nw2\" label=\"NEUTRAL WINS\" {...props} />;\n};\n\nexport const DamagePerOpening: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat param1=\"dpo1\" param2=\"dpo2\" label=\"DAMAGE / OPENING\" {...props} />;\n};\n\nexport const InputsPerMinute: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat param1=\"ipm1\" param2=\"ipm2\" label=\"INPUTS / MINUTE\" {...props} />;\n};\n\nexport const OpeningsPerKill: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat param1=\"opk1\" param2=\"opk2\" label=\"OPENINGS / KILL\" {...props} />;\n};\n\nexport const TotalDamageDone: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat param1=\"tdd1\" param2=\"tdd2\" label=\"TOTAL DAMAGE DONE\" {...props} />;\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nimport { GameDisplay } from \"../GameDisplay\";\nimport {\n  AverageKillPercent,\n  DamagePerOpening,\n  InputsPerMinute,\n  MostCommonKillMove,\n  MostCommonNeutralOpener,\n  NeutralWins,\n  OpeningsPerKill,\n  TotalDamageDone,\n} from \"./Statistics\";\n\nconst Divider = styled.div`\n  content: \" \";\n  display: block;\n  height: 0.1rem;\n  width: 100%;\n  margin-top: 0.7rem;\n  background-color: rgba(255, 255, 255, 0.05);\n`;\n\nexport const StatDisplay: React.FC<{\n  primaryColor: string;\n  secondaryColor: string;\n  leftColor: string;\n  rightColor: string;\n}> = (props) => {\n  const [winningSide] = useParam(\"winner\");\n  const { leftColor, rightColor, ...theme } = props;\n  return (\n    <div\n      css={css`\n        background: linear-gradient(to right, ${props.secondaryColor}, transparent, ${props.secondaryColor});\n        width: 100%;\n      `}\n    >\n      <div\n        css={css`\n          display: grid;\n          grid-template-columns: 100%;\n          grid-row-gap: 2rem;\n          margin: 4rem;\n        `}\n      >\n        <MostCommonKillMove {...theme} />\n        <MostCommonNeutralOpener {...theme} />\n        <Divider />\n        <OpeningsPerKill {...theme} />\n        <TotalDamageDone {...theme} />\n        <AverageKillPercent {...theme} />\n        <NeutralWins {...theme} />\n        <Divider />\n        <GameDisplay winningSide={winningSide} leftColor={leftColor} rightColor={rightColor} />\n      </div>\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { useParam } from \"lib/hooks\";\nimport { PortColor } from \"lib/portColor\";\nimport React from \"react\";\nimport { Theme } from \"styles/theme\";\n\nimport { CharDisplay } from \"./CharDisplay\";\nimport { NameBlock } from \"./NameBlock\";\nimport { ScoreBlock } from \"./ScoreBlock\";\nimport { StatDisplay } from \"./StatDisplay\";\n\nconst Outer = styled.div`\n  position: relative;\n  width: 100%;\n  display: grid;\n  grid-template-columns: 20% 60% 20%;\n`;\n\nexport const RenderDisplay: React.FC<Theme> = (theme) => {\n  const [leftColor] = useParam(\"leftColor\", PortColor.P1);\n  const [rightColor] = useParam(\"rightColor\", PortColor.P2);\n  return (\n    <Outer>\n      <div\n        css={css`\n          justify-self: end;\n          width: 100%;\n        `}\n      >\n        <CharDisplay theme={leftColor} charParam=\"char1\" colorParam=\"color1\" align=\"right\" />\n      </div>\n      <StatDisplay leftColor={leftColor} rightColor={rightColor} {...theme} />\n      <div\n        css={css`\n          width: 100%;\n        `}\n      >\n        <CharDisplay theme={rightColor} charParam=\"char2\" colorParam=\"color2\" align=\"left\" />\n      </div>\n      <div\n        css={css`\n          position: absolute;\n          bottom: 15%;\n          display: inline-flex;\n          width: 98%;\n          margin: 0 1%;\n        `}\n      >\n        <div\n          css={css`\n            width: 100%;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n          `}\n        >\n          <div\n            css={css`\n              width: 20%;\n            `}\n          >\n            <NameBlock nameParam=\"name1\" subtitleParam=\"sub1\" defaultName=\"Player\" {...theme} />\n          </div>\n          <div\n            css={css`\n              width: 20%;\n            `}\n          >\n            <NameBlock nameParam=\"name2\" subtitleParam=\"sub2\" defaultName=\"Player\" {...theme} />\n          </div>\n        </div>\n      </div>\n      <div\n        css={css`\n          position: absolute;\n          bottom: -6rem;\n          width: 100%;\n          display: flex;\n          justify-content: center;\n        `}\n      >\n        <ScoreBlock primaryColor={theme.primaryColor} />\n      </div>\n    </Outer>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { Header } from \"components/Header\";\nimport { Settings } from \"containers/Settings\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { defaultTheme, GlobalTheme } from \"styles/theme\";\n\nimport { RenderDisplay } from \"../containers/RenderDisplay\";\nimport poweredByImage from \"../styles/images/powered-by.png\";\n\nexport const RenderView: React.FC = () => {\n  const [primaryColor] = useParam(\"primaryColor\", defaultTheme.primaryColor);\n  const [secondaryColor] = useParam(\"secondaryColor\", defaultTheme.secondaryColor);\n  return (\n    <div\n      css={css`\n        padding: 0 12rem;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        &:hover {\n          .settings {\n            opacity: 1;\n          }\n        }\n      `}\n    >\n      <GlobalTheme primaryColor={primaryColor} secondaryColor={secondaryColor} />\n      <Link to=\"/\" style={{ textDecoration: \"inherit\", color: \"inherit\" }} title=\"Home\">\n        <Header>Post Match Stats</Header>\n      </Link>\n      <div\n        css={css`\n          margin-bottom: 2rem;\n        `}\n      >\n        <a href=\"https://slippi.gg\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img\n            alt=\"Powered by Slippi\"\n            title=\"Open Slippi.gg homepage\"\n            src={poweredByImage}\n            css={css`\n              max-height: 5rem;\n            `}\n          />\n        </a>\n      </div>\n      <RenderDisplay primaryColor={primaryColor} secondaryColor={secondaryColor} />\n      <div\n        className=\"settings\"\n        css={css`\n          opacity: 0.1;\n          position: absolute;\n          left: 0;\n          top: 100%;\n          height: 100%;\n          width: 100%;\n          z-index: 10;\n        `}\n      >\n        <Settings />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { hot } from \"react-hot-loader/root\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport { RandomView } from \"views/RandomView\";\n\nimport { AppProvider } from \"./store\";\nimport { MainView } from \"./views/MainView\";\nimport { RenderView } from \"./views/RenderView\";\n\nconst App: React.FC = () => {\n  return (\n    <AppProvider>\n      <Router basename=\"/\">\n        <Route exact path=\"/\" component={MainView} />\n        <Route path=\"/render\" component={RenderView} />\n        <Route path=\"/random\" component={RandomView} />\n      </Router>\n    </AppProvider>\n  );\n};\n\nexport default hot(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"./index.scss\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* eslint-disable */\n\n/*\n * Taken from: https://github.com/project-slippi/slippi-set-stats/blob/master/main.js\n */\n\nconst { stages: stageUtil, moves: moveUtil, characters: characterUtil } = require(\"@slippi/slippi-js\");\nconst moment = require(\"moment\");\nconst _ = require(\"lodash\");\n\nconst stats = {\n  OPENINGS_PER_KILL: \"openingsPerKill\",\n  DAMAGE_PER_OPENING: \"damagePerOpening\",\n  NEUTRAL_WINS: \"neutralWins\",\n  KILL_MOVES: \"killMoves\",\n  NEUTRAL_OPENER_MOVES: \"neutralOpenerMoves\",\n  EARLY_KILLS: \"earlyKills\",\n  LATE_DEATHS: \"lateDeaths\",\n  SELF_DESTRUCTS: \"selfDestructs\",\n  INPUTS_PER_MINUTE: \"inputsPerMinute\",\n  AVG_KILL_PERCENT: \"avgKillPercent\",\n  HIGH_DAMAGE_PUNISHES: \"highDamagePunishes\",\n  DAMAGE_DONE: \"damageDone\",\n};\n\nconst statDefininitions = {\n  [stats.OPENINGS_PER_KILL]: {\n    id: stats.OPENINGS_PER_KILL,\n    name: \"Openings / Kill\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"openingsPerKill\", 1);\n    },\n  },\n  [stats.DAMAGE_PER_OPENING]: {\n    id: stats.DAMAGE_PER_OPENING,\n    name: \"Damage / Opening\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"damagePerOpening\", 1);\n    },\n  },\n  [stats.NEUTRAL_WINS]: {\n    id: stats.NEUTRAL_WINS,\n    name: \"Neutral Wins\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 0,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"neutralWinRatio\", 0, \"count\");\n    },\n  },\n  [stats.KILL_MOVES]: {\n    id: stats.KILL_MOVES,\n    name: \"Most Common Kill Move\",\n    type: \"text\",\n    calculate: (games, playerIndex) => {\n      const killMoves = _.flatMap(games, (game) => {\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        const conversionsForPlayer = _.filter(conversions, (conversion) => {\n          const isForPlayer = conversion.playerIndex === playerIndex;\n          const didKill = conversion.didKill;\n          return isForPlayer && didKill;\n        });\n\n        return _.map(conversionsForPlayer, (conversion) => {\n          return _.last(conversion.moves);\n        });\n      });\n\n      const killMovesByMove = _.groupBy(killMoves, \"moveId\");\n      const killMoveCounts = _.map(killMovesByMove, (moves) => {\n        const move = _.first(moves);\n        return {\n          count: moves.length,\n          id: move.moveId,\n          name: moveUtil.getMoveName(move.moveId),\n          shortName: moveUtil.getMoveShortName(move.moveId),\n        };\n      });\n\n      const orderedKillMoveCounts = _.orderBy(killMoveCounts, [\"count\"], [\"desc\"]);\n      const topKillMove = _.first(orderedKillMoveCounts);\n      let simpleText = \"N/A\";\n      if (topKillMove) {\n        simpleText = `${topKillMove.shortName} (${topKillMove.count})`;\n      }\n\n      return {\n        result: orderedKillMoveCounts,\n        simple: {\n          text: simpleText,\n        },\n      };\n    },\n  },\n  [stats.NEUTRAL_OPENER_MOVES]: {\n    id: stats.NEUTRAL_OPENER_MOVES,\n    name: \"Most Common Neutral Opener\",\n    type: \"text\",\n    calculate: (games, playerIndex) => {\n      const neutralMoves = _.flatMap(games, (game) => {\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        const conversionsForPlayer = _.filter(conversions, (conversion) => {\n          const isForPlayer = conversion.playerIndex === playerIndex;\n          const isNeutralWin = conversion.openingType === \"neutral-win\";\n          return isForPlayer && isNeutralWin;\n        });\n\n        return _.map(conversionsForPlayer, (conversion) => {\n          return _.first(conversion.moves);\n        });\n      });\n\n      // TODO: This following code is repeated from kill move code, put in function\n\n      const neutralMovesByMove = _.groupBy(neutralMoves, \"moveId\");\n      const neutralMoveCounts = _.map(neutralMovesByMove, (moves) => {\n        const move = _.first(moves);\n        return {\n          count: moves.length,\n          id: move.moveId,\n          name: moveUtil.getMoveName(move.moveId),\n          shortName: moveUtil.getMoveShortName(move.moveId),\n        };\n      });\n\n      const orderedNeutralMoveCounts = _.orderBy(neutralMoveCounts, [\"count\"], [\"desc\"]);\n      const topNeutralMove = _.first(orderedNeutralMoveCounts);\n      let simpleText = \"N/A\";\n      if (topNeutralMove) {\n        simpleText = `${topNeutralMove.shortName} (${topNeutralMove.count})`;\n      }\n\n      return {\n        result: orderedNeutralMoveCounts,\n        simple: {\n          text: simpleText,\n        },\n      };\n    },\n  },\n  [stats.EARLY_KILLS]: {\n    id: stats.EARLY_KILLS,\n    name: \"Earliest Kill\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const oppStocks = _.flatMap(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        return _.filter(stocks, (stock) => {\n          const isOpp = stock.playerIndex !== playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isOpp && hasEndPercent;\n        });\n      });\n\n      const orderedOppStocks = _.orderBy(oppStocks, [\"endPercent\"], [\"asc\"]);\n      const earliestKillStock = _.first(orderedOppStocks);\n      const simple = {\n        text: \"N/A\",\n        number: null,\n      };\n\n      if (earliestKillStock) {\n        simple.number = earliestKillStock.endPercent;\n        simple.text = simple.number.toFixed(1);\n      }\n\n      return {\n        result: _.take(orderedOppStocks, 5),\n        simple: simple,\n      };\n    },\n  },\n  [stats.LATE_DEATHS]: {\n    id: stats.LATE_DEATHS,\n    name: \"Latest Death\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const playerStocks = _.flatMap(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        return _.filter(stocks, (stock) => {\n          const isPlayer = stock.playerIndex === playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isPlayer && hasEndPercent;\n        });\n      });\n\n      const orderedPlayerStocks = _.orderBy(playerStocks, [\"endPercent\"], [\"desc\"]);\n      const latestDeathStock = _.first(orderedPlayerStocks);\n      const simple = {\n        text: \"N/A\",\n        number: null,\n      };\n\n      if (latestDeathStock) {\n        simple.number = latestDeathStock.endPercent;\n        simple.text = simple.number.toFixed(1);\n      }\n\n      return {\n        result: _.take(orderedPlayerStocks, 5),\n        simple: simple,\n      };\n    },\n  },\n  [stats.SELF_DESTRUCTS]: {\n    id: stats.SELF_DESTRUCTS, // Only show this one if greater than 2 for one player\n    name: \"Total Self-Destructs\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 0,\n    calculate: (games, playerIndex) => {\n      const sdCounts = _.map(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        const playerEndedStocks = _.filter(stocks, (stock) => {\n          const isPlayer = stock.playerIndex === playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isPlayer && hasEndPercent;\n        });\n\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        const oppKillConversions = _.filter(conversions, (conversion) => {\n          const isOpp = conversion.playerIndex !== playerIndex;\n          const didKill = conversion.didKill;\n          return isOpp && didKill;\n        });\n\n        return playerEndedStocks.length - oppKillConversions.length;\n      });\n\n      const sdSum = _.sum(sdCounts);\n\n      return {\n        result: sdSum,\n        simple: {\n          number: sdSum,\n          text: `${sdSum}`,\n        },\n      };\n    },\n  },\n  [stats.INPUTS_PER_MINUTE]: {\n    id: stats.INPUTS_PER_MINUTE,\n    name: \"Inputs / Minute\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"inputsPerMinute\", 1);\n    },\n  },\n  [stats.AVG_KILL_PERCENT]: {\n    id: stats.AVG_KILL_PERCENT,\n    name: \"Average Kill Percent\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const oppStocks = _.flatMap(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        return _.filter(stocks, (stock) => {\n          const isOpp = stock.playerIndex !== playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isOpp && hasEndPercent;\n        });\n      });\n\n      const result = {\n        total: oppStocks.length,\n        count: _.sumBy(oppStocks, \"endPercent\") || 0,\n      };\n\n      result.ratio = result.total ? result.count / result.total : null;\n\n      return {\n        result: result,\n        simple: genSimpleFromRatio(result, 1),\n      };\n    },\n  },\n  [stats.HIGH_DAMAGE_PUNISHES]: {\n    id: stats.HIGH_DAMAGE_PUNISHES,\n    name: \"Highest Damage Punish\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const punishes = _.flatMap(games, (game) => {\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        return _.filter(conversions, (conversion) => {\n          const isForPlayer = conversion.playerIndex === playerIndex;\n          const hasEndPercent = conversion.endPercent !== null;\n          return isForPlayer && hasEndPercent;\n        });\n      });\n\n      const getDamageDone = (punish) => punish.endPercent - punish.startPercent;\n      const orderedPunishes = _.orderBy(punishes, [getDamageDone], \"desc\");\n      const topPunish = _.first(orderedPunishes);\n      const simple = {\n        text: \"N/A\",\n        number: null,\n      };\n\n      if (topPunish) {\n        simple.number = getDamageDone(topPunish);\n        simple.text = simple.number.toFixed(1);\n      }\n\n      return {\n        result: _.take(orderedPunishes, 5),\n        simple: simple,\n      };\n    },\n  },\n  [stats.DAMAGE_DONE]: {\n    id: stats.DAMAGE_DONE,\n    name: \"Total Damage Done\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"damagePerOpening\", 1, \"count\");\n    },\n  },\n};\n\nfunction genOverallRatioStat(games, playerIndex, field, fixedNum, type = \"ratio\") {\n  const statRatios = _.map(games, (game) => {\n    const overallStats = _.get(game, [\"stats\", \"overall\"]);\n    const overallStatsByPlayer = _.keyBy(overallStats, \"playerIndex\");\n    const overallStatsForPlayer = overallStatsByPlayer[playerIndex];\n    return overallStatsForPlayer[field];\n  });\n\n  const avg = averageRatios(statRatios);\n  const simple = genSimpleFromRatio(avg, fixedNum, type);\n\n  return {\n    result: avg,\n    simple: simple,\n  };\n}\n\nfunction averageRatios(ratios) {\n  const result = {};\n\n  result.count = _.sumBy(ratios, \"count\") || 0;\n  result.total = _.sumBy(ratios, \"total\") || 0;\n  result.ratio = result.total ? result.count / result.total : null;\n\n  return result;\n}\n\nfunction genSimpleFromRatio(ratio, fixedNum, type = \"ratio\") {\n  const result = {};\n\n  switch (type) {\n    case \"ratio\":\n      result.number = ratio.ratio;\n      result.text = ratio.ratio !== null ? ratio.ratio.toFixed(fixedNum) : \"N/A\";\n      break;\n    case \"count\":\n      result.number = ratio.count;\n      result.text = ratio.count.toFixed(fixedNum);\n      break;\n  }\n\n  return result;\n}\n\n/*\nfunction parseFilesInFolder() {\n  const dirPath = process.cwd();\n  const dirContents = fs.readdirSync(dirPath, { withFileTypes: true });\n\n  console.log(\"Reading files in directory...\\n\");\n  const gameDetails = _.chain(dirContents).filter((item) => {\n    return item.isFile() && path.extname(item.name) === \".slp\";\n  }).map((slpItem) => {\n    const slpFilePath = path.join(dirPath, slpItem.name);\n    const game = new SlippiGame(slpFilePath);\n    return {\n      filePath: slpFilePath,\n      settings: game.getSettings(),\n      frames: game.getFrames(),\n      stats: game.getStats(),\n      metadata: game.getMetadata(),\n      latestFrame: game.getLatestFrame(),\n      gameEnd: game.getGameEnd(),\n    };\n  }).value();\n\n  return gameDetails;\n}\n*/\n\nexport function filterGames(games) {\n  // console.log(games);\n  const gamesByIsSingles = _.groupBy(games, (game) => {\n    const numberOfPlayers = game.settings.players.length;\n    return numberOfPlayers === 2;\n  });\n\n  const nonSinglesGames = _.get(gamesByIsSingles, false) || [];\n  if (_.some(nonSinglesGames)) {\n    console.log(\"The following games have been excluded because they are not singles games:\");\n    _.forEach(nonSinglesGames, (game) => {\n      console.log(game.filePath);\n    });\n    console.log();\n  }\n\n  const singlesGames = _.get(gamesByIsSingles, true) || [];\n  const gamesByPorts = _.chain(singlesGames)\n    .groupBy((game) => {\n      const ports = _.map(game.settings.players, \"port\");\n      return _.join(ports, \"-\");\n    })\n    .orderBy([\"length\"], [\"desc\"])\n    .value();\n\n  const gamesWithSamePorts = gamesByPorts.shift();\n  if (_.some(gamesByPorts)) {\n    console.log(\"The following games have been excluded because the player ports differ:\");\n    const flatGames = _.flatten(gamesByPorts);\n    _.forEach(flatGames, (game) => {\n      console.log(game.filePath);\n    });\n    console.log();\n  }\n\n  if (_.isEmpty(gamesWithSamePorts)) {\n    throw new Error(\"There were no valid games found to compute stats from.\");\n  }\n\n  console.log(`Including ${gamesWithSamePorts.length} games for stat calculation...`);\n\n  return gamesWithSamePorts;\n}\n\nfunction computeStats(games) {\n  const firstGame = _.first(games);\n  // console.log(firstGame);\n  const orderIndices = _.map(firstGame.settings.players, \"playerIndex\");\n  const reversedIndices = _.chain(orderIndices).clone().reverse().value();\n  const indices = [orderIndices, reversedIndices];\n\n  const statResults = _.flatMap(stats, (statKey) => {\n    const def = statDefininitions[statKey];\n    if (!def.calculate) {\n      return [];\n    }\n\n    const results = _.map(indices, (iIndices) => {\n      const result = def.calculate(games, iIndices[0], iIndices[1]);\n      result.port = iIndices[0] + 1;\n      return result;\n    });\n\n    const output = { ...def };\n    delete output.calculate;\n    output.results = results;\n\n    return [output];\n  });\n\n  return statResults;\n}\n\nfunction generateGameInfo(games) {\n  const getStartAt = (game) => game.metadata.startAt;\n  const orderedGames = _.orderBy(games, [getStartAt], [\"asc\"]);\n\n  const getResultForPlayer = (game, playerIndex) => {\n    // console.log(game);\n    // Calculate assumed game result\n    const gameEnd = game.gameEnd;\n    if (!gameEnd) {\n      return \"unknown\";\n    }\n\n    const players = _.get(game.settings, [\"players\"]);\n    const opp = _.filter(players, (player) => player.playerIndex !== playerIndex);\n    const oppIndex = _.get(opp, [0, \"playerIndex\"]);\n\n    switch (gameEnd.gameEndMethod) {\n      case 1:\n        // This is a TIME! ending, not implemented yet\n        return \"unknown\";\n      case 2:\n        // This is a GAME! ending\n        const latestFrame = _.get(game.latestFrame, \"players\") || [];\n        const playerStocks = _.get(latestFrame, [playerIndex, \"post\", \"stocksRemaining\"]);\n        const oppStocks = _.get(latestFrame, [oppIndex, \"post\", \"stocksRemaining\"]);\n        if (playerStocks === 0 && oppStocks === 0) {\n          return \"unknown\";\n        }\n\n        return playerStocks === 0 ? \"loser\" : \"winner\";\n      case 7:\n        return gameEnd.lrasInitiatorIndex === playerIndex ? \"loser\" : \"winner\";\n    }\n\n    return \"unknown\";\n  };\n\n  const generatePlayerInfo = (game) => (player) => {\n    // console.log(player);\n    return {\n      port: player.port,\n      characterId: player.characterId,\n      characterColor: player.characterColor,\n      nametag: player.nametag,\n      characterName: characterUtil.getCharacterName(player.characterId),\n      characterColor: characterUtil.getCharacterColorName(player.characterId, player.characterColor),\n      gameResult: getResultForPlayer(game, player.playerIndex),\n    };\n  };\n\n  return _.map(orderedGames, (game) => {\n    const playerInfoGen = generatePlayerInfo(game);\n\n    return {\n      stage: {\n        id: game.settings.stageId,\n        name: stageUtil.getStageName(game.settings.stageId),\n      },\n      players: _.map(game.settings.players, playerInfoGen),\n      startTime: game.metadata.startAt,\n      duration: convertFrameCountToDurationString(game.stats.lastFrame),\n    };\n  });\n}\n\nfunction generateBtsSummary(summary) {\n  const fixedStats = [stats.KILL_MOVES, stats.NEUTRAL_OPENER_MOVES, stats.OPENINGS_PER_KILL, stats.DAMAGE_DONE];\n\n  const randomizeCount = 2;\n\n  const generateSummaryItem = (fullStatOutput) => {\n    const type = fullStatOutput.type;\n\n    const output = { ...fullStatOutput };\n    output.results = _.map(fullStatOutput.results, (result) => _.get(result, [\"simple\", type]));\n\n    return output;\n  };\n\n  const result = [];\n\n  const statsById = _.keyBy(summary, \"id\");\n  const statsToRandomizeById = statsById;\n\n  // Add fixed stats\n  _.forEach(fixedStats, (statId) => {\n    const statOutput = statsById[statId];\n    result.push(generateSummaryItem(statOutput));\n\n    delete statsToRandomizeById[statId];\n  });\n\n  // Deal with SDs\n  const sdStat = statsById[stats.SELF_DESTRUCTS];\n  const sds1 = sdStat.results[0].simple.number;\n  const sds2 = sdStat.results[0].simple.number;\n  const shouldIncludeSds = sds1 > 1 || sds2 > 1;\n  if (!shouldIncludeSds) {\n    delete statsToRandomizeById[stats.SELF_DESTRUCTS];\n  }\n\n  const shuffled = _.shuffle(statsToRandomizeById);\n  const shuffledToInclude = _.take(shuffled, randomizeCount);\n  _.forEach(shuffledToInclude, (statOutput) => {\n    result.push(generateSummaryItem(statOutput));\n  });\n\n  return result;\n}\n\nexport function convertFrameCountToDurationString(frameCount) {\n  const duration = moment.duration(frameCount / 60, \"seconds\");\n  return moment.utc(duration.as(\"milliseconds\")).format(\"m:ss\");\n}\n\nexport default function generateOutput(games) {\n  const stats = computeStats(games);\n\n  return {\n    games: generateGameInfo(games),\n    summary: stats,\n    btsSummary: generateBtsSummary(stats),\n  };\n}\n\n// function writeToFile(output) {\n//   console.log(util.inspect(output, { depth: 6, colors: true }));\n//   fs.writeFileSync('output.json', JSON.stringify(output));\n//   console.log(\"Finished writting stats to output.json!\");\n// }\n\n// export default function (games) {\n//   const filteredGames = filterGames(games);\n//   const output = generateOutput(filteredGames);\n//   writeToFile(output);\n//   console.log(output);\n//   return output;\n// }\n"],"sourceRoot":""}
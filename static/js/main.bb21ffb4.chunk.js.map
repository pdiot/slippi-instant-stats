{"version":3,"sources":["store/reducers.ts","store/context.tsx","components/DropPad.tsx","components/FileList/FileItem.tsx","components/FileList/index.tsx","containers/FileListInput.tsx","lib/processStats.ts","views/MainView.tsx","lib/hooks/useParam.ts","lib/hooks/useKeyPress.ts","components/InlineEdit/index.tsx","lib/hooks/useOnClickOutside.ts","components/Stat.tsx","containers/StatDisplay/Statistics.tsx","containers/StatDisplay/index.tsx","containers/RenderDisplay.tsx","views/RenderView.tsx","App.tsx","serviceWorker.ts","index.tsx","lib/stats.js","lib/readFile.ts","styles/images/powered-by.png"],"names":["Types","initialState","files","AppContext","createContext","state","dispatch","mainReducer","action","type","ADD_GAME","payload","filename","game","details","fileToReplace","findIndex","f","file","name","loading","SET_ERROR","error","ADD_FILE","Boolean","find","push","reducer","AppProvider","children","useReducer","Provider","value","Container","styled","div","props","isDragAccept","isDragActive","getColor","DropPad","useDropzone","getRootProps","getInputProps","isDragReject","className","FileItem","FileList","map","key","ProcessButton","button","FileListInput","history","useHistory","useContext","React","useState","stats","onDrop","useCallback","acceptedFiles","forEach","a","readFileAsSlippiGame","generateGameDetails","finishedProcessing","buttonText","length","css","accept","disabled","onClick","search","gameDetails","generateStats","summary","games","params","btsSummary","s","id","opk1","results","simple","text","opk2","dpo1","dpo2","nw1","nw2","console","log","playerRes","result","opponentRes","mckm1","shortName","toUpperCase","count","mckm2","mcno1","mcno2","ipm1","ipm2","akp1","akp2","tdd1","tdd2","URLSearchParams","processStats","filter","toString","pathname","readOnly","JSON","stringify","MainView","paramMap","reduce","val","min","max","randomVal","Math","random","toFixed","useParam","defaultValue","setValue","location","useLocation","useEffect","currentValue","get","setParam","set","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","window","addEventListener","removeEventListener","InlineEdit","ref","handler","onSetText","textAlign","isInputActive","setIsInputActive","inputValue","setInputValue","wrapperRef","useRef","textRef","inputRef","tab","enter","esc","listener","event","current","contains","target","document","focus","style","onChange","e","defaultProps","StatLabel","p","labelBackground","labelColor","StatContent","OuterStat","Stat","label","leftText","rightText","onLeftTextBlur","onRightTextBlur","ConnectedStat","param1","param2","field1","setField1","field2","setField2","AverageKillPercent","NeutralWins","MostCommonKillMove","MostCommonNeutralOpener","OpeningsPerKill","TotalDamageDone","StatDisplay","Outer","RenderDisplay","Header","h1","RenderView","to","textDecoration","color","alt","src","poweredByImage","hot","basename","exact","path","component","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","require","stageUtil","stages","moveUtil","moves","characterUtil","characters","moment","_","OPENINGS_PER_KILL","DAMAGE_PER_OPENING","NEUTRAL_WINS","KILL_MOVES","NEUTRAL_OPENER_MOVES","EARLY_KILLS","LATE_DEATHS","SELF_DESTRUCTS","INPUTS_PER_MINUTE","AVG_KILL_PERCENT","HIGH_DAMAGE_PUNISHES","DAMAGE_DONE","statDefininitions","betterDirection","recommendedRounding","calculate","playerIndex","genOverallRatioStat","killMoves","flatMap","conversions","conversionsForPlayer","conversion","isForPlayer","didKill","last","killMovesByMove","groupBy","killMoveCounts","move","first","moveId","getMoveName","getMoveShortName","orderedKillMoveCounts","orderBy","topKillMove","simpleText","neutralMoves","isNeutralWin","openingType","neutralMovesByMove","neutralMoveCounts","orderedNeutralMoveCounts","topNeutralMove","oppStocks","stocks","stock","isOpp","hasEndPercent","endPercent","orderedOppStocks","earliestKillStock","number","take","playerStocks","isPlayer","orderedPlayerStocks","latestDeathStock","sdCounts","playerEndedStocks","oppKillConversions","sdSum","sum","total","sumBy","ratio","genSimpleFromRatio","punishes","getDamageDone","punish","startPercent","orderedPunishes","topPunish","field","fixedNum","statRatios","overallStats","keyBy","avg","averageRatios","ratios","computeStats","firstGame","orderIndices","settings","players","indices","chain","clone","reverse","statKey","def","iIndices","port","output","generateGameInfo","orderedGames","metadata","startAt","generatePlayerInfo","player","characterId","characterColor","nametag","characterName","getCharacterName","getCharacterColorName","gameEnd","opp","oppIndex","gameEndMethod","latestFrame","lrasInitiatorIndex","getResultForPlayer","playerInfoGen","stage","stageId","getStageName","startTime","duration","convertFrameCountToDurationString","lastFrame","generateBtsSummary","fixedStats","generateSummaryItem","fullStatOutput","statsById","statsToRandomizeById","statId","statOutput","sdStat","sds1","sds2","shuffled","shuffle","shuffledToInclude","frameCount","utc","as","format","generateOutput","gamesByIsSingles","nonSinglesGames","some","filePath","singlesGames","gamesByPorts","ports","join","gamesWithSamePorts","shift","flatGames","flatten","isEmpty","Error","filterGames","readFileAsArrayBuffer","data","arr","Int8Array","buf","Buffer","from","SlippiGame","getSettings","frames","getFrames","getStats","getMetadata","getLatestFrame","getGameEnd","Promise","resolve","reject","fr","FileReader","onabort","onerror","readAsBinaryString","string","this","resultString","Uint8Array","i","charCodeAt","buffer","readAsArrayBuffer","module","exports"],"mappings":"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","file":"static/js/main.bb21ffb4.chunk.js","sourcesContent":["import SlippiGame from \"@slippi/slippi-js\";\n\nimport { GameDetails, InitialStateType } from \"./types\";\n\ntype ActionMap<M extends { [index: string]: any }> = {\n  [Key in keyof M]: M[Key] extends undefined\n    ? {\n        type: Key;\n      }\n    : {\n        type: Key;\n        payload: M[Key];\n      };\n};\n\nexport enum Types {\n  ADD_GAME = \"ADD_GAME\",\n  SET_ERROR = \"SET_ERROR\",\n  ADD_FILE = \"ADD_FILE\",\n}\n\ntype ActionPayload = {\n  [Types.ADD_GAME]: {\n    filename: string;\n    game: SlippiGame;\n    details: GameDetails;\n  };\n  [Types.SET_ERROR]: {\n    filename: string;\n    error: any;\n  };\n  [Types.ADD_FILE]: {\n    file: File;\n  };\n};\n\nexport type ReducerActions = ActionMap<ActionPayload>[keyof ActionMap<ActionPayload>];\n\nexport const reducer = (state: InitialStateType, action: ReducerActions) => {\n  switch (action.type) {\n    case Types.ADD_GAME: {\n      const { filename, game, details } = action.payload;\n      const files = state.files;\n      const fileToReplace = files.findIndex((f) => f.file.name === filename);\n      if (fileToReplace !== -1) {\n        files[fileToReplace].game = game;\n        files[fileToReplace].details = details;\n        files[fileToReplace].loading = false;\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.SET_ERROR: {\n      const { filename, error } = action.payload;\n      const files = state.files;\n      const fileToReplace = files.findIndex((f) => f.file.name === filename);\n      if (fileToReplace !== -1) {\n        files[fileToReplace].error = error;\n        files[fileToReplace].loading = false;\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.ADD_FILE: {\n      const { file } = action.payload;\n      const files = state.files;\n      const alreadyExists = Boolean(files.find((f) => f.file.name === file.name));\n      if (!alreadyExists) {\n        files.push({\n          file,\n          loading: true,\n          game: null,\n          details: null,\n        });\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import React, { createContext, Dispatch, useReducer } from \"react\";\n\nimport { reducer, ReducerActions } from \"./reducers\";\nimport { InitialStateType } from \"./types\";\n\nconst initialState: InitialStateType = {\n  files: [],\n};\n\nconst AppContext = createContext<{\n  state: InitialStateType;\n  dispatch: Dispatch<ReducerActions>;\n}>({\n  state: initialState,\n  dispatch: () => null,\n});\n\nconst mainReducer = (state: InitialStateType, action: ReducerActions) => reducer(state, action);\n\nconst AppProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(mainReducer, initialState);\n\n  return <AppContext.Provider value={{ state, dispatch }}>{children}</AppContext.Provider>;\n};\n\nexport { AppProvider, AppContext };\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { DropzoneOptions, useDropzone } from \"react-dropzone\";\n\nconst getColor = (props: any) => {\n  if (props.isDragAccept) {\n    return \"#00e676\";\n  }\n  if (props.isDragActive) {\n    return \"#2196f3\";\n  }\n  return \"#eeeeee\";\n};\n\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-width: 2px;\n  border-radius: 2px;\n  border-color: ${(props) => getColor(props)};\n  border-style: dashed;\n  background-color: #fafafa;\n  color: #bdbdbd;\n  outline: none;\n  transition: border 0.24s ease-in-out;\n`;\n\nexport const DropPad: React.FC<Partial<DropzoneOptions>> = (props) => {\n  const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone(props);\n\n  return (\n    <div className=\"container\">\n      <Container {...getRootProps({ isDragActive, isDragAccept, isDragReject })}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n      </Container>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ProcessedFile } from \"store/types\";\n\nexport const FileItem: React.FC<ProcessedFile> = (props) => {\n  const { file, loading, error } = props;\n  return (\n    <div>\n      {file.name} {loading && <span>processing...</span>} {error && <span>error :c</span>}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport { ProcessedFile } from \"store/types\";\nimport { FileItem } from \"./FileItem\";\n\nexport interface FileListProps {\n  files: ProcessedFile[];\n}\n\nexport const FileList: React.FC<FileListProps> = (props) => {\n  const { files } = props;\n  return (\n    <div>\n      {files.map((f) => (\n        <FileItem key={f.file.name} {...f} />\n      ))}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { DropPad } from \"components/DropPad\";\nimport { FileList } from \"components/FileList\";\nimport { GameDetails, generateGameDetails, readFileAsSlippiGame } from \"lib/readFile\";\nimport React, { useCallback, useContext } from \"react\";\nimport styled from \"@emotion/styled\";\nimport generateStats from \"lib/stats\";\n\nimport { AppContext, Types } from \"../store\";\nimport { processStats } from \"lib/processStats\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ProcessButton = styled.button`\n  background: #286163;\n  border: none;\n  color: inherit;\n  cursor: pointer;\n  font: inherit;\n  padding: 1rem 0rem;\n  width: 100%;\n  font-weight: 700;\n  font-size: 3rem;\n  &:disabled {\n    opacity: 0.65;\n    cursor: not-allowed;\n  }\n`;\n\nexport const FileListInput: React.FC = () => {\n  const history = useHistory();\n  const { state, dispatch } = useContext(AppContext);\n  const [stats, setStats] = React.useState<any>(null);\n\n  const onClick = () => {\n    const gameDetails = state.files.filter((f) => f.details !== null).map((f) => f.details as GameDetails);\n    // const s = generateStats(gameDetails);\n    // setStats(s);\n    const params = processStats(gameDetails);\n    const search = \"?\" + params.toString();\n    history.push({\n      pathname: \"/render\",\n      search,\n    });\n  };\n\n  const onDrop = useCallback(\n    (acceptedFiles: File[]) => {\n      acceptedFiles.forEach(async (file) => {\n        dispatch({\n          type: Types.ADD_FILE,\n          payload: {\n            file,\n          },\n        });\n        try {\n          const game = await readFileAsSlippiGame(file);\n          const details = generateGameDetails(file.name, game);\n          dispatch({\n            type: Types.ADD_GAME,\n            payload: {\n              filename: file.name,\n              game,\n              details,\n            },\n          });\n        } catch (err) {\n          dispatch({\n            type: Types.SET_ERROR,\n            payload: {\n              filename: file.name,\n              error: err,\n            },\n          });\n        }\n      });\n    },\n    [dispatch]\n  );\n\n  const finishedProcessing = !state.files.find((f) => f.loading);\n  const ready = state.files.length === 0 || finishedProcessing;\n  const buttonText = ready ? \"COMPUTE STATS\" : \"PLEASE WAIT\";\n  return (\n    <div\n      css={css`\n        position: relative;\n        border: solid 1px black;\n        height: 500px;\n        width: 500px;\n      `}\n    >\n      <DropPad accept=\".slp\" onDrop={onDrop} />\n      <FileList files={state.files} />\n      {finishedProcessing ? <div>done</div> : <div>still processing...</div>}\n      <ProcessButton disabled={state.files.length === 0 || !finishedProcessing} onClick={onClick}>\n        {buttonText}\n      </ProcessButton>\n      <textarea readOnly value={JSON.stringify(stats, null, 2)} />\n    </div>\n  );\n};\n","import generateStats from \"lib/stats\";\n\nimport { GameDetails } from \"store/types\";\n\nexport function processStats(gameDetails: GameDetails[]): URLSearchParams {\n  const { games, summary, btsSummary } = generateStats(gameDetails);\n\n  const params: any = {}; // \"mckm1\": , \"mckm2\", \"mcno1\", \"mcno2\", \"opk1\", \"opk2\", \"tdd1\", \"tdd2\", \"dpo1\", \"dpo2\", \"ipm1\", \"ipm2\", \"akp1\", \"akp2\", \"nw1\", \"nw2\"};\n  (summary as any[]).forEach((s) => {\n    switch (s.id) {\n      case \"openingsPerKill\": {\n        params.opk1 = s.results[0].simple.text;\n        params.opk2 = s.results[1].simple.text;\n        break;\n      }\n      case \"damagePerOpening\": {\n        params.dpo1 = s.results[0].simple.text;\n        params.dpo2 = s.results[1].simple.text;\n        break;\n      }\n      case \"neutralWins\": {\n        params.nw1 = s.results[0].simple.text;\n        params.nw2 = s.results[1].simple.text;\n        break;\n      }\n      case \"killMoves\": {\n        console.log(s);\n        const playerRes = s.results[0].result[0];\n        const opponentRes = s.results[1].result[0];\n        params.mckm1 = `${playerRes.shortName.toUpperCase()} - ${playerRes.count}`;\n        params.mckm2 = `${opponentRes.shortName.toUpperCase()} - ${opponentRes.count}`;\n        break;\n      }\n      case \"neutralOpenerMoves\": {\n        const playerRes = s.results[0].result[0];\n        const opponentRes = s.results[1].result[0];\n        params.mcno1 = `${playerRes.shortName.toUpperCase()} - ${playerRes.count}`;\n        params.mcno2 = `${opponentRes.shortName.toUpperCase()} - ${opponentRes.count}`;\n        break;\n      }\n      case \"inputsPerMinute\": {\n        params.ipm1 = s.results[0].simple.text;\n        params.ipm2 = s.results[1].simple.text;\n        break;\n      }\n      case \"avgKillPercent\": {\n        params.akp1 = s.results[0].simple.text;\n        params.akp2 = s.results[1].simple.text;\n        break;\n      }\n      case \"damageDone\": {\n        params.tdd1 = s.results[0].simple.text;\n        params.tdd2 = s.results[1].simple.text;\n        break;\n      }\n    }\n  });\n  return new URLSearchParams(params);\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { FileListInput } from \"containers/FileListInput\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nexport const MainView: React.FC = () => {\n  const history = useHistory();\n\n  const onClick = () => {\n    const params = [\"mckm1\", \"mckm2\", \"mcno1\", \"mcno2\", \"opk1\", \"opk2\", \"tdd1\", \"tdd2\", \"dpo1\", \"dpo2\", \"ipm1\", \"ipm2\"];\n    const paramMap = params.reduce((val, key) => {\n      const randomVal = getRandomArbitrary(50, 250);\n      return { ...val, [key]: randomVal.toFixed(1) };\n    }, {} as any);\n    const search = \"?\" + new URLSearchParams(paramMap).toString();\n    history.push({\n      pathname: \"/render\",\n      search,\n    });\n  };\n\n  return (\n    <div\n      css={css`\n        margin: 0 12rem;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      `}\n    >\n      <h1>Slippi Stats</h1>\n      <button onClick={onClick}>randomize</button>\n      <FileListInput />\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport function useParam(key: string, defaultValue = \"\") {\n  const [value, setValue] = useState<string>(defaultValue);\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const currentValue = params.get(key);\n    if (currentValue && currentValue !== value) {\n      setValue(currentValue);\n    }\n  }, [key, location, value]);\n\n  const setParam = (val: string) => {\n    const params = new URLSearchParams(location.search);\n    params.set(key, val);\n    const search = \"?\" + params.toString();\n    history.push({\n      pathname: location.pathname,\n      search,\n    });\n  };\n\n  return [value, setParam] as const;\n}\n","// From: https://usehooks.com/useKeyPress/\n\nimport { useEffect, useState } from \"react\";\n\nexport function useKeyPress(targetKey: any) {\n  // State for keeping track of whether key is pressed\n\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  // Add event listeners\n\n  useEffect(() => {\n    // If pressed key is our target key then set to true\n\n    function downHandler({ key }: any) {\n      console.log(\"key down: \", key);\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    }\n\n    // If released key is our target key then set to false\n\n    const upHandler = ({ key }: any) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n\n    window.addEventListener(\"keydown\", downHandler);\n\n    window.addEventListener(\"keyup\", upHandler);\n\n    // Remove event listeners on cleanup\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [targetKey]); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n}\n","// From: https://dev.to/joelmturner/build-an-inline-edit-text-input-with-react-hooks-4nah\n\nimport \"./index.scss\";\n\nimport { useKeyPress, useOnClickOutside } from \"lib/hooks\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nexport interface InlineEditProps {\n  text: string;\n  textAlign?: \"left\" | \"right\";\n  onSetText: (text: string) => void;\n}\n\nexport const InlineEdit: React.FC<InlineEditProps> = (props) => {\n  const { text, onSetText, textAlign } = props;\n  const [isInputActive, setIsInputActive] = useState(false);\n  const [inputValue, setInputValue] = useState(text);\n\n  const wrapperRef = useRef(null);\n  const textRef = useRef(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const tab = useKeyPress(\"Tab\");\n  const enter = useKeyPress(\"Enter\");\n  const esc = useKeyPress(\"Escape\");\n\n  useEffect(() => {\n    setInputValue(text);\n  }, [text]);\n\n  // check to see if the user clicked outside of this component\n  useOnClickOutside(wrapperRef, () => {\n    if (isInputActive) {\n      onSetText(inputValue);\n      setIsInputActive(false);\n    }\n  });\n\n  // focus the cursor in the input field on edit start\n  useEffect(() => {\n    if (isInputActive && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isInputActive]);\n\n  useEffect(() => {\n    if (isInputActive) {\n      // if Enter or tab is pressed, save the text and case the editor\n      if (enter || tab) {\n        onSetText(inputValue);\n        setIsInputActive(false);\n      }\n      // if Escape is pressed, revert the text and close the editor\n      if (esc) {\n        setInputValue(props.text);\n        setIsInputActive(false);\n      }\n    }\n  }, [tab, enter, esc, isInputActive, onSetText, inputValue, props.text]); // watch for key presses\n\n  return (\n    <span className=\"inline-text\" ref={wrapperRef}>\n      <span\n        ref={textRef}\n        onClick={() => setIsInputActive(true)}\n        className={`inline-text_copy inline-text_copy--${!isInputActive ? \"active\" : \"hidden\"}`}\n      >\n        {props.text}\n      </span>\n      <input\n        ref={inputRef}\n        style={{ textAlign }}\n        value={inputValue}\n        onChange={(e) => {\n          setInputValue(e.target.value);\n        }}\n        className={`inline-text_input inline-text_input--${isInputActive ? \"active\" : \"hidden\"}`}\n      />\n    </span>\n  );\n};\n\nInlineEdit.defaultProps = {\n  text: \"\",\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onSetText: () => {},\n};\n","// From: https://usehooks.com/useOnClickOutside/\n\nimport { useEffect } from \"react\";\n\nexport function useOnClickOutside(ref: any, handler: any) {\n  useEffect(\n    () => {\n      const listener = (event: any) => {\n        // Do nothing if clicking ref's element or descendent elements\n\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener(\"mousedown\", listener);\n\n      document.addEventListener(\"touchstart\", listener);\n\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    },\n\n    // Add ref and handler to effect dependencies\n\n    // It's worth noting that because passed in handler is a new ...\n\n    // ... function on every render that will cause this effect ...\n\n    // ... callback/cleanup to run every render. It's not a big deal ...\n\n    // ... but to optimize you can wrap handler in useCallback before ...\n\n    // ... passing it into this hook.\n\n    [ref, handler]\n  );\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\n\nimport { InlineEdit } from \"./InlineEdit\";\n\n// import CTE from \"react-click-to-edit\";\n// import EditableLabel from \"react-inline-editing\";\n\nexport interface StatProps {\n  label: string;\n  labelColor?: string;\n  labelBackground?: string;\n  leftText: string;\n  rightText: string;\n  onLeftTextBlur?: (text: string) => void;\n  onRightTextBlur?: (text: string) => void;\n}\n\nconst StatLabel = styled.div<{\n  labelBackground: string;\n  labelColor: string;\n}>`\n  background-color: ${(p) => p.labelBackground};\n  color: ${(p) => p.labelColor};\n  padding: 1rem 5rem;\n  font-weight: 700;\n  font-size: 2rem;\n  box-shadow: 0.5rem 0.5rem 0.5rem black;\n  justify-self: center;\n  z-index: 1;\n`;\n\nconst StatContent = styled.div`\n  font-weight: 800;\n  font-size: 4rem;\n`;\n\nconst OuterStat = styled.div`\n  display: grid;\n  grid-template-columns: 20% 60% 20%;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  &::before {\n    z-index: -1;\n    content: \"\";\n    display: block;\n    background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.4), transparent);\n    height: 0.1rem;\n    position: absolute;\n    width: 80%;\n    margin-left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nexport const Stat: React.FC<StatProps> = (props) => {\n  const { label, leftText, rightText, labelBackground, labelColor } = props;\n  return (\n    <OuterStat>\n      <StatContent\n        css={css`\n          justify-self: start;\n        `}\n      >\n        <InlineEdit text={leftText} onSetText={props.onLeftTextBlur!} />\n      </StatContent>\n      <StatLabel labelBackground={labelBackground!} labelColor={labelColor!}>\n        {label}\n      </StatLabel>\n      <StatContent\n        css={css`\n          justify-self: end;\n        `}\n      >\n        <InlineEdit text={rightText} textAlign=\"right\" onSetText={props.onRightTextBlur!} />\n      </StatContent>\n    </OuterStat>\n  );\n};\n\nStat.defaultProps = {\n  labelColor: \"black\",\n  labelBackground: \"white\",\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onLeftTextBlur: () => {},\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onRightTextBlur: () => {},\n};\n","import { Stat } from \"components/Stat\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\ninterface ConnectedStatProps {\n  param1: string;\n  param2: string;\n  label: string;\n}\n\nconst ConnectedStat: React.FC<ConnectedStatProps> = (props) => {\n  const { param1, param2, label } = props;\n  const [field1, setField1] = useParam(param1);\n  const [field2, setField2] = useParam(param2);\n  return (\n    <Stat\n      leftText={field1}\n      onLeftTextBlur={(text) => setField1(text)}\n      label={label}\n      rightText={field2}\n      onRightTextBlur={(text) => setField2(text)}\n    />\n  );\n};\n\nexport const AverageKillPercent: React.FC = () => {\n  return <ConnectedStat param1=\"akp1\" param2=\"akp2\" label=\"AVERAGE KILL PERCENT\" />;\n};\n\nexport const NeutralWins: React.FC = () => {\n  return <ConnectedStat param1=\"nw1\" param2=\"nw2\" label=\"NEUTRAL WINS\" />;\n};\n\nexport const DamagePerOpening: React.FC = () => {\n  return <ConnectedStat param1=\"dpo1\" param2=\"dpo2\" label=\"DAMAGE / OPENING\" />;\n};\n\nexport const InputsPerMinute: React.FC = () => {\n  return <ConnectedStat param1=\"ipm1\" param2=\"ipm2\" label=\"INPUTS / MINUTE\" />;\n};\n\nexport const MostCommonKillMove: React.FC = () => {\n  return <ConnectedStat param1=\"mckm1\" param2=\"mckm2\" label=\"MOST COMMON KILL MOVE\" />;\n};\n\nexport const MostCommonNeutralOpener: React.FC = () => {\n  return <ConnectedStat param1=\"mcno1\" param2=\"mcno2\" label=\"MOST COMMON NEUTRAL OPENER\" />;\n};\n\nexport const OpeningsPerKill: React.FC = () => {\n  return <ConnectedStat param1=\"opk1\" param2=\"opk2\" label=\"OPENINGS / KILL\" />;\n};\n\nexport const TotalDamageDone: React.FC = () => {\n  return <ConnectedStat param1=\"tdd1\" param2=\"tdd2\" label=\"TOTAL DAMAGE DONE\" />;\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React from \"react\";\n\nimport {\n  DamagePerOpening,\n  InputsPerMinute,\n  MostCommonKillMove,\n  MostCommonNeutralOpener,\n  OpeningsPerKill,\n  TotalDamageDone,\n  AverageKillPercent,\n  NeutralWins,\n} from \"./Statistics\";\n\nexport const StatDisplay: React.FC = () => {\n  return (\n    <div\n      css={css`\n        background: rgba(0, 0, 0, 0.3);\n        width: 100%;\n      `}\n    >\n      <div\n        css={css`\n          display: grid;\n          grid-template-columns: 100%;\n          grid-row-gap: 2rem;\n          margin: 5rem 5rem;\n        `}\n      >\n        <MostCommonKillMove />\n        <MostCommonNeutralOpener />\n        <OpeningsPerKill />\n        <TotalDamageDone />\n        <AverageKillPercent />\n        <NeutralWins />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport styled from \"@emotion/styled\";\nimport { StatDisplay } from \"./StatDisplay\";\n\nconst Outer = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: 20% 60% 20%;\n`;\n\nexport const RenderDisplay: React.FC = (props) => {\n  return (\n    <Outer>\n      <div>hi </div>\n      <StatDisplay />\n      <div>there</div>\n    </Outer>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { RenderDisplay } from \"../containers/RenderDisplay\";\nimport poweredByImage from \"../styles/images/powered-by.png\";\n\nconst Header = styled.h1`\n  text-transform: uppercase;\n  font-weight: 800;\n  font-size: 6rem;\n  margin: 2rem;\n  padding-bottom: 1.5rem;\n  position: relative;\n\n  &::before {\n    z-index: -1;\n    content: \"\";\n    display: block;\n    background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.2), transparent);\n    height: 0.1rem;\n    position: absolute;\n    width: 80%;\n    margin-left: 50%;\n    transform: translateX(-50%);\n    bottom: 0;\n  }\n`;\n\nexport const RenderView: React.FC = (props) => {\n  return (\n    <div\n      css={css`\n        margin: 0 12rem;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      `}\n    >\n      <Link to=\"/\" style={{ textDecoration: \"inherit\", color: \"inherit\" }}>\n        <Header>Post Match Stats</Header>\n      </Link>\n      <img\n        alt=\"Powered by Slippi\"\n        css={css`\n          max-height: 5rem;\n          margin-bottom: 3rem;\n        `}\n        src={poweredByImage}\n      />\n      <RenderDisplay />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { hot } from \"react-hot-loader/root\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport { AppProvider } from \"./store\";\nimport { MainView } from \"./views/MainView\";\nimport { RenderView } from \"./views/RenderView\";\n\nconst App: React.FC = () => {\n  return (\n    <AppProvider>\n      <Router basename=\"/\">\n        <Route exact path=\"/\" component={MainView} />\n        <Route path=\"/render\" component={RenderView} />\n      </Router>\n    </AppProvider>\n  );\n};\n\nexport default hot(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"./index.scss\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* eslint-disable */\n\nconst { stages: stageUtil, moves: moveUtil, characters: characterUtil } = require(\"@slippi/slippi-js\");\nconst moment = require(\"moment\");\nconst _ = require(\"lodash\");\n\nconst stats = {\n  OPENINGS_PER_KILL: \"openingsPerKill\",\n  DAMAGE_PER_OPENING: \"damagePerOpening\",\n  NEUTRAL_WINS: \"neutralWins\",\n  KILL_MOVES: \"killMoves\",\n  NEUTRAL_OPENER_MOVES: \"neutralOpenerMoves\",\n  EARLY_KILLS: \"earlyKills\",\n  LATE_DEATHS: \"lateDeaths\",\n  SELF_DESTRUCTS: \"selfDestructs\",\n  INPUTS_PER_MINUTE: \"inputsPerMinute\",\n  AVG_KILL_PERCENT: \"avgKillPercent\",\n  HIGH_DAMAGE_PUNISHES: \"highDamagePunishes\",\n  DAMAGE_DONE: \"damageDone\",\n};\n\nconst statDefininitions = {\n  [stats.OPENINGS_PER_KILL]: {\n    id: stats.OPENINGS_PER_KILL,\n    name: \"Openings / Kill\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"openingsPerKill\", 1);\n    },\n  },\n  [stats.DAMAGE_PER_OPENING]: {\n    id: stats.DAMAGE_PER_OPENING,\n    name: \"Damage / Opening\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"damagePerOpening\", 1);\n    },\n  },\n  [stats.NEUTRAL_WINS]: {\n    id: stats.NEUTRAL_WINS,\n    name: \"Neutral Wins\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 0,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"neutralWinRatio\", 0, \"count\");\n    },\n  },\n  [stats.KILL_MOVES]: {\n    id: stats.KILL_MOVES,\n    name: \"Most Common Kill Move\",\n    type: \"text\",\n    calculate: (games, playerIndex) => {\n      const killMoves = _.flatMap(games, (game) => {\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        const conversionsForPlayer = _.filter(conversions, (conversion) => {\n          const isForPlayer = conversion.playerIndex === playerIndex;\n          const didKill = conversion.didKill;\n          return isForPlayer && didKill;\n        });\n\n        return _.map(conversionsForPlayer, (conversion) => {\n          return _.last(conversion.moves);\n        });\n      });\n\n      const killMovesByMove = _.groupBy(killMoves, \"moveId\");\n      const killMoveCounts = _.map(killMovesByMove, (moves) => {\n        const move = _.first(moves);\n        return {\n          count: moves.length,\n          id: move.moveId,\n          name: moveUtil.getMoveName(move.moveId),\n          shortName: moveUtil.getMoveShortName(move.moveId),\n        };\n      });\n\n      const orderedKillMoveCounts = _.orderBy(killMoveCounts, [\"count\"], [\"desc\"]);\n      const topKillMove = _.first(orderedKillMoveCounts);\n      let simpleText = \"N/A\";\n      if (topKillMove) {\n        simpleText = `${topKillMove.shortName} (${topKillMove.count})`;\n      }\n\n      return {\n        result: orderedKillMoveCounts,\n        simple: {\n          text: simpleText,\n        },\n      };\n    },\n  },\n  [stats.NEUTRAL_OPENER_MOVES]: {\n    id: stats.NEUTRAL_OPENER_MOVES,\n    name: \"Most Common Neutral Opener\",\n    type: \"text\",\n    calculate: (games, playerIndex) => {\n      const neutralMoves = _.flatMap(games, (game) => {\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        const conversionsForPlayer = _.filter(conversions, (conversion) => {\n          const isForPlayer = conversion.playerIndex === playerIndex;\n          const isNeutralWin = conversion.openingType === \"neutral-win\";\n          return isForPlayer && isNeutralWin;\n        });\n\n        return _.map(conversionsForPlayer, (conversion) => {\n          return _.first(conversion.moves);\n        });\n      });\n\n      // TODO: This following code is repeated from kill move code, put in function\n\n      const neutralMovesByMove = _.groupBy(neutralMoves, \"moveId\");\n      const neutralMoveCounts = _.map(neutralMovesByMove, (moves) => {\n        const move = _.first(moves);\n        return {\n          count: moves.length,\n          id: move.moveId,\n          name: moveUtil.getMoveName(move.moveId),\n          shortName: moveUtil.getMoveShortName(move.moveId),\n        };\n      });\n\n      const orderedNeutralMoveCounts = _.orderBy(neutralMoveCounts, [\"count\"], [\"desc\"]);\n      const topNeutralMove = _.first(orderedNeutralMoveCounts);\n      let simpleText = \"N/A\";\n      if (topNeutralMove) {\n        simpleText = `${topNeutralMove.shortName} (${topNeutralMove.count})`;\n      }\n\n      return {\n        result: orderedNeutralMoveCounts,\n        simple: {\n          text: simpleText,\n        },\n      };\n    },\n  },\n  [stats.EARLY_KILLS]: {\n    id: stats.EARLY_KILLS,\n    name: \"Earliest Kill\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const oppStocks = _.flatMap(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        return _.filter(stocks, (stock) => {\n          const isOpp = stock.playerIndex !== playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isOpp && hasEndPercent;\n        });\n      });\n\n      const orderedOppStocks = _.orderBy(oppStocks, [\"endPercent\"], [\"asc\"]);\n      const earliestKillStock = _.first(orderedOppStocks);\n      const simple = {\n        text: \"N/A\",\n        number: null,\n      };\n\n      if (earliestKillStock) {\n        simple.number = earliestKillStock.endPercent;\n        simple.text = simple.number.toFixed(1);\n      }\n\n      return {\n        result: _.take(orderedOppStocks, 5),\n        simple: simple,\n      };\n    },\n  },\n  [stats.LATE_DEATHS]: {\n    id: stats.LATE_DEATHS,\n    name: \"Latest Death\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const playerStocks = _.flatMap(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        return _.filter(stocks, (stock) => {\n          const isPlayer = stock.playerIndex === playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isPlayer && hasEndPercent;\n        });\n      });\n\n      const orderedPlayerStocks = _.orderBy(playerStocks, [\"endPercent\"], [\"desc\"]);\n      const latestDeathStock = _.first(orderedPlayerStocks);\n      const simple = {\n        text: \"N/A\",\n        number: null,\n      };\n\n      if (latestDeathStock) {\n        simple.number = latestDeathStock.endPercent;\n        simple.text = simple.number.toFixed(1);\n      }\n\n      return {\n        result: _.take(orderedPlayerStocks, 5),\n        simple: simple,\n      };\n    },\n  },\n  [stats.SELF_DESTRUCTS]: {\n    id: stats.SELF_DESTRUCTS, // Only show this one if greater than 2 for one player\n    name: \"Total Self-Destructs\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 0,\n    calculate: (games, playerIndex) => {\n      const sdCounts = _.map(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        const playerEndedStocks = _.filter(stocks, (stock) => {\n          const isPlayer = stock.playerIndex === playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isPlayer && hasEndPercent;\n        });\n\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        const oppKillConversions = _.filter(conversions, (conversion) => {\n          const isOpp = conversion.playerIndex !== playerIndex;\n          const didKill = conversion.didKill;\n          return isOpp && didKill;\n        });\n\n        return playerEndedStocks.length - oppKillConversions.length;\n      });\n\n      const sdSum = _.sum(sdCounts);\n\n      return {\n        result: sdSum,\n        simple: {\n          number: sdSum,\n          text: `${sdSum}`,\n        },\n      };\n    },\n  },\n  [stats.INPUTS_PER_MINUTE]: {\n    id: stats.INPUTS_PER_MINUTE,\n    name: \"Inputs / Minute\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"inputsPerMinute\", 1);\n    },\n  },\n  [stats.AVG_KILL_PERCENT]: {\n    id: stats.AVG_KILL_PERCENT,\n    name: \"Average Kill Percent\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const oppStocks = _.flatMap(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        return _.filter(stocks, (stock) => {\n          const isOpp = stock.playerIndex !== playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isOpp && hasEndPercent;\n        });\n      });\n\n      const result = {\n        total: oppStocks.length,\n        count: _.sumBy(oppStocks, \"endPercent\") || 0,\n      };\n\n      result.ratio = result.total ? result.count / result.total : null;\n\n      return {\n        result: result,\n        simple: genSimpleFromRatio(result, 1),\n      };\n    },\n  },\n  [stats.HIGH_DAMAGE_PUNISHES]: {\n    id: stats.HIGH_DAMAGE_PUNISHES,\n    name: \"Highest Damage Punish\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const punishes = _.flatMap(games, (game) => {\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        return _.filter(conversions, (conversion) => {\n          const isForPlayer = conversion.playerIndex === playerIndex;\n          const hasEndPercent = conversion.endPercent !== null;\n          return isForPlayer && hasEndPercent;\n        });\n      });\n\n      const getDamageDone = (punish) => punish.endPercent - punish.startPercent;\n      const orderedPunishes = _.orderBy(punishes, [getDamageDone], \"desc\");\n      const topPunish = _.first(orderedPunishes);\n      const simple = {\n        text: \"N/A\",\n        number: null,\n      };\n\n      if (topPunish) {\n        simple.number = getDamageDone(topPunish);\n        simple.text = simple.number.toFixed(1);\n      }\n\n      return {\n        result: _.take(orderedPunishes, 5),\n        simple: simple,\n      };\n    },\n  },\n  [stats.DAMAGE_DONE]: {\n    id: stats.DAMAGE_DONE,\n    name: \"Total Damage Done\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"damagePerOpening\", 1, \"count\");\n    },\n  },\n};\n\nfunction genOverallRatioStat(games, playerIndex, field, fixedNum, type = \"ratio\") {\n  const statRatios = _.map(games, (game) => {\n    const overallStats = _.get(game, [\"stats\", \"overall\"]);\n    const overallStatsByPlayer = _.keyBy(overallStats, \"playerIndex\");\n    const overallStatsForPlayer = overallStatsByPlayer[playerIndex];\n    return overallStatsForPlayer[field];\n  });\n\n  const avg = averageRatios(statRatios);\n  const simple = genSimpleFromRatio(avg, fixedNum, type);\n\n  return {\n    result: avg,\n    simple: simple,\n  };\n}\n\nfunction averageRatios(ratios) {\n  const result = {};\n\n  result.count = _.sumBy(ratios, \"count\") || 0;\n  result.total = _.sumBy(ratios, \"total\") || 0;\n  result.ratio = result.total ? result.count / result.total : null;\n\n  return result;\n}\n\nfunction genSimpleFromRatio(ratio, fixedNum, type = \"ratio\") {\n  const result = {};\n\n  switch (type) {\n    case \"ratio\":\n      result.number = ratio.ratio;\n      result.text = ratio.ratio !== null ? ratio.ratio.toFixed(fixedNum) : \"N/A\";\n      break;\n    case \"count\":\n      result.number = ratio.count;\n      result.text = ratio.count.toFixed(fixedNum);\n      break;\n  }\n\n  return result;\n}\n\n/*\nfunction parseFilesInFolder() {\n  const dirPath = process.cwd();\n  const dirContents = fs.readdirSync(dirPath, { withFileTypes: true });\n\n  console.log(\"Reading files in directory...\\n\");\n  const gameDetails = _.chain(dirContents).filter((item) => {\n    return item.isFile() && path.extname(item.name) === \".slp\";\n  }).map((slpItem) => {\n    const slpFilePath = path.join(dirPath, slpItem.name);\n    const game = new SlippiGame(slpFilePath);\n    return {\n      filePath: slpFilePath,\n      settings: game.getSettings(),\n      frames: game.getFrames(),\n      stats: game.getStats(),\n      metadata: game.getMetadata(),\n      latestFrame: game.getLatestFrame(),\n      gameEnd: game.getGameEnd(),\n    };\n  }).value();\n\n  return gameDetails;\n}\n*/\n\nfunction filterGames(games) {\n  // console.log(games);\n  const gamesByIsSingles = _.groupBy(games, (game) => {\n    const numberOfPlayers = game.settings.players.length;\n    return numberOfPlayers === 2;\n  });\n\n  const nonSinglesGames = _.get(gamesByIsSingles, false) || [];\n  if (_.some(nonSinglesGames)) {\n    console.log(\"The following games have been excluded because they are not singles games:\");\n    _.forEach(nonSinglesGames, (game) => {\n      console.log(game.filePath);\n    });\n    console.log();\n  }\n\n  const singlesGames = _.get(gamesByIsSingles, true) || [];\n  const gamesByPorts = _.chain(singlesGames)\n    .groupBy((game) => {\n      const ports = _.map(game.settings.players, \"port\");\n      return _.join(ports, \"-\");\n    })\n    .orderBy([\"length\"], [\"desc\"])\n    .value();\n\n  const gamesWithSamePorts = gamesByPorts.shift();\n  if (_.some(gamesByPorts)) {\n    console.log(\"The following games have been excluded because the player ports differ:\");\n    const flatGames = _.flatten(gamesByPorts);\n    _.forEach(flatGames, (game) => {\n      console.log(game.filePath);\n    });\n    console.log();\n  }\n\n  if (_.isEmpty(gamesWithSamePorts)) {\n    throw new Error(\"There were no valid games found to compute stats from.\");\n  }\n\n  console.log(`Including ${gamesWithSamePorts.length} games for stat calculation...`);\n\n  return gamesWithSamePorts;\n}\n\nfunction computeStats(games) {\n  const firstGame = _.first(games);\n  // console.log(firstGame);\n  const orderIndices = _.map(firstGame.settings.players, \"playerIndex\");\n  const reversedIndices = _.chain(orderIndices).clone().reverse().value();\n  const indices = [orderIndices, reversedIndices];\n\n  const statResults = _.flatMap(stats, (statKey) => {\n    const def = statDefininitions[statKey];\n    if (!def.calculate) {\n      return [];\n    }\n\n    const results = _.map(indices, (iIndices) => {\n      const result = def.calculate(games, iIndices[0], iIndices[1]);\n      result.port = iIndices[0] + 1;\n      return result;\n    });\n\n    const output = { ...def };\n    delete output.calculate;\n    output.results = results;\n\n    return [output];\n  });\n\n  return statResults;\n}\n\nfunction generateGameInfo(games) {\n  const getStartAt = (game) => game.metadata.startAt;\n  const orderedGames = _.orderBy(games, [getStartAt], [\"asc\"]);\n\n  const getResultForPlayer = (game, playerIndex) => {\n    // console.log(game);\n    // Calculate assumed game result\n    const gameEnd = game.gameEnd;\n    if (!gameEnd) {\n      return \"unknown\";\n    }\n\n    const players = _.get(game.settings, [\"players\"]);\n    const opp = _.filter(players, (player) => player.playerIndex !== playerIndex);\n    const oppIndex = _.get(opp, [0, \"playerIndex\"]);\n\n    switch (gameEnd.gameEndMethod) {\n      case 1:\n        // This is a TIME! ending, not implemented yet\n        return \"unknown\";\n      case 2:\n        // This is a GAME! ending\n        const latestFrame = _.get(game.latestFrame, \"players\") || [];\n        const playerStocks = _.get(latestFrame, [playerIndex, \"post\", \"stocksRemaining\"]);\n        const oppStocks = _.get(latestFrame, [oppIndex, \"post\", \"stocksRemaining\"]);\n        if (playerStocks === 0 && oppStocks === 0) {\n          return \"unknown\";\n        }\n\n        return playerStocks === 0 ? \"loser\" : \"winner\";\n      case 7:\n        return gameEnd.lrasInitiatorIndex === playerIndex ? \"loser\" : \"winner\";\n    }\n\n    return \"unknown\";\n  };\n\n  const generatePlayerInfo = (game) => (player) => {\n    // console.log(player);\n    return {\n      port: player.port,\n      characterId: player.characterId,\n      characterColor: player.characterColor,\n      nametag: player.nametag,\n      characterName: characterUtil.getCharacterName(player.characterId),\n      characterColor: characterUtil.getCharacterColorName(player.characterId, player.characterColor),\n      gameResult: getResultForPlayer(game, player.playerIndex),\n    };\n  };\n\n  return _.map(orderedGames, (game) => {\n    const playerInfoGen = generatePlayerInfo(game);\n\n    return {\n      stage: {\n        id: game.settings.stageId,\n        name: stageUtil.getStageName(game.settings.stageId),\n      },\n      players: _.map(game.settings.players, playerInfoGen),\n      startTime: game.metadata.startAt,\n      duration: convertFrameCountToDurationString(game.stats.lastFrame),\n    };\n  });\n}\n\nfunction generateBtsSummary(summary) {\n  const fixedStats = [stats.KILL_MOVES, stats.NEUTRAL_OPENER_MOVES, stats.OPENINGS_PER_KILL, stats.DAMAGE_DONE];\n\n  const randomizeCount = 2;\n\n  const generateSummaryItem = (fullStatOutput) => {\n    const type = fullStatOutput.type;\n\n    const output = { ...fullStatOutput };\n    output.results = _.map(fullStatOutput.results, (result) => _.get(result, [\"simple\", type]));\n\n    return output;\n  };\n\n  const result = [];\n\n  const statsById = _.keyBy(summary, \"id\");\n  const statsToRandomizeById = statsById;\n\n  // Add fixed stats\n  _.forEach(fixedStats, (statId) => {\n    const statOutput = statsById[statId];\n    result.push(generateSummaryItem(statOutput));\n\n    delete statsToRandomizeById[statId];\n  });\n\n  // Deal with SDs\n  const sdStat = statsById[stats.SELF_DESTRUCTS];\n  const sds1 = sdStat.results[0].simple.number;\n  const sds2 = sdStat.results[0].simple.number;\n  const shouldIncludeSds = sds1 > 1 || sds2 > 1;\n  if (!shouldIncludeSds) {\n    delete statsToRandomizeById[stats.SELF_DESTRUCTS];\n  }\n\n  const shuffled = _.shuffle(statsToRandomizeById);\n  const shuffledToInclude = _.take(shuffled, randomizeCount);\n  _.forEach(shuffledToInclude, (statOutput) => {\n    result.push(generateSummaryItem(statOutput));\n  });\n\n  return result;\n}\n\nfunction convertFrameCountToDurationString(frameCount) {\n  const duration = moment.duration(frameCount / 60, \"seconds\");\n  return moment.utc(duration.as(\"milliseconds\")).format(\"m:ss\");\n}\n\nfunction generateOutput(games) {\n  const stats = computeStats(games);\n\n  return {\n    games: generateGameInfo(games),\n    summary: stats,\n    btsSummary: generateBtsSummary(stats),\n  };\n}\n\n// function writeToFile(output) {\n//   console.log(util.inspect(output, { depth: 6, colors: true }));\n//   fs.writeFileSync('output.json', JSON.stringify(output));\n//   console.log(\"Finished writting stats to output.json!\");\n// }\n\nexport default function (games) {\n  const filteredGames = filterGames(games);\n  const output = generateOutput(filteredGames);\n  //   writeToFile(output);\n  //   console.log(output);\n  return output;\n}\n","import {\n  FrameEntryType,\n  FramesType,\n  GameEndType,\n  GameStartType,\n  MetadataType,\n  SlippiGame,\n  StatsType,\n} from \"@slippi/slippi-js\";\n\nimport generateStats from \"./stats\";\n\nexport interface GameDetails {\n  filePath: string;\n  settings: GameStartType;\n  frames: FramesType;\n  stats: StatsType;\n  metadata: MetadataType;\n  latestFrame: FrameEntryType | null;\n  gameEnd: GameEndType | null;\n}\n\nexport async function generateStatsOutput(files: File[]) {\n  const games = await readFilesAsSlippiGameDetails(files);\n  console.log(games);\n  const output = generateStats(games);\n  console.log(output);\n  return output;\n}\n\nexport async function readFileAsSlippiGame(file: File): Promise<SlippiGame> {\n  const data = (await readFileAsArrayBuffer(file)) as ArrayBuffer;\n  const arr = new Int8Array(data);\n  const buf = Buffer.from(arr);\n  return new SlippiGame(buf);\n}\n\nexport async function readFileAsGameDetails(file: File): Promise<GameDetails> {\n  const game = await readFileAsSlippiGame(file);\n  return generateGameDetails(file.name, game);\n}\n\nexport function generateGameDetails(name: string, game: SlippiGame): GameDetails {\n  return {\n    filePath: name,\n    settings: game.getSettings(),\n    frames: game.getFrames(),\n    stats: game.getStats(),\n    metadata: game.getMetadata(),\n    latestFrame: game.getLatestFrame(),\n    gameEnd: game.getGameEnd(),\n  };\n}\n\nexport async function readFilesAsSlippiGameDetails(files: File[]): Promise<GameDetails[]> {\n  const promises = files.map(async (f) => {\n    console.log(\"checking file: \", f);\n    const data = (await readFileAsArrayBuffer(f)) as ArrayBuffer;\n    const arr = new Int8Array(data);\n    const buf = Buffer.from(arr);\n    const game = new SlippiGame(buf);\n    // console.log(game.getStats());\n    return {\n      filePath: f.name,\n      settings: game.getSettings(),\n      frames: game.getFrames(),\n      stats: game.getStats(),\n      metadata: game.getMetadata(),\n      latestFrame: game.getLatestFrame(),\n      gameEnd: game.getGameEnd(),\n    };\n  });\n  return Promise.all(promises);\n}\n\nexport async function readFileAsArrayBuffer(file: File): Promise<string | ArrayBufferLike> {\n  return new Promise((resolve, reject) => {\n    const fr = new FileReader();\n    fr.onabort = () => reject(\"file reading was aborted\");\n    fr.onerror = () => reject(\"file reading has failed\");\n    if (fr.readAsBinaryString) {\n      fr.addEventListener(\n        \"load\",\n        function () {\n          const string = (this as any).resultString != null ? (this as any).resultString : this.result;\n          const result = new Uint8Array(string.length);\n          for (let i = 0; i < string.length; i++) {\n            result[i] = string.charCodeAt(i);\n          }\n          resolve(result.buffer);\n        },\n        false\n      );\n      fr.readAsBinaryString(file);\n    } else {\n      fr.addEventListener(\n        \"load\",\n        function () {\n          if (this.result) {\n            resolve(this.result);\n          } else {\n            reject(\"no data read\");\n          }\n        },\n        false\n      );\n      fr.readAsArrayBuffer(file);\n    }\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/powered-by.61867ea8.png\";"],"sourceRoot":""}
{"version":3,"sources":["lib/stats.js","store/reducers.ts","store/context.tsx","components/DropPad.tsx","containers/ButtonMaskInput.tsx","views/MainView.tsx","lib/hooks/useParam.ts","lib/hooks/useKeyPress.ts","components/InlineEdit/index.tsx","lib/hooks/useOnClickOutside.ts","components/StatDisplay/Stat.tsx","components/StatDisplay/DamagePerOpening.tsx","components/StatDisplay/InputsPerMinute.tsx","components/StatDisplay/MostCommonKillMove.tsx","components/StatDisplay/MostCommonNeutralOpener.tsx","components/StatDisplay/OpeningsPerKill.tsx","components/StatDisplay/TotalDamageDone.tsx","components/StatDisplay/index.tsx","views/RenderView.tsx","App.tsx","serviceWorker.ts","index.tsx","lib/readFile.ts","styles/images/powered-by.png"],"names":["require","stageUtil","stages","moveUtil","moves","characterUtil","characters","moment","_","stats","OPENINGS_PER_KILL","DAMAGE_PER_OPENING","NEUTRAL_WINS","KILL_MOVES","NEUTRAL_OPENER_MOVES","EARLY_KILLS","LATE_DEATHS","SELF_DESTRUCTS","INPUTS_PER_MINUTE","AVG_KILL_PERCENT","HIGH_DAMAGE_PUNISHES","DAMAGE_DONE","statDefininitions","id","name","type","betterDirection","recommendedRounding","calculate","games","playerIndex","genOverallRatioStat","killMoves","flatMap","game","conversions","get","conversionsForPlayer","filter","conversion","isForPlayer","didKill","map","last","killMovesByMove","groupBy","killMoveCounts","move","first","count","length","moveId","getMoveName","shortName","getMoveShortName","orderedKillMoveCounts","orderBy","topKillMove","simpleText","result","simple","text","neutralMoves","isNeutralWin","openingType","neutralMovesByMove","neutralMoveCounts","orderedNeutralMoveCounts","topNeutralMove","oppStocks","stocks","stock","isOpp","hasEndPercent","endPercent","orderedOppStocks","earliestKillStock","number","toFixed","take","playerStocks","isPlayer","orderedPlayerStocks","latestDeathStock","sdCounts","playerEndedStocks","oppKillConversions","sdSum","sum","total","sumBy","ratio","genSimpleFromRatio","punishes","getDamageDone","punish","startPercent","orderedPunishes","topPunish","field","fixedNum","statRatios","overallStats","keyBy","avg","averageRatios","ratios","computeStats","firstGame","orderIndices","settings","players","indices","chain","clone","reverse","value","statKey","def","results","iIndices","port","output","generateGameInfo","orderedGames","metadata","startAt","generatePlayerInfo","player","characterId","characterColor","nametag","characterName","getCharacterName","getCharacterColorName","gameEnd","opp","oppIndex","gameEndMethod","latestFrame","lrasInitiatorIndex","getResultForPlayer","playerInfoGen","stage","stageId","getStageName","startTime","duration","convertFrameCountToDurationString","lastFrame","generateBtsSummary","summary","fixedStats","generateSummaryItem","fullStatOutput","statsById","statsToRandomizeById","forEach","statId","statOutput","push","sdStat","sds1","sds2","shuffled","shuffle","shuffledToInclude","frameCount","utc","as","format","module","exports","btsSummary","generateOutput","gamesByIsSingles","nonSinglesGames","some","console","log","filePath","singlesGames","gamesByPorts","ports","join","gamesWithSamePorts","shift","flatGames","flatten","isEmpty","Error","filterGames","Types","initialState","files","AppContext","createContext","state","dispatch","mainReducer","action","ADD_GAME","payload","filename","details","fileToReplace","findIndex","f","file","loading","SET_ERROR","error","ADD_FILE","Boolean","find","reducer","AppProvider","children","useReducer","Provider","Container","styled","div","props","isDragAccept","isDragActive","getColor","DropPad","useDropzone","getRootProps","getInputProps","isDragReject","className","ButtonMaskInput","useContext","onDrop","useCallback","acceptedFiles","a","readFileAsSlippiGame","generateGameDetails","finishedProcessing","css","accept","key","MainView","history","useHistory","React","useState","onClick","paramMap","reduce","val","min","max","randomVal","Math","random","search","URLSearchParams","toString","pathname","useParam","defaultValue","setValue","location","useLocation","useEffect","currentValue","setParam","params","set","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","window","addEventListener","removeEventListener","InlineEdit","ref","handler","onSetText","textAlign","isInputActive","setIsInputActive","inputValue","setInputValue","wrapperRef","useRef","textRef","inputRef","tab","enter","esc","listener","event","current","contains","target","document","focus","style","onChange","e","defaultProps","StatLabel","p","labelBackground","labelColor","StatContent","OuterStat","Stat","label","leftText","rightText","onLeftTextBlur","onRightTextBlur","DamagePerOpening","dpo1","setDpo1","dpo2","setDpo2","InputsPerMinute","ipm1","setIpm1","ipm2","setIpm2","MostCommonKillMove","mckm1","setMckm1","mckm2","setMckm2","MostCommonNeutralOpener","mcno1","setMcno1","mcno2","setMcno2","OpeningsPerKill","opk1","setOpk1","opk2","setOpk2","TotalDamageDone","tdd1","setTdd1","tdd2","setTdd2","StatDisplay","RenderView","alt","src","poweredByImage","hot","basename","exact","path","component","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","generateStats","generateStatsOutput","readFilesAsSlippiGameDetails","readFileAsArrayBuffer","data","arr","Int8Array","buf","Buffer","from","SlippiGame","getSettings","frames","getFrames","getStats","getMetadata","getLatestFrame","getGameEnd","promises","Promise","all","resolve","reject","fr","FileReader","onabort","onerror","readAsBinaryString","string","this","resultString","Uint8Array","i","charCodeAt","buffer","readAsArrayBuffer"],"mappings":"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","file":"static/js/main.bfb0869e.chunk.js","sourcesContent":["/* eslint-disable */\n\nconst { stages: stageUtil, moves: moveUtil, characters: characterUtil } = require(\"@slippi/slippi-js\");\nconst moment = require(\"moment\");\nconst _ = require(\"lodash\");\n\nconst stats = {\n  OPENINGS_PER_KILL: \"openingsPerKill\",\n  DAMAGE_PER_OPENING: \"damagePerOpening\",\n  NEUTRAL_WINS: \"neutralWins\",\n  KILL_MOVES: \"killMoves\",\n  NEUTRAL_OPENER_MOVES: \"neutralOpenerMoves\",\n  EARLY_KILLS: \"earlyKills\",\n  LATE_DEATHS: \"lateDeaths\",\n  SELF_DESTRUCTS: \"selfDestructs\",\n  INPUTS_PER_MINUTE: \"inputsPerMinute\",\n  AVG_KILL_PERCENT: \"avgKillPercent\",\n  HIGH_DAMAGE_PUNISHES: \"highDamagePunishes\",\n  DAMAGE_DONE: \"damageDone\",\n};\n\nconst statDefininitions = {\n  [stats.OPENINGS_PER_KILL]: {\n    id: stats.OPENINGS_PER_KILL,\n    name: \"Openings / Kill\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"openingsPerKill\", 1);\n    },\n  },\n  [stats.DAMAGE_PER_OPENING]: {\n    id: stats.DAMAGE_PER_OPENING,\n    name: \"Damage / Opening\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"damagePerOpening\", 1);\n    },\n  },\n  [stats.NEUTRAL_WINS]: {\n    id: stats.NEUTRAL_WINS,\n    name: \"Neutral Wins\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 0,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"neutralWinRatio\", 0, \"count\");\n    },\n  },\n  [stats.KILL_MOVES]: {\n    id: stats.KILL_MOVES,\n    name: \"Most Common Kill Move\",\n    type: \"text\",\n    calculate: (games, playerIndex) => {\n      const killMoves = _.flatMap(games, (game) => {\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        const conversionsForPlayer = _.filter(conversions, (conversion) => {\n          const isForPlayer = conversion.playerIndex === playerIndex;\n          const didKill = conversion.didKill;\n          return isForPlayer && didKill;\n        });\n\n        return _.map(conversionsForPlayer, (conversion) => {\n          return _.last(conversion.moves);\n        });\n      });\n\n      const killMovesByMove = _.groupBy(killMoves, \"moveId\");\n      const killMoveCounts = _.map(killMovesByMove, (moves) => {\n        const move = _.first(moves);\n        return {\n          count: moves.length,\n          id: move.moveId,\n          name: moveUtil.getMoveName(move.moveId),\n          shortName: moveUtil.getMoveShortName(move.moveId),\n        };\n      });\n\n      const orderedKillMoveCounts = _.orderBy(killMoveCounts, [\"count\"], [\"desc\"]);\n      const topKillMove = _.first(orderedKillMoveCounts);\n      let simpleText = \"N/A\";\n      if (topKillMove) {\n        simpleText = `${topKillMove.shortName} (${topKillMove.count})`;\n      }\n\n      return {\n        result: orderedKillMoveCounts,\n        simple: {\n          text: simpleText,\n        },\n      };\n    },\n  },\n  [stats.NEUTRAL_OPENER_MOVES]: {\n    id: stats.NEUTRAL_OPENER_MOVES,\n    name: \"Most Common Neutral Opener\",\n    type: \"text\",\n    calculate: (games, playerIndex) => {\n      const neutralMoves = _.flatMap(games, (game) => {\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        const conversionsForPlayer = _.filter(conversions, (conversion) => {\n          const isForPlayer = conversion.playerIndex === playerIndex;\n          const isNeutralWin = conversion.openingType === \"neutral-win\";\n          return isForPlayer && isNeutralWin;\n        });\n\n        return _.map(conversionsForPlayer, (conversion) => {\n          return _.first(conversion.moves);\n        });\n      });\n\n      // TODO: This following code is repeated from kill move code, put in function\n\n      const neutralMovesByMove = _.groupBy(neutralMoves, \"moveId\");\n      const neutralMoveCounts = _.map(neutralMovesByMove, (moves) => {\n        const move = _.first(moves);\n        return {\n          count: moves.length,\n          id: move.moveId,\n          name: moveUtil.getMoveName(move.moveId),\n          shortName: moveUtil.getMoveShortName(move.moveId),\n        };\n      });\n\n      const orderedNeutralMoveCounts = _.orderBy(neutralMoveCounts, [\"count\"], [\"desc\"]);\n      const topNeutralMove = _.first(orderedNeutralMoveCounts);\n      let simpleText = \"N/A\";\n      if (topNeutralMove) {\n        simpleText = `${topNeutralMove.shortName} (${topNeutralMove.count})`;\n      }\n\n      return {\n        result: orderedNeutralMoveCounts,\n        simple: {\n          text: simpleText,\n        },\n      };\n    },\n  },\n  [stats.EARLY_KILLS]: {\n    id: stats.EARLY_KILLS,\n    name: \"Earliest Kill\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const oppStocks = _.flatMap(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        return _.filter(stocks, (stock) => {\n          const isOpp = stock.playerIndex !== playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isOpp && hasEndPercent;\n        });\n      });\n\n      const orderedOppStocks = _.orderBy(oppStocks, [\"endPercent\"], [\"asc\"]);\n      const earliestKillStock = _.first(orderedOppStocks);\n      const simple = {\n        text: \"N/A\",\n        number: null,\n      };\n\n      if (earliestKillStock) {\n        simple.number = earliestKillStock.endPercent;\n        simple.text = simple.number.toFixed(1);\n      }\n\n      return {\n        result: _.take(orderedOppStocks, 5),\n        simple: simple,\n      };\n    },\n  },\n  [stats.LATE_DEATHS]: {\n    id: stats.LATE_DEATHS,\n    name: \"Latest Death\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const playerStocks = _.flatMap(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        return _.filter(stocks, (stock) => {\n          const isPlayer = stock.playerIndex === playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isPlayer && hasEndPercent;\n        });\n      });\n\n      const orderedPlayerStocks = _.orderBy(playerStocks, [\"endPercent\"], [\"desc\"]);\n      const latestDeathStock = _.first(orderedPlayerStocks);\n      const simple = {\n        text: \"N/A\",\n        number: null,\n      };\n\n      if (latestDeathStock) {\n        simple.number = latestDeathStock.endPercent;\n        simple.text = simple.number.toFixed(1);\n      }\n\n      return {\n        result: _.take(orderedPlayerStocks, 5),\n        simple: simple,\n      };\n    },\n  },\n  [stats.SELF_DESTRUCTS]: {\n    id: stats.SELF_DESTRUCTS, // Only show this one if greater than 2 for one player\n    name: \"Total Self-Destructs\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 0,\n    calculate: (games, playerIndex) => {\n      const sdCounts = _.map(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        const playerEndedStocks = _.filter(stocks, (stock) => {\n          const isPlayer = stock.playerIndex === playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isPlayer && hasEndPercent;\n        });\n\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        const oppKillConversions = _.filter(conversions, (conversion) => {\n          const isOpp = conversion.playerIndex !== playerIndex;\n          const didKill = conversion.didKill;\n          return isOpp && didKill;\n        });\n\n        return playerEndedStocks.length - oppKillConversions.length;\n      });\n\n      const sdSum = _.sum(sdCounts);\n\n      return {\n        result: sdSum,\n        simple: {\n          number: sdSum,\n          text: `${sdSum}`,\n        },\n      };\n    },\n  },\n  [stats.INPUTS_PER_MINUTE]: {\n    id: stats.INPUTS_PER_MINUTE,\n    name: \"Inputs / Minute\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"inputsPerMinute\", 1);\n    },\n  },\n  [stats.AVG_KILL_PERCENT]: {\n    id: stats.AVG_KILL_PERCENT,\n    name: \"Average Kill Percent\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const oppStocks = _.flatMap(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        return _.filter(stocks, (stock) => {\n          const isOpp = stock.playerIndex !== playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isOpp && hasEndPercent;\n        });\n      });\n\n      const result = {\n        total: oppStocks.length,\n        count: _.sumBy(oppStocks, \"endPercent\") || 0,\n      };\n\n      result.ratio = result.total ? result.count / result.total : null;\n\n      return {\n        result: result,\n        simple: genSimpleFromRatio(result, 1),\n      };\n    },\n  },\n  [stats.HIGH_DAMAGE_PUNISHES]: {\n    id: stats.HIGH_DAMAGE_PUNISHES,\n    name: \"Highest Damage Punish\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const punishes = _.flatMap(games, (game) => {\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        return _.filter(conversions, (conversion) => {\n          const isForPlayer = conversion.playerIndex === playerIndex;\n          const hasEndPercent = conversion.endPercent !== null;\n          return isForPlayer && hasEndPercent;\n        });\n      });\n\n      const getDamageDone = (punish) => punish.endPercent - punish.startPercent;\n      const orderedPunishes = _.orderBy(punishes, [getDamageDone], \"desc\");\n      const topPunish = _.first(orderedPunishes);\n      const simple = {\n        text: \"N/A\",\n        number: null,\n      };\n\n      if (topPunish) {\n        simple.number = getDamageDone(topPunish);\n        simple.text = simple.number.toFixed(1);\n      }\n\n      return {\n        result: _.take(orderedPunishes, 5),\n        simple: simple,\n      };\n    },\n  },\n  [stats.DAMAGE_DONE]: {\n    id: stats.DAMAGE_DONE,\n    name: \"Total Damage Done\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"damagePerOpening\", 1, \"count\");\n    },\n  },\n};\n\nfunction genOverallRatioStat(games, playerIndex, field, fixedNum, type = \"ratio\") {\n  const statRatios = _.map(games, (game) => {\n    const overallStats = _.get(game, [\"stats\", \"overall\"]);\n    const overallStatsByPlayer = _.keyBy(overallStats, \"playerIndex\");\n    const overallStatsForPlayer = overallStatsByPlayer[playerIndex];\n    return overallStatsForPlayer[field];\n  });\n\n  const avg = averageRatios(statRatios);\n  const simple = genSimpleFromRatio(avg, fixedNum, type);\n\n  return {\n    result: avg,\n    simple: simple,\n  };\n}\n\nfunction averageRatios(ratios) {\n  const result = {};\n\n  result.count = _.sumBy(ratios, \"count\") || 0;\n  result.total = _.sumBy(ratios, \"total\") || 0;\n  result.ratio = result.total ? result.count / result.total : null;\n\n  return result;\n}\n\nfunction genSimpleFromRatio(ratio, fixedNum, type = \"ratio\") {\n  const result = {};\n\n  switch (type) {\n    case \"ratio\":\n      result.number = ratio.ratio;\n      result.text = ratio.ratio !== null ? ratio.ratio.toFixed(fixedNum) : \"N/A\";\n      break;\n    case \"count\":\n      result.number = ratio.count;\n      result.text = ratio.count.toFixed(fixedNum);\n      break;\n  }\n\n  return result;\n}\n\n/*\nfunction parseFilesInFolder() {\n  const dirPath = process.cwd();\n  const dirContents = fs.readdirSync(dirPath, { withFileTypes: true });\n\n  console.log(\"Reading files in directory...\\n\");\n  const gameDetails = _.chain(dirContents).filter((item) => {\n    return item.isFile() && path.extname(item.name) === \".slp\";\n  }).map((slpItem) => {\n    const slpFilePath = path.join(dirPath, slpItem.name);\n    const game = new SlippiGame(slpFilePath);\n    return {\n      filePath: slpFilePath,\n      settings: game.getSettings(),\n      frames: game.getFrames(),\n      stats: game.getStats(),\n      metadata: game.getMetadata(),\n      latestFrame: game.getLatestFrame(),\n      gameEnd: game.getGameEnd(),\n    };\n  }).value();\n\n  return gameDetails;\n}\n*/\n\nfunction filterGames(games) {\n  // console.log(games);\n  const gamesByIsSingles = _.groupBy(games, (game) => {\n    const numberOfPlayers = game.settings.players.length;\n    return numberOfPlayers === 2;\n  });\n\n  const nonSinglesGames = _.get(gamesByIsSingles, false) || [];\n  if (_.some(nonSinglesGames)) {\n    console.log(\"The following games have been excluded because they are not singles games:\");\n    _.forEach(nonSinglesGames, (game) => {\n      console.log(game.filePath);\n    });\n    console.log();\n  }\n\n  const singlesGames = _.get(gamesByIsSingles, true) || [];\n  const gamesByPorts = _.chain(singlesGames)\n    .groupBy((game) => {\n      const ports = _.map(game.settings.players, \"port\");\n      return _.join(ports, \"-\");\n    })\n    .orderBy([\"length\"], [\"desc\"])\n    .value();\n\n  const gamesWithSamePorts = gamesByPorts.shift();\n  if (_.some(gamesByPorts)) {\n    console.log(\"The following games have been excluded because the player ports differ:\");\n    const flatGames = _.flatten(gamesByPorts);\n    _.forEach(flatGames, (game) => {\n      console.log(game.filePath);\n    });\n    console.log();\n  }\n\n  if (_.isEmpty(gamesWithSamePorts)) {\n    throw new Error(\"There were no valid games found to compute stats from.\");\n  }\n\n  console.log(`Including ${gamesWithSamePorts.length} games for stat calculation...`);\n\n  return gamesWithSamePorts;\n}\n\nfunction computeStats(games) {\n  const firstGame = _.first(games);\n  // console.log(firstGame);\n  const orderIndices = _.map(firstGame.settings.players, \"playerIndex\");\n  const reversedIndices = _.chain(orderIndices).clone().reverse().value();\n  const indices = [orderIndices, reversedIndices];\n\n  const statResults = _.flatMap(stats, (statKey) => {\n    const def = statDefininitions[statKey];\n    if (!def.calculate) {\n      return [];\n    }\n\n    const results = _.map(indices, (iIndices) => {\n      const result = def.calculate(games, iIndices[0], iIndices[1]);\n      result.port = iIndices[0] + 1;\n      return result;\n    });\n\n    const output = { ...def };\n    delete output.calculate;\n    output.results = results;\n\n    return [output];\n  });\n\n  return statResults;\n}\n\nfunction generateGameInfo(games) {\n  const getStartAt = (game) => game.metadata.startAt;\n  const orderedGames = _.orderBy(games, [getStartAt], [\"asc\"]);\n\n  const getResultForPlayer = (game, playerIndex) => {\n    // console.log(game);\n    // Calculate assumed game result\n    const gameEnd = game.gameEnd;\n    if (!gameEnd) {\n      return \"unknown\";\n    }\n\n    const players = _.get(game.settings, [\"players\"]);\n    const opp = _.filter(players, (player) => player.playerIndex !== playerIndex);\n    const oppIndex = _.get(opp, [0, \"playerIndex\"]);\n\n    switch (gameEnd.gameEndMethod) {\n      case 1:\n        // This is a TIME! ending, not implemented yet\n        return \"unknown\";\n      case 2:\n        // This is a GAME! ending\n        const latestFrame = _.get(game.latestFrame, \"players\") || [];\n        const playerStocks = _.get(latestFrame, [playerIndex, \"post\", \"stocksRemaining\"]);\n        const oppStocks = _.get(latestFrame, [oppIndex, \"post\", \"stocksRemaining\"]);\n        if (playerStocks === 0 && oppStocks === 0) {\n          return \"unknown\";\n        }\n\n        return playerStocks === 0 ? \"loser\" : \"winner\";\n      case 7:\n        return gameEnd.lrasInitiatorIndex === playerIndex ? \"loser\" : \"winner\";\n    }\n\n    return \"unknown\";\n  };\n\n  const generatePlayerInfo = (game) => (player) => {\n    // console.log(player);\n    return {\n      port: player.port,\n      characterId: player.characterId,\n      characterColor: player.characterColor,\n      nametag: player.nametag,\n      characterName: characterUtil.getCharacterName(player.characterId),\n      characterColor: characterUtil.getCharacterColorName(player.characterId, player.characterColor),\n      gameResult: getResultForPlayer(game, player.playerIndex),\n    };\n  };\n\n  return _.map(orderedGames, (game) => {\n    const playerInfoGen = generatePlayerInfo(game);\n\n    return {\n      stage: {\n        id: game.settings.stageId,\n        name: stageUtil.getStageName(game.settings.stageId),\n      },\n      players: _.map(game.settings.players, playerInfoGen),\n      startTime: game.metadata.startAt,\n      duration: convertFrameCountToDurationString(game.stats.lastFrame),\n    };\n  });\n}\n\nfunction generateBtsSummary(summary) {\n  const fixedStats = [stats.KILL_MOVES, stats.NEUTRAL_OPENER_MOVES, stats.OPENINGS_PER_KILL, stats.DAMAGE_DONE];\n\n  const randomizeCount = 2;\n\n  const generateSummaryItem = (fullStatOutput) => {\n    const type = fullStatOutput.type;\n\n    const output = { ...fullStatOutput };\n    output.results = _.map(fullStatOutput.results, (result) => _.get(result, [\"simple\", type]));\n\n    return output;\n  };\n\n  const result = [];\n\n  const statsById = _.keyBy(summary, \"id\");\n  const statsToRandomizeById = statsById;\n\n  // Add fixed stats\n  _.forEach(fixedStats, (statId) => {\n    const statOutput = statsById[statId];\n    result.push(generateSummaryItem(statOutput));\n\n    delete statsToRandomizeById[statId];\n  });\n\n  // Deal with SDs\n  const sdStat = statsById[stats.SELF_DESTRUCTS];\n  const sds1 = sdStat.results[0].simple.number;\n  const sds2 = sdStat.results[0].simple.number;\n  const shouldIncludeSds = sds1 > 1 || sds2 > 1;\n  if (!shouldIncludeSds) {\n    delete statsToRandomizeById[stats.SELF_DESTRUCTS];\n  }\n\n  const shuffled = _.shuffle(statsToRandomizeById);\n  const shuffledToInclude = _.take(shuffled, randomizeCount);\n  _.forEach(shuffledToInclude, (statOutput) => {\n    result.push(generateSummaryItem(statOutput));\n  });\n\n  return result;\n}\n\nfunction convertFrameCountToDurationString(frameCount) {\n  const duration = moment.duration(frameCount / 60, \"seconds\");\n  return moment.utc(duration.as(\"milliseconds\")).format(\"m:ss\");\n}\n\nfunction generateOutput(games) {\n  const stats = computeStats(games);\n\n  return {\n    games: generateGameInfo(games),\n    summary: stats,\n    btsSummary: generateBtsSummary(stats),\n  };\n}\n\n// function writeToFile(output) {\n//   console.log(util.inspect(output, { depth: 6, colors: true }));\n//   fs.writeFileSync('output.json', JSON.stringify(output));\n//   console.log(\"Finished writting stats to output.json!\");\n// }\n\nmodule.exports = function (games) {\n  const filteredGames = filterGames(games);\n  const output = generateOutput(filteredGames);\n  //   writeToFile(output);\n  //   console.log(output);\n  return output;\n};\n","import SlippiGame from \"@slippi/slippi-js\";\n\nimport { GameDetails, InitialStateType } from \"./types\";\n\ntype ActionMap<M extends { [index: string]: any }> = {\n  [Key in keyof M]: M[Key] extends undefined\n    ? {\n        type: Key;\n      }\n    : {\n        type: Key;\n        payload: M[Key];\n      };\n};\n\nexport enum Types {\n  ADD_GAME = \"ADD_GAME\",\n  SET_ERROR = \"SET_ERROR\",\n  ADD_FILE = \"ADD_FILE\",\n}\n\ntype ActionPayload = {\n  [Types.ADD_GAME]: {\n    filename: string;\n    game: SlippiGame;\n    details: GameDetails;\n  };\n  [Types.SET_ERROR]: {\n    filename: string;\n    error: any;\n  };\n  [Types.ADD_FILE]: {\n    file: File;\n  };\n};\n\nexport type ReducerActions = ActionMap<ActionPayload>[keyof ActionMap<ActionPayload>];\n\nexport const reducer = (state: InitialStateType, action: ReducerActions) => {\n  switch (action.type) {\n    case Types.ADD_GAME: {\n      const { filename, game, details } = action.payload;\n      const files = state.files;\n      const fileToReplace = files.findIndex((f) => f.file.name === filename);\n      if (fileToReplace !== -1) {\n        files[fileToReplace].game = game;\n        files[fileToReplace].details = details;\n        files[fileToReplace].loading = false;\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.SET_ERROR: {\n      const { filename, error } = action.payload;\n      const files = state.files;\n      const fileToReplace = files.findIndex((f) => f.file.name === filename);\n      if (fileToReplace !== -1) {\n        files[fileToReplace].error = error;\n        files[fileToReplace].loading = false;\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.ADD_FILE: {\n      const { file } = action.payload;\n      const files = state.files;\n      const alreadyExists = Boolean(files.find((f) => f.file.name === file.name));\n      if (!alreadyExists) {\n        files.push({\n          file,\n          loading: true,\n          game: null,\n          details: null,\n        });\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import React, { createContext, Dispatch, useReducer } from \"react\";\n\nimport { reducer, ReducerActions } from \"./reducers\";\nimport { InitialStateType } from \"./types\";\n\nconst initialState: InitialStateType = {\n  files: [],\n};\n\nconst AppContext = createContext<{\n  state: InitialStateType;\n  dispatch: Dispatch<ReducerActions>;\n}>({\n  state: initialState,\n  dispatch: () => null,\n});\n\nconst mainReducer = (state: InitialStateType, action: ReducerActions) => reducer(state, action);\n\nconst AppProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(mainReducer, initialState);\n\n  return <AppContext.Provider value={{ state, dispatch }}>{children}</AppContext.Provider>;\n};\n\nexport { AppProvider, AppContext };\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { DropzoneOptions, useDropzone } from \"react-dropzone\";\n\nconst getColor = (props: any) => {\n  if (props.isDragAccept) {\n    return \"#00e676\";\n  }\n  if (props.isDragActive) {\n    return \"#2196f3\";\n  }\n  return \"#eeeeee\";\n};\n\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-width: 2px;\n  border-radius: 2px;\n  border-color: ${(props) => getColor(props)};\n  border-style: dashed;\n  background-color: #fafafa;\n  color: #bdbdbd;\n  outline: none;\n  transition: border 0.24s ease-in-out;\n`;\n\nexport const DropPad: React.FC<Partial<DropzoneOptions>> = (props) => {\n  const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone(props);\n\n  return (\n    <div className=\"container\">\n      <Container {...getRootProps({ isDragActive, isDragAccept, isDragReject })}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n      </Container>\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { DropPad } from \"components/DropPad\";\nimport { generateGameDetails, readFileAsSlippiGame } from \"lib/readFile\";\nimport React, { useCallback, useContext } from \"react\";\n\nimport { AppContext, Types } from \"../store\";\n\nexport const ButtonMaskInput: React.FC = () => {\n  const { state, dispatch } = useContext(AppContext);\n\n  const onDrop = useCallback(\n    (acceptedFiles: File[]) => {\n      acceptedFiles.forEach(async (file) => {\n        dispatch({\n          type: Types.ADD_FILE,\n          payload: {\n            file,\n          },\n        });\n        try {\n          const game = await readFileAsSlippiGame(file);\n          const details = generateGameDetails(file.name, game);\n          dispatch({\n            type: Types.ADD_GAME,\n            payload: {\n              filename: file.name,\n              game,\n              details,\n            },\n          });\n        } catch (err) {\n          dispatch({\n            type: Types.SET_ERROR,\n            payload: {\n              filename: file.name,\n              error: err,\n            },\n          });\n        }\n      });\n    },\n    [dispatch]\n  );\n\n  const finishedProcessing = !state.files.find((f) => f.loading);\n  return (\n    <div\n      css={css`\n        position: relative;\n        border: solid 1px black;\n        height: 500px;\n        width: 500px;\n      `}\n    >\n      <DropPad accept=\".slp\" onDrop={onDrop} />\n      {state.files.map((f) => (\n        <div key={f.file.name}>\n          {f.file.name} {f.loading && <span>processing...</span>}\n        </div>\n      ))}\n      {finishedProcessing ? <div>done</div> : <div>still processing...</div>}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { ButtonMaskInput } from \"containers/ButtonMaskInput\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { DropPad } from \"../components/DropPad\";\nimport { generateStatsOutput } from \"../lib/readFile\";\n\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nexport const MainView: React.FC = () => {\n  const history = useHistory();\n  const [stats, setStats] = React.useState<any>(null);\n  const onDrop = async (files: File[]) => {\n    const stats = await generateStatsOutput(files);\n    setStats(stats);\n  };\n\n  const onClick = () => {\n    const params = [\"mckm1\", \"mckm2\", \"mcno1\", \"mcno2\", \"opk1\", \"opk2\", \"tdd1\", \"tdd2\", \"dpo1\", \"dpo2\", \"ipm1\", \"ipm2\"];\n    const paramMap = params.reduce((val, key) => {\n      const randomVal = getRandomArbitrary(50, 250);\n      return { ...val, [key]: randomVal.toFixed(1) };\n    }, {} as any);\n    const search = \"?\" + new URLSearchParams(paramMap).toString();\n    history.push({\n      pathname: \"/render\",\n      search,\n    });\n  };\n\n  return (\n    <div>\n      <h1>Hello world</h1>\n      <button onClick={onClick}>randomize</button>\n      <ButtonMaskInput />\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport function useParam(key: string, defaultValue = \"\") {\n  const [value, setValue] = useState<string>(defaultValue);\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const currentValue = params.get(key);\n    if (currentValue && currentValue !== value) {\n      setValue(currentValue);\n    }\n  }, [key, location, value]);\n\n  const setParam = (val: string) => {\n    const params = new URLSearchParams(location.search);\n    params.set(key, val);\n    const search = \"?\" + params.toString();\n    history.push({\n      pathname: location.pathname,\n      search,\n    });\n  };\n\n  return [value, setParam] as const;\n}\n","// From: https://usehooks.com/useKeyPress/\n\nimport { useEffect, useState } from \"react\";\n\nexport function useKeyPress(targetKey: any) {\n  // State for keeping track of whether key is pressed\n\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  // Add event listeners\n\n  useEffect(() => {\n    // If pressed key is our target key then set to true\n\n    function downHandler({ key }: any) {\n      console.log(\"key down: \", key);\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    }\n\n    // If released key is our target key then set to false\n\n    const upHandler = ({ key }: any) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n\n    window.addEventListener(\"keydown\", downHandler);\n\n    window.addEventListener(\"keyup\", upHandler);\n\n    // Remove event listeners on cleanup\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [targetKey]); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n}\n","// From: https://dev.to/joelmturner/build-an-inline-edit-text-input-with-react-hooks-4nah\n\nimport \"./index.scss\";\n\nimport { useKeyPress, useOnClickOutside } from \"lib/hooks\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nexport interface InlineEditProps {\n  text: string;\n  textAlign?: \"left\" | \"right\";\n  onSetText: (text: string) => void;\n}\n\nexport const InlineEdit: React.FC<InlineEditProps> = (props) => {\n  const { text, onSetText, textAlign } = props;\n  const [isInputActive, setIsInputActive] = useState(false);\n  const [inputValue, setInputValue] = useState(text);\n\n  const wrapperRef = useRef(null);\n  const textRef = useRef(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const tab = useKeyPress(\"Tab\");\n  const enter = useKeyPress(\"Enter\");\n  const esc = useKeyPress(\"Escape\");\n\n  useEffect(() => {\n    setInputValue(text);\n  }, [text]);\n\n  // check to see if the user clicked outside of this component\n  useOnClickOutside(wrapperRef, () => {\n    if (isInputActive) {\n      onSetText(inputValue);\n      setIsInputActive(false);\n    }\n  });\n\n  // focus the cursor in the input field on edit start\n  useEffect(() => {\n    if (isInputActive && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isInputActive]);\n\n  useEffect(() => {\n    if (isInputActive) {\n      // if Enter or tab is pressed, save the text and case the editor\n      if (enter || tab) {\n        onSetText(inputValue);\n        setIsInputActive(false);\n      }\n      // if Escape is pressed, revert the text and close the editor\n      if (esc) {\n        setInputValue(props.text);\n        setIsInputActive(false);\n      }\n    }\n  }, [tab, enter, esc, isInputActive, onSetText, inputValue, props.text]); // watch for key presses\n\n  return (\n    <span className=\"inline-text\" ref={wrapperRef}>\n      <span\n        ref={textRef}\n        onClick={() => setIsInputActive(true)}\n        className={`inline-text_copy inline-text_copy--${!isInputActive ? \"active\" : \"hidden\"}`}\n      >\n        {props.text}\n      </span>\n      <input\n        ref={inputRef}\n        style={{ textAlign }}\n        value={inputValue}\n        onChange={(e) => {\n          setInputValue(e.target.value);\n        }}\n        className={`inline-text_input inline-text_input--${isInputActive ? \"active\" : \"hidden\"}`}\n      />\n    </span>\n  );\n};\n\nInlineEdit.defaultProps = {\n  text: \"\",\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onSetText: () => {},\n};\n","// From: https://usehooks.com/useOnClickOutside/\n\nimport { useEffect } from \"react\";\n\nexport function useOnClickOutside(ref: any, handler: any) {\n  useEffect(\n    () => {\n      const listener = (event: any) => {\n        // Do nothing if clicking ref's element or descendent elements\n\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener(\"mousedown\", listener);\n\n      document.addEventListener(\"touchstart\", listener);\n\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    },\n\n    // Add ref and handler to effect dependencies\n\n    // It's worth noting that because passed in handler is a new ...\n\n    // ... function on every render that will cause this effect ...\n\n    // ... callback/cleanup to run every render. It's not a big deal ...\n\n    // ... but to optimize you can wrap handler in useCallback before ...\n\n    // ... passing it into this hook.\n\n    [ref, handler]\n  );\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\n\nimport { InlineEdit } from \"../InlineEdit\";\n\n// import CTE from \"react-click-to-edit\";\n// import EditableLabel from \"react-inline-editing\";\n\nexport interface StatProps {\n  label: string;\n  labelColor?: string;\n  labelBackground?: string;\n  leftText: string;\n  rightText: string;\n  onLeftTextBlur?: (text: string) => void;\n  onRightTextBlur?: (text: string) => void;\n}\n\nconst StatLabel = styled.div<{\n  labelBackground: string;\n  labelColor: string;\n}>`\n  background-color: ${(p) => p.labelBackground};\n  color: ${(p) => p.labelColor};\n  padding: 1rem 5rem;\n  font-weight: 700;\n  font-size: 2rem;\n  box-shadow: 0.5rem 0.5rem 0.5rem black;\n  justify-self: center;\n  z-index: 1;\n`;\n\nconst StatContent = styled.div`\n  font-weight: 800;\n  font-size: 4rem;\n`;\n\nconst OuterStat = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, minmax(0, 1fr));\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  &::before {\n    z-index: -1;\n    content: \"\";\n    display: block;\n    background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.4), transparent);\n    height: 0.1rem;\n    position: absolute;\n    width: 80%;\n    margin-left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nexport const Stat: React.FC<StatProps> = (props) => {\n  const { label, leftText, rightText, labelBackground, labelColor } = props;\n  return (\n    <OuterStat>\n      <StatContent\n        css={css`\n          justify-self: start;\n        `}\n      >\n        <InlineEdit text={leftText} onSetText={props.onLeftTextBlur!} />\n      </StatContent>\n      <StatLabel labelBackground={labelBackground!} labelColor={labelColor!}>\n        {label}\n      </StatLabel>\n      <StatContent\n        css={css`\n          justify-self: end;\n        `}\n      >\n        <InlineEdit text={rightText} textAlign=\"right\" onSetText={props.onRightTextBlur!} />\n      </StatContent>\n    </OuterStat>\n  );\n};\n\nStat.defaultProps = {\n  labelColor: \"black\",\n  labelBackground: \"white\",\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onLeftTextBlur: () => {},\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onRightTextBlur: () => {},\n};\n","import { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nimport { Stat } from \"./Stat\";\n\nexport const DamagePerOpening: React.FC = () => {\n  const [dpo1, setDpo1] = useParam(\"dpo1\", \"0\");\n  const [dpo2, setDpo2] = useParam(\"dpo2\", \"0\");\n  return (\n    <Stat\n      leftText={dpo1}\n      onLeftTextBlur={(text) => setDpo1(text)}\n      label=\"DAMAGE / OPENING\"\n      rightText={dpo2}\n      onRightTextBlur={(text) => setDpo2(text)}\n    />\n  );\n};\n","import { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nimport { Stat } from \"./Stat\";\n\nexport const InputsPerMinute: React.FC = () => {\n  const [ipm1, setIpm1] = useParam(\"ipm1\", \"0\");\n  const [ipm2, setIpm2] = useParam(\"ipm2\", \"0\");\n  return (\n    <Stat\n      leftText={ipm1}\n      onLeftTextBlur={(text) => setIpm1(text)}\n      label=\"INPUTS / MINUTE\"\n      rightText={ipm2}\n      onRightTextBlur={(text) => setIpm2(text)}\n    />\n  );\n};\n","import { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nimport { Stat } from \"./Stat\";\n\nexport const MostCommonKillMove: React.FC = () => {\n  const [mckm1, setMckm1] = useParam(\"mckm1\", \"0\");\n  const [mckm2, setMckm2] = useParam(\"mckm2\", \"0\");\n  return (\n    <Stat\n      leftText={mckm1}\n      onLeftTextBlur={(text) => setMckm1(text)}\n      label=\"MOST COMMON KILL MOVE\"\n      rightText={mckm2}\n      onRightTextBlur={(text) => setMckm2(text)}\n    />\n  );\n};\n","import { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nimport { Stat } from \"./Stat\";\n\nexport const MostCommonNeutralOpener: React.FC = () => {\n  const [mcno1, setMcno1] = useParam(\"mcno1\", \"0\");\n  const [mcno2, setMcno2] = useParam(\"mcno2\", \"0\");\n  return (\n    <Stat\n      leftText={mcno1}\n      onLeftTextBlur={(text) => setMcno1(text)}\n      label=\"MOST COMMON NEUTRAL OPENER\"\n      rightText={mcno2}\n      onRightTextBlur={(text) => setMcno2(text)}\n    />\n  );\n};\n","import { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nimport { Stat } from \"./Stat\";\n\nexport const OpeningsPerKill: React.FC = () => {\n  const [opk1, setOpk1] = useParam(\"opk1\", \"0\");\n  const [opk2, setOpk2] = useParam(\"opk2\", \"0\");\n  return (\n    <Stat\n      leftText={opk1}\n      onLeftTextBlur={(text) => setOpk1(text)}\n      label=\"OPENINGS / KILL\"\n      rightText={opk2}\n      onRightTextBlur={(text) => setOpk2(text)}\n    />\n  );\n};\n","import { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nimport { Stat } from \"./Stat\";\n\nexport const TotalDamageDone: React.FC = () => {\n  const [tdd1, setTdd1] = useParam(\"tdd1\", \"0\");\n  const [tdd2, setTdd2] = useParam(\"tdd2\", \"0\");\n  return (\n    <Stat\n      leftText={tdd1}\n      onLeftTextBlur={(text) => setTdd1(text)}\n      label=\"TOTAL DAMAGE DONE\"\n      rightText={tdd2}\n      onRightTextBlur={(text) => setTdd2(text)}\n    />\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React from \"react\";\n\nimport { DamagePerOpening } from \"./DamagePerOpening\";\nimport { InputsPerMinute } from \"./InputsPerMinute\";\nimport { MostCommonKillMove } from \"./MostCommonKillMove\";\nimport { MostCommonNeutralOpener } from \"./MostCommonNeutralOpener\";\nimport { OpeningsPerKill } from \"./OpeningsPerKill\";\nimport { TotalDamageDone } from \"./TotalDamageDone\";\n\nexport const StatDisplay: React.FC = (props) => {\n  return (\n    <div\n      css={css`\n        background: rgba(0, 0, 0, 0.3);\n        width: 100%;\n      `}\n    >\n      <div\n        css={css`\n          display: grid;\n          grid-template-columns: 100%;\n          grid-row-gap: 2rem;\n          margin: 5rem 7rem;\n        `}\n      >\n        <MostCommonKillMove />\n        <MostCommonNeutralOpener />\n        <OpeningsPerKill />\n        <TotalDamageDone />\n        <DamagePerOpening />\n        <InputsPerMinute />\n      </div>\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React from \"react\";\n\nimport { StatDisplay } from \"../components/StatDisplay\";\nimport poweredByImage from \"../styles/images/powered-by.png\";\n\nexport const RenderView: React.FC = (props) => {\n  return (\n    <div\n      css={css`\n        margin: 0 12rem;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      `}\n    >\n      <h1\n        css={css`\n          text-transform: uppercase;\n          font-weight: 800;\n          font-size: 6rem;\n          margin: 2rem;\n        `}\n      >\n        Post Match Stats\n      </h1>\n      <img\n        alt=\"Powered by Slippi\"\n        css={css`\n          max-height: 5rem;\n        `}\n        src={poweredByImage}\n      />\n      <StatDisplay />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { hot } from \"react-hot-loader/root\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport { AppProvider } from \"./store\";\nimport { MainView } from \"./views/MainView\";\nimport { RenderView } from \"./views/RenderView\";\n\nconst App: React.FC = () => {\n  return (\n    <AppProvider>\n      <Router basename=\"/\">\n        <Route exact path=\"/\" component={MainView} />\n        <Route path=\"/render\" component={RenderView} />\n      </Router>\n    </AppProvider>\n  );\n};\n\nexport default hot(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"./index.scss\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {\n  FrameEntryType,\n  FramesType,\n  GameEndType,\n  GameStartType,\n  MetadataType,\n  SlippiGame,\n  StatsType,\n} from \"@slippi/slippi-js\";\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst generateStats = require(\"./stats\");\n\nexport interface GameDetails {\n  filePath: string;\n  settings: GameStartType;\n  frames: FramesType;\n  stats: StatsType;\n  metadata: MetadataType;\n  latestFrame: FrameEntryType | null;\n  gameEnd: GameEndType | null;\n}\n\nexport async function generateStatsOutput(files: File[]) {\n  const games = await readFilesAsSlippiGameDetails(files);\n  console.log(games);\n  const output = generateStats(games);\n  console.log(output);\n  return output;\n}\n\nexport async function readFileAsSlippiGame(file: File): Promise<SlippiGame> {\n  const data = (await readFileAsArrayBuffer(file)) as ArrayBuffer;\n  const arr = new Int8Array(data);\n  const buf = Buffer.from(arr);\n  return new SlippiGame(buf);\n}\n\nexport async function readFileAsGameDetails(file: File): Promise<GameDetails> {\n  const game = await readFileAsSlippiGame(file);\n  return generateGameDetails(file.name, game);\n}\n\nexport function generateGameDetails(name: string, game: SlippiGame): GameDetails {\n  return {\n    filePath: name,\n    settings: game.getSettings(),\n    frames: game.getFrames(),\n    stats: game.getStats(),\n    metadata: game.getMetadata(),\n    latestFrame: game.getLatestFrame(),\n    gameEnd: game.getGameEnd(),\n  };\n}\n\nexport async function readFilesAsSlippiGameDetails(files: File[]): Promise<GameDetails[]> {\n  const promises = files.map(async (f) => {\n    console.log(\"checking file: \", f);\n    const data = (await readFileAsArrayBuffer(f)) as ArrayBuffer;\n    const arr = new Int8Array(data);\n    const buf = Buffer.from(arr);\n    const game = new SlippiGame(buf);\n    // console.log(game.getStats());\n    return {\n      filePath: f.name,\n      settings: game.getSettings(),\n      frames: game.getFrames(),\n      stats: game.getStats(),\n      metadata: game.getMetadata(),\n      latestFrame: game.getLatestFrame(),\n      gameEnd: game.getGameEnd(),\n    };\n  });\n  return Promise.all(promises);\n}\n\nexport async function readFileAsArrayBuffer(file: File): Promise<string | ArrayBufferLike> {\n  return new Promise((resolve, reject) => {\n    const fr = new FileReader();\n    fr.onabort = () => reject(\"file reading was aborted\");\n    fr.onerror = () => reject(\"file reading has failed\");\n    if (fr.readAsBinaryString) {\n      fr.addEventListener(\n        \"load\",\n        function () {\n          const string = (this as any).resultString != null ? (this as any).resultString : this.result;\n          const result = new Uint8Array(string.length);\n          for (let i = 0; i < string.length; i++) {\n            result[i] = string.charCodeAt(i);\n          }\n          resolve(result.buffer);\n        },\n        false\n      );\n      fr.readAsBinaryString(file);\n    } else {\n      fr.addEventListener(\n        \"load\",\n        function () {\n          if (this.result) {\n            resolve(this.result);\n          } else {\n            reject(\"no data read\");\n          }\n        },\n        false\n      );\n      fr.readAsArrayBuffer(file);\n    }\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/powered-by.61867ea8.png\";"],"sourceRoot":""}
{"version":3,"sources":["store/reducers.ts","store/context.tsx","components/DropPad.tsx","components/FileList/FileItem.tsx","components/FileList/index.tsx","containers/FileListInput.tsx","lib/processStats.ts","views/MainView.tsx","lib/hooks/useParam.ts","lib/hooks/useKeyPress.ts","lib/resources.ts","containers/CharDisplay/index.tsx","components/GameResult/HeadToHead.tsx","components/GameResult/index.tsx","containers/GameDisplay/index.tsx","components/InlineEdit/index.tsx","lib/hooks/useOnClickOutside.ts","components/Stat.tsx","containers/StatDisplay/Statistics.tsx","containers/StatDisplay/index.tsx","containers/RenderDisplay.tsx","views/RenderView.tsx","App.tsx","serviceWorker.ts","index.tsx","lib/stats.js","lib/readFile.ts","styles/images/powered-by.png"],"names":["Types","initialState","files","AppContext","createContext","state","dispatch","mainReducer","action","type","ADD_GAME","payload","filename","game","details","fileToReplace","findIndex","f","file","name","loading","SET_ERROR","error","ADD_FILE","Boolean","find","push","reducer","AppProvider","children","useReducer","Provider","value","Container","styled","div","props","isDragAccept","isDragActive","getColor","DropPad","useDropzone","getRootProps","getInputProps","isDragReject","className","FileItem","FileList","map","key","ProcessButton","button","FileListInput","history","useHistory","useContext","React","useState","stats","onDrop","useCallback","acceptedFiles","forEach","a","readFileAsSlippiGame","generateGameDetails","finishedProcessing","buttonText","length","css","accept","disabled","onClick","search","gameDetails","generateStats","games","summary","params","btsSummary","lastGame","char1","players","characterId","char2","color1","characterColor","color2","i","console","log","gameKey","stageId","stage","id","gameDuration","duration","playerInfo","p","gameResult","join","gameValue","s","opk1","results","simple","text","opk2","dpo1","dpo2","nw1","nw2","playerRes","result","opponentRes","mckm1","shortName","toUpperCase","count","mckm2","mcno1","mcno2","ipm1","ipm2","akp1","akp2","tdd1","tdd2","URLSearchParams","processStats","filter","toString","pathname","readOnly","JSON","stringify","MainView","paramMap","reduce","val","min","max","randomVal","Math","random","toFixed","useParam","defaultValue","setValue","location","useLocation","useEffect","currentValue","get","setParam","set","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","window","addEventListener","removeEventListener","sanitize","replacement","toLowerCase","replace","getCharacterFolderFromId","color","characterName","characterUtil","getCharacterName","getCharacterFolderFromName","character","charFolder","colorFolder","process","CharDisplay","colorParam","charParam","align","facing","imgSrc","Outer","BaseHeadImage","HeadImage","position","imageAlignment","side","invWaypoint","waypoint","dim","backgroundColor","imageSrc","HeadToHead","result1","result2","p1","p2","GameResult","Game","index","gameInfo","split","res1","res2","GameDisplay","total","InlineEdit","ref","handler","onSetText","textAlign","isInputActive","setIsInputActive","inputValue","setInputValue","wrapperRef","useRef","textRef","inputRef","tab","enter","esc","listener","event","current","contains","target","document","focus","style","maxWidth","onChange","e","defaultProps","StatLabel","labelBackground","labelColor","StatContent","OuterStat","Stat","label","leftText","rightText","onLeftTextBlur","onRightTextBlur","ConnectedStat","param1","param2","field1","setField1","field2","setField2","MostCommonKillMove","MostCommonNeutralOpener","AverageKillPercent","NeutralWins","OpeningsPerKill","TotalDamageDone","Divider","StatDisplay","RenderDisplay","Header","h1","RenderView","to","textDecoration","alt","src","poweredByImage","hot","basename","exact","path","component","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","require","stageUtil","stages","moveUtil","moves","characters","moment","_","OPENINGS_PER_KILL","DAMAGE_PER_OPENING","NEUTRAL_WINS","KILL_MOVES","NEUTRAL_OPENER_MOVES","EARLY_KILLS","LATE_DEATHS","SELF_DESTRUCTS","INPUTS_PER_MINUTE","AVG_KILL_PERCENT","HIGH_DAMAGE_PUNISHES","DAMAGE_DONE","statDefininitions","betterDirection","recommendedRounding","calculate","playerIndex","genOverallRatioStat","killMoves","flatMap","conversions","conversionsForPlayer","conversion","isForPlayer","didKill","last","killMovesByMove","groupBy","killMoveCounts","move","first","moveId","getMoveName","getMoveShortName","orderedKillMoveCounts","orderBy","topKillMove","simpleText","neutralMoves","isNeutralWin","openingType","neutralMovesByMove","neutralMoveCounts","orderedNeutralMoveCounts","topNeutralMove","oppStocks","stocks","stock","isOpp","hasEndPercent","endPercent","orderedOppStocks","earliestKillStock","number","take","playerStocks","isPlayer","orderedPlayerStocks","latestDeathStock","sdCounts","playerEndedStocks","oppKillConversions","sdSum","sum","sumBy","ratio","genSimpleFromRatio","punishes","getDamageDone","punish","startPercent","orderedPunishes","topPunish","field","fixedNum","statRatios","overallStats","keyBy","avg","averageRatios","ratios","computeStats","firstGame","orderIndices","settings","indices","chain","clone","reverse","statKey","def","iIndices","port","output","generateGameInfo","orderedGames","metadata","startAt","generatePlayerInfo","player","nametag","getCharacterColorName","gameEnd","opp","oppIndex","gameEndMethod","latestFrame","lrasInitiatorIndex","getResultForPlayer","playerInfoGen","getStageName","startTime","convertFrameCountToDurationString","lastFrame","generateBtsSummary","fixedStats","generateSummaryItem","fullStatOutput","statsById","statsToRandomizeById","statId","statOutput","sdStat","sds1","sds2","shuffled","shuffle","shuffledToInclude","frameCount","utc","as","format","generateOutput","gamesByIsSingles","nonSinglesGames","some","filePath","singlesGames","gamesByPorts","ports","gamesWithSamePorts","shift","flatGames","flatten","isEmpty","Error","filterGames","readFileAsArrayBuffer","data","arr","Int8Array","buf","Buffer","from","SlippiGame","getSettings","frames","getFrames","getStats","getMetadata","getLatestFrame","getGameEnd","Promise","resolve","reject","fr","FileReader","onabort","onerror","readAsBinaryString","string","this","resultString","Uint8Array","charCodeAt","buffer","readAsArrayBuffer","module","exports"],"mappings":"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","file":"static/js/main.368bbf8d.chunk.js","sourcesContent":["import SlippiGame from \"@slippi/slippi-js\";\n\nimport { GameDetails, InitialStateType } from \"./types\";\n\ntype ActionMap<M extends { [index: string]: any }> = {\n  [Key in keyof M]: M[Key] extends undefined\n    ? {\n        type: Key;\n      }\n    : {\n        type: Key;\n        payload: M[Key];\n      };\n};\n\nexport enum Types {\n  ADD_GAME = \"ADD_GAME\",\n  SET_ERROR = \"SET_ERROR\",\n  ADD_FILE = \"ADD_FILE\",\n}\n\ntype ActionPayload = {\n  [Types.ADD_GAME]: {\n    filename: string;\n    game: SlippiGame;\n    details: GameDetails;\n  };\n  [Types.SET_ERROR]: {\n    filename: string;\n    error: any;\n  };\n  [Types.ADD_FILE]: {\n    file: File;\n  };\n};\n\nexport type ReducerActions = ActionMap<ActionPayload>[keyof ActionMap<ActionPayload>];\n\nexport const reducer = (state: InitialStateType, action: ReducerActions) => {\n  switch (action.type) {\n    case Types.ADD_GAME: {\n      const { filename, game, details } = action.payload;\n      const files = state.files;\n      const fileToReplace = files.findIndex((f) => f.file.name === filename);\n      if (fileToReplace !== -1) {\n        files[fileToReplace].game = game;\n        files[fileToReplace].details = details;\n        files[fileToReplace].loading = false;\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.SET_ERROR: {\n      const { filename, error } = action.payload;\n      const files = state.files;\n      const fileToReplace = files.findIndex((f) => f.file.name === filename);\n      if (fileToReplace !== -1) {\n        files[fileToReplace].error = error;\n        files[fileToReplace].loading = false;\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.ADD_FILE: {\n      const { file } = action.payload;\n      const files = state.files;\n      const alreadyExists = Boolean(files.find((f) => f.file.name === file.name));\n      if (!alreadyExists) {\n        files.push({\n          file,\n          loading: true,\n          game: null,\n          details: null,\n        });\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import React, { createContext, Dispatch, useReducer } from \"react\";\n\nimport { reducer, ReducerActions } from \"./reducers\";\nimport { InitialStateType } from \"./types\";\n\nconst initialState: InitialStateType = {\n  files: [],\n};\n\nconst AppContext = createContext<{\n  state: InitialStateType;\n  dispatch: Dispatch<ReducerActions>;\n}>({\n  state: initialState,\n  dispatch: () => null,\n});\n\nconst mainReducer = (state: InitialStateType, action: ReducerActions) => reducer(state, action);\n\nconst AppProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(mainReducer, initialState);\n\n  return <AppContext.Provider value={{ state, dispatch }}>{children}</AppContext.Provider>;\n};\n\nexport { AppProvider, AppContext };\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { DropzoneOptions, useDropzone } from \"react-dropzone\";\n\nconst getColor = (props: any) => {\n  if (props.isDragAccept) {\n    return \"#00e676\";\n  }\n  if (props.isDragActive) {\n    return \"#2196f3\";\n  }\n  return \"#eeeeee\";\n};\n\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-width: 2px;\n  border-radius: 2px;\n  border-color: ${(props) => getColor(props)};\n  border-style: dashed;\n  background-color: #fafafa;\n  color: #bdbdbd;\n  outline: none;\n  transition: border 0.24s ease-in-out;\n`;\n\nexport const DropPad: React.FC<Partial<DropzoneOptions>> = (props) => {\n  const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone(props);\n\n  return (\n    <div className=\"container\">\n      <Container {...getRootProps({ isDragActive, isDragAccept, isDragReject })}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n      </Container>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ProcessedFile } from \"store/types\";\n\nexport const FileItem: React.FC<ProcessedFile> = (props) => {\n  const { file, loading, error } = props;\n  return (\n    <div>\n      {file.name} {loading && <span>processing...</span>} {error && <span>error :c</span>}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport { ProcessedFile } from \"store/types\";\n\nimport { FileItem } from \"./FileItem\";\n\nexport interface FileListProps {\n  files: ProcessedFile[];\n}\n\nexport const FileList: React.FC<FileListProps> = (props) => {\n  const { files } = props;\n  return (\n    <div>\n      {files.map((f) => (\n        <FileItem key={f.file.name} {...f} />\n      ))}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { DropPad } from \"components/DropPad\";\nimport { FileList } from \"components/FileList\";\nimport { processStats } from \"lib/processStats\";\nimport { GameDetails, generateGameDetails, readFileAsSlippiGame } from \"lib/readFile\";\nimport generateStats from \"lib/stats\";\nimport React, { useCallback, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { AppContext, Types } from \"../store\";\n\nconst ProcessButton = styled.button`\n  background: #286163;\n  border: none;\n  color: inherit;\n  cursor: pointer;\n  font: inherit;\n  padding: 1rem 0rem;\n  width: 100%;\n  font-weight: 700;\n  font-size: 3rem;\n  &:disabled {\n    opacity: 0.65;\n    cursor: not-allowed;\n  }\n`;\n\nexport const FileListInput: React.FC = () => {\n  const history = useHistory();\n  const { state, dispatch } = useContext(AppContext);\n  const [stats, setStats] = React.useState<any>(null);\n\n  const onClick = () => {\n    const gameDetails = state.files.filter((f) => f.details !== null).map((f) => f.details as GameDetails);\n    // const s = generateStats(gameDetails);\n    // setStats(s);\n    const params = processStats(gameDetails);\n    const search = \"?\" + params.toString();\n    history.push({\n      pathname: \"/render\",\n      search,\n    });\n  };\n\n  const onDrop = useCallback(\n    (acceptedFiles: File[]) => {\n      acceptedFiles.forEach(async (file) => {\n        dispatch({\n          type: Types.ADD_FILE,\n          payload: {\n            file,\n          },\n        });\n        try {\n          const game = await readFileAsSlippiGame(file);\n          const details = generateGameDetails(file.name, game);\n          dispatch({\n            type: Types.ADD_GAME,\n            payload: {\n              filename: file.name,\n              game,\n              details,\n            },\n          });\n        } catch (err) {\n          dispatch({\n            type: Types.SET_ERROR,\n            payload: {\n              filename: file.name,\n              error: err,\n            },\n          });\n        }\n      });\n    },\n    [dispatch]\n  );\n\n  const finishedProcessing = !state.files.find((f) => f.loading);\n  const ready = state.files.length === 0 || finishedProcessing;\n  const buttonText = ready ? \"COMPUTE STATS\" : \"PLEASE WAIT\";\n  return (\n    <div\n      css={css`\n        position: relative;\n        border: solid 1px black;\n        height: 500px;\n        width: 500px;\n      `}\n    >\n      <DropPad accept=\".slp\" onDrop={onDrop} />\n      <FileList files={state.files} />\n      {finishedProcessing ? <div>done</div> : <div>still processing...</div>}\n      <ProcessButton disabled={state.files.length === 0 || !finishedProcessing} onClick={onClick}>\n        {buttonText}\n      </ProcessButton>\n      <textarea readOnly value={JSON.stringify(stats, null, 2)} />\n    </div>\n  );\n};\n","import generateStats from \"lib/stats\";\nimport { GameDetails } from \"store/types\";\n\nexport function processStats(gameDetails: GameDetails[]): URLSearchParams {\n  const { games, summary, btsSummary } = generateStats(gameDetails);\n  const params: any = {}; // \"mckm1\": , \"mckm2\", \"mcno1\", \"mcno2\", \"opk1\", \"opk2\", \"tdd1\", \"tdd2\", \"dpo1\", \"dpo2\", \"ipm1\", \"ipm2\", \"akp1\", \"akp2\", \"nw1\", \"nw2\"};\n\n  // Set character info\n  const lastGame = games[games.length - 1];\n  params.char1 = lastGame.players[0].characterId;\n  params.char2 = lastGame.players[1].characterId;\n  params.color1 = lastGame.players[0].characterColor;\n  params.color2 = lastGame.players[1].characterColor;\n\n  // Set game info\n  (games as any[]).forEach((game, i) => {\n    console.log(\"processing game: \", game);\n    const gameKey = `g${i + 1}`;\n    const stageId: number = game.stage.id;\n    const gameDuration: string = game.duration;\n    const playerInfo = game.players.map((p: any) => [p.characterId, p.characterColor, p.gameResult].join(\",\"));\n    const gameValue = [stageId, gameDuration, ...playerInfo].join(\",\");\n    console.log(`${gameKey} : ${gameValue}`);\n    params[gameKey] = gameValue;\n  });\n\n  // Set the stat values\n  (summary as any[]).forEach((s) => {\n    switch (s.id) {\n      case \"openingsPerKill\": {\n        params.opk1 = s.results[0].simple.text;\n        params.opk2 = s.results[1].simple.text;\n        break;\n      }\n      case \"damagePerOpening\": {\n        params.dpo1 = s.results[0].simple.text;\n        params.dpo2 = s.results[1].simple.text;\n        break;\n      }\n      case \"neutralWins\": {\n        params.nw1 = s.results[0].simple.text;\n        params.nw2 = s.results[1].simple.text;\n        break;\n      }\n      case \"killMoves\": {\n        console.log(s);\n        const playerRes = s.results[0].result[0];\n        const opponentRes = s.results[1].result[0];\n        params.mckm1 = `${playerRes.shortName.toUpperCase()} - ${playerRes.count}`;\n        params.mckm2 = `${opponentRes.shortName.toUpperCase()} - ${opponentRes.count}`;\n        break;\n      }\n      case \"neutralOpenerMoves\": {\n        const playerRes = s.results[0].result[0];\n        const opponentRes = s.results[1].result[0];\n        params.mcno1 = `${playerRes.shortName.toUpperCase()} - ${playerRes.count}`;\n        params.mcno2 = `${opponentRes.shortName.toUpperCase()} - ${opponentRes.count}`;\n        break;\n      }\n      case \"inputsPerMinute\": {\n        params.ipm1 = s.results[0].simple.text;\n        params.ipm2 = s.results[1].simple.text;\n        break;\n      }\n      case \"avgKillPercent\": {\n        params.akp1 = s.results[0].simple.text;\n        params.akp2 = s.results[1].simple.text;\n        break;\n      }\n      case \"damageDone\": {\n        params.tdd1 = s.results[0].simple.text;\n        params.tdd2 = s.results[1].simple.text;\n        break;\n      }\n    }\n  });\n\n  console.log(\"returning these params: \", params);\n  return new URLSearchParams(params);\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { FileListInput } from \"containers/FileListInput\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nexport const MainView: React.FC = () => {\n  const history = useHistory();\n\n  const onClick = () => {\n    const params = [\"mckm1\", \"mckm2\", \"mcno1\", \"mcno2\", \"opk1\", \"opk2\", \"tdd1\", \"tdd2\", \"dpo1\", \"dpo2\", \"ipm1\", \"ipm2\"];\n    const paramMap = params.reduce((val, key) => {\n      const randomVal = getRandomArbitrary(50, 250);\n      return { ...val, [key]: randomVal.toFixed(1) };\n    }, {} as any);\n    const search = \"?\" + new URLSearchParams(paramMap).toString();\n    history.push({\n      pathname: \"/render\",\n      search,\n    });\n  };\n\n  return (\n    <div\n      css={css`\n        margin: 0 12rem;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      `}\n    >\n      <h1>Slippi Stats</h1>\n      <button onClick={onClick}>randomize</button>\n      <FileListInput />\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport function useParam(key: string, defaultValue = \"\") {\n  const [value, setValue] = useState<string>(defaultValue);\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const currentValue = params.get(key);\n    if (currentValue !== value) {\n      setValue(currentValue || defaultValue);\n    }\n  }, [key, defaultValue, location, value]);\n\n  const setParam = (val: string) => {\n    const params = new URLSearchParams(location.search);\n    params.set(key, val);\n    const search = \"?\" + params.toString();\n    history.push({\n      pathname: location.pathname,\n      search,\n    });\n  };\n\n  return [value, setParam] as const;\n}\n","// From: https://usehooks.com/useKeyPress/\n\nimport { useEffect, useState } from \"react\";\n\nexport function useKeyPress(targetKey: any) {\n  // State for keeping track of whether key is pressed\n\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  // Add event listeners\n\n  useEffect(() => {\n    // If pressed key is our target key then set to true\n\n    function downHandler({ key }: any) {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    }\n\n    // If released key is our target key then set to false\n\n    const upHandler = ({ key }: any) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n\n    window.addEventListener(\"keydown\", downHandler);\n\n    window.addEventListener(\"keyup\", upHandler);\n\n    // Remove event listeners on cleanup\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [targetKey]); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n}\n","import { characters as characterUtil } from \"@slippi/slippi-js\";\n\nfunction sanitize(text: string, replacement = \"-\"): string {\n  return text.toLowerCase().replace(/[. &]+/gi, replacement);\n}\n\nexport function getCharacterFolderFromId(characterId: string | number, color = \"Default\") {\n  const characterName = characterUtil.getCharacterName(+characterId);\n  return getCharacterFolderFromName(characterName, color);\n}\n\nexport function getCharacterFolderFromName(character: string, color = \"Default\") {\n  const charFolder = sanitize(character);\n  const colorFolder = sanitize(color);\n  return `${process.env.PUBLIC_URL}/images/characters/${charFolder}/${colorFolder}`;\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { useParam } from \"lib/hooks\";\nimport { getCharacterFolderFromId } from \"lib/resources\";\nimport React from \"react\";\n\nexport interface CharDisplayProps {\n  colorParam: string;\n  charParam: string;\n  align: \"left\" | \"right\";\n}\n\nexport const CharDisplay: React.FC<CharDisplayProps> = (props) => {\n  const { colorParam, charParam, align } = props;\n  const [color] = useParam(colorParam);\n  const [char] = useParam(charParam);\n  const facing = align === \"left\" ? \"right\" : \"left\";\n  const charFolder = getCharacterFolderFromId(char, color);\n  const imgSrc = `${charFolder}/vs-${facing}.png`;\n  return (\n    <div\n      css={css`\n        display: block;\n        height: 100%;\n        width: 100%;\n        background-image: url(${imgSrc});\n        background-repeat: no-repeat;\n        background-size: cover;\n        background-position: top ${align};\n      `}\n    ></div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { getCharacterFolderFromId } from \"lib/resources\";\n\nconst Outer = styled.div`\n  position: relative;\n  display: block;\n  border: solid 0.1rem rgba(255, 255, 255, 0.3);\n  height: 40px;\n  width: 90px;\n`;\n\nconst BaseHeadImage = styled.div`\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  &::after {\n    content: \" \";\n    height: 100%;\n    background-repeat: no-repeat;\n    background-size: cover;\n    position: absolute;\n  }\n`;\n\ntype Side = \"left\" | \"right\";\n\nconst flip = (side: Side): Side => (side === \"left\" ? \"right\" : \"left\");\n\nconst HeadImage = styled(BaseHeadImage)<{\n  backgroundColor?: string;\n  imageSrc: string;\n  imageAlignment: Side;\n  side: Side;\n  waypoint: number;\n  dim?: boolean;\n}>`\n  ${(p) => {\n    const position = p.imageAlignment === p.side ? p.side : flip(p.side);\n    const invWaypoint = 100 - p.waypoint;\n    return `\n      ${p.side === \"right\" ? `clip-path: polygon(${p.waypoint}% 0, 100% 0, 100% 100%, ${invWaypoint}% 100%);` : \"\"}\n      ${p.dim ? \"filter: brightness(30%);\" : \"\"}\n      ${p.backgroundColor ? `background-color: ${p.backgroundColor};` : \"\"}\n      &::after {\n        width: ${p.waypoint}%;\n        background-image: url(${p.imageSrc});\n        background-position: top ${position};\n        ${p.side === \"right\" ? `left: ${invWaypoint}%;` : \"\"}\n        ${p.side !== p.imageAlignment ? \"transform: scaleX(-1);\" : \"\"}\n      }\n    `;\n  }}\n`;\n\nexport interface HeadToHeadProps {\n  char1: number | string;\n  color1: string;\n  result1: string;\n  char2: number | string;\n  color2: string;\n  result2: string;\n}\n\nexport const HeadToHead: React.FC<HeadToHeadProps> = ({ char1, color1, result1, char2, color2, result2 }) => {\n  const waypoint = 55;\n  const p1 = `${getCharacterFolderFromId(char1, color1)}/portrait.png`;\n  const p2 = `${getCharacterFolderFromId(char2, color2)}/portrait.png`;\n\n  return (\n    <Outer>\n      <HeadImage\n        backgroundColor=\"red\"\n        imageSrc={p1}\n        waypoint={waypoint}\n        imageAlignment={\"right\"}\n        side=\"left\"\n        dim={result1 === \"loser\"}\n      />\n      <HeadImage\n        backgroundColor=\"green\"\n        imageSrc={p2}\n        waypoint={waypoint}\n        imageAlignment={\"right\"}\n        side=\"right\"\n        dim={result2 === \"loser\"}\n      />\n    </Outer>\n  );\n};\n","import React from \"react\";\nimport { HeadToHead } from \"./HeadToHead\";\n\nexport interface GameResultProps {\n  stageId: string;\n  duration: string;\n  char1: number | string;\n  color1: string;\n  result1: string;\n  char2: number | string;\n  color2: string;\n  result2: string;\n}\n\nexport const GameResult: React.FC<GameResultProps> = (props) => {\n  return (\n    <div>\n      <HeadToHead {...props} />\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { GameResult } from \"components/GameResult\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nexport interface GameDisplayProps {\n  total: number;\n}\n\nconst Game: React.FC<{\n  index: number;\n}> = ({ index }) => {\n  const [gameInfo] = useParam(`g${index}`);\n  // The game info starts off undefined\n  if (!gameInfo) {\n    return null;\n  }\n\n  console.log(`game info: ${gameInfo}`);\n  const [stageId, duration, char1, color1, res1, char2, color2, res2] = gameInfo.split(\",\");\n  return (\n    <GameResult\n      stageId={stageId}\n      duration={duration}\n      char1={char1}\n      color1={color1}\n      result1={res1}\n      char2={char2}\n      color2={color2}\n      result2={res2}\n    />\n  );\n};\n\nexport const GameDisplay: React.FC<GameDisplayProps> = ({ total }) => {\n  const games = [];\n  for (let i = 1; i <= total; i++) {\n    games.push(<Game key={`g${i}`} index={i} />);\n  }\n  return (\n    <div\n      css={css`\n        display: flex;\n        justify-content: space-between;\n      `}\n    >\n      {games}\n    </div>\n  );\n};\n","// From: https://dev.to/joelmturner/build-an-inline-edit-text-input-with-react-hooks-4nah\n\nimport \"./index.scss\";\n\nimport { useKeyPress, useOnClickOutside } from \"lib/hooks\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nexport interface InlineEditProps {\n  text: string;\n  textAlign?: \"left\" | \"right\";\n  onSetText: (text: string) => void;\n}\n\nexport const InlineEdit: React.FC<InlineEditProps> = (props) => {\n  const { text, onSetText, textAlign } = props;\n  const [isInputActive, setIsInputActive] = useState(false);\n  const [inputValue, setInputValue] = useState(text);\n\n  const wrapperRef = useRef(null);\n  const textRef = useRef(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const tab = useKeyPress(\"Tab\");\n  const enter = useKeyPress(\"Enter\");\n  const esc = useKeyPress(\"Escape\");\n\n  useEffect(() => {\n    setInputValue(text);\n  }, [text]);\n\n  // check to see if the user clicked outside of this component\n  useOnClickOutside(wrapperRef, () => {\n    if (isInputActive) {\n      onSetText(inputValue);\n      setIsInputActive(false);\n    }\n  });\n\n  // focus the cursor in the input field on edit start\n  useEffect(() => {\n    if (isInputActive && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isInputActive]);\n\n  useEffect(() => {\n    if (isInputActive) {\n      // if Enter or tab is pressed, save the text and case the editor\n      if (enter || tab) {\n        onSetText(inputValue);\n        setIsInputActive(false);\n      }\n      // if Escape is pressed, revert the text and close the editor\n      if (esc) {\n        setInputValue(props.text);\n        setIsInputActive(false);\n      }\n    }\n  }, [tab, enter, esc, isInputActive, onSetText, inputValue, props.text]); // watch for key presses\n\n  return (\n    <span className=\"inline-text\" ref={wrapperRef}>\n      <span\n        ref={textRef}\n        onClick={() => setIsInputActive(true)}\n        className={`inline-text_copy inline-text_copy--${!isInputActive ? \"active\" : \"hidden\"}`}\n      >\n        {props.text}\n      </span>\n      <input\n        ref={inputRef}\n        style={{ textAlign, maxWidth: \"100%\" }}\n        value={inputValue}\n        onChange={(e) => {\n          setInputValue(e.target.value);\n        }}\n        className={`inline-text_input inline-text_input--${isInputActive ? \"active\" : \"hidden\"}`}\n      />\n    </span>\n  );\n};\n\nInlineEdit.defaultProps = {\n  text: \"\",\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onSetText: () => {},\n};\n","// From: https://usehooks.com/useOnClickOutside/\n\nimport { useEffect } from \"react\";\n\nexport function useOnClickOutside(ref: any, handler: any) {\n  useEffect(\n    () => {\n      const listener = (event: any) => {\n        // Do nothing if clicking ref's element or descendent elements\n\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener(\"mousedown\", listener);\n\n      document.addEventListener(\"touchstart\", listener);\n\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    },\n\n    // Add ref and handler to effect dependencies\n\n    // It's worth noting that because passed in handler is a new ...\n\n    // ... function on every render that will cause this effect ...\n\n    // ... callback/cleanup to run every render. It's not a big deal ...\n\n    // ... but to optimize you can wrap handler in useCallback before ...\n\n    // ... passing it into this hook.\n\n    [ref, handler]\n  );\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\n\nimport { InlineEdit } from \"./InlineEdit\";\n\nexport interface StatProps {\n  type?: \"text\" | \"number\";\n  label: string;\n  labelColor?: string;\n  labelBackground?: string;\n  leftText: string;\n  rightText: string;\n  onLeftTextBlur?: (text: string) => void;\n  onRightTextBlur?: (text: string) => void;\n}\n\nconst StatLabel = styled.div<{\n  labelBackground: string;\n  labelColor: string;\n}>`\n  text-align: center;\n  background-color: ${(p) => p.labelBackground};\n  color: ${(p) => p.labelColor};\n  padding: 0.3em 2.5em;\n  font-weight: 700;\n  font-size: 1.2em;\n  box-shadow: 0.2em 0.2em 0.2em black;\n  justify-self: center;\n  z-index: 1;\n`;\n\nconst StatContent = styled.div<{\n  type: \"text\" | \"number\";\n}>`\n  width: 100%;\n  font-weight: 800;\n  font-size: ${(p) => (p.type === \"text\" ? \"1.4em\" : \"2.3em\")};\n`;\n\nconst OuterStat = styled.div`\n  display: grid;\n  grid-template-columns: 20% 60% 20%;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  &::before {\n    z-index: -1;\n    content: \"\";\n    display: block;\n    background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.4), transparent);\n    height: 0.1rem;\n    position: absolute;\n    width: 80%;\n    margin-left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nexport const Stat: React.FC<StatProps> = (props) => {\n  const { type, label, leftText, rightText, labelBackground, labelColor } = props;\n  return (\n    <OuterStat>\n      <StatContent\n        type={type!}\n        css={css`\n          justify-self: start;\n        `}\n      >\n        <InlineEdit text={leftText} onSetText={props.onLeftTextBlur!} />\n      </StatContent>\n      <StatLabel labelBackground={labelBackground!} labelColor={labelColor!}>\n        {label}\n      </StatLabel>\n      <StatContent\n        type={type!}\n        css={css`\n          justify-self: end;\n          text-align: right;\n        `}\n      >\n        <InlineEdit text={rightText} textAlign=\"right\" onSetText={props.onRightTextBlur!} />\n      </StatContent>\n    </OuterStat>\n  );\n};\n\nStat.defaultProps = {\n  type: \"number\",\n  labelColor: \"black\",\n  labelBackground: \"white\",\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onLeftTextBlur: () => {},\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onRightTextBlur: () => {},\n};\n","import { Stat } from \"components/Stat\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\ninterface ConnectedStatProps {\n  param1: string;\n  param2: string;\n  label: string;\n  type?: \"text\" | \"number\";\n}\n\nconst ConnectedStat: React.FC<ConnectedStatProps> = (props) => {\n  const { param1, param2, label, type } = props;\n  const defaultValue = type === \"number\" ? \"0\" : \"-\";\n  const [field1, setField1] = useParam(param1, defaultValue);\n  const [field2, setField2] = useParam(param2, defaultValue);\n  return (\n    <Stat\n      type={type}\n      leftText={field1}\n      onLeftTextBlur={(text) => setField1(text)}\n      label={label}\n      rightText={field2}\n      onRightTextBlur={(text) => setField2(text)}\n    />\n  );\n};\n\nConnectedStat.defaultProps = {\n  type: \"number\",\n};\n\nexport const MostCommonKillMove: React.FC = () => {\n  return <ConnectedStat type=\"text\" param1=\"mckm1\" param2=\"mckm2\" label=\"MOST COMMON KILL MOVE\" />;\n};\n\nexport const MostCommonNeutralOpener: React.FC = () => {\n  return <ConnectedStat type=\"text\" param1=\"mcno1\" param2=\"mcno2\" label=\"MOST COMMON NEUTRAL OPENER\" />;\n};\n\nexport const AverageKillPercent: React.FC = () => {\n  return <ConnectedStat param1=\"akp1\" param2=\"akp2\" label=\"AVERAGE KILL PERCENT\" />;\n};\n\nexport const NeutralWins: React.FC = () => {\n  return <ConnectedStat param1=\"nw1\" param2=\"nw2\" label=\"NEUTRAL WINS\" />;\n};\n\nexport const DamagePerOpening: React.FC = () => {\n  return <ConnectedStat param1=\"dpo1\" param2=\"dpo2\" label=\"DAMAGE / OPENING\" />;\n};\n\nexport const InputsPerMinute: React.FC = () => {\n  return <ConnectedStat param1=\"ipm1\" param2=\"ipm2\" label=\"INPUTS / MINUTE\" />;\n};\n\nexport const OpeningsPerKill: React.FC = () => {\n  return <ConnectedStat param1=\"opk1\" param2=\"opk2\" label=\"OPENINGS / KILL\" />;\n};\n\nexport const TotalDamageDone: React.FC = () => {\n  return <ConnectedStat param1=\"tdd1\" param2=\"tdd2\" label=\"TOTAL DAMAGE DONE\" />;\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { GameDisplay } from \"../GameDisplay\";\nimport React from \"react\";\n\nimport {\n  AverageKillPercent,\n  DamagePerOpening,\n  InputsPerMinute,\n  MostCommonKillMove,\n  MostCommonNeutralOpener,\n  NeutralWins,\n  OpeningsPerKill,\n  TotalDamageDone,\n} from \"./Statistics\";\n\nconst Divider = styled.div`\n  content: \" \";\n  display: block;\n  height: 0.1rem;\n  width: 100%;\n  margin-top: 0.7rem;\n  background-color: rgba(255, 255, 255, 0.05);\n`;\n\nexport const StatDisplay: React.FC = () => {\n  return (\n    <div\n      css={css`\n        background: rgba(0, 0, 0, 0.3);\n        width: 100%;\n      `}\n    >\n      <div\n        css={css`\n          display: grid;\n          grid-template-columns: 100%;\n          grid-row-gap: 2rem;\n          margin: 4rem;\n        `}\n      >\n        <MostCommonKillMove />\n        <MostCommonNeutralOpener />\n        <Divider />\n        <OpeningsPerKill />\n        <TotalDamageDone />\n        <AverageKillPercent />\n        <NeutralWins />\n        <Divider />\n        <GameDisplay total={4} />\n      </div>\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\n\nimport { CharDisplay } from \"./CharDisplay\";\nimport { StatDisplay } from \"./StatDisplay\";\n\nconst Outer = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: 20% 60% 20%;\n`;\n\nexport const RenderDisplay: React.FC = (props) => {\n  return (\n    <Outer>\n      <div\n        css={css`\n          justify-self: end;\n          width: 100%;\n        `}\n      >\n        <CharDisplay charParam=\"char1\" colorParam=\"color1\" align=\"right\" />\n      </div>\n      <StatDisplay />\n      <div\n        css={css`\n          width: 100%;\n        `}\n      >\n        <CharDisplay charParam=\"char2\" colorParam=\"color2\" align=\"left\" />\n      </div>\n    </Outer>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { RenderDisplay } from \"../containers/RenderDisplay\";\nimport poweredByImage from \"../styles/images/powered-by.png\";\n\nconst Header = styled.h1`\n  text-transform: uppercase;\n  font-weight: 800;\n  font-size: 5.5rem;\n  margin: 2rem;\n  padding-bottom: 1rem;\n  position: relative;\n\n  &::before {\n    z-index: -1;\n    content: \"\";\n    display: block;\n    background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.2), transparent);\n    height: 0.1rem;\n    position: absolute;\n    width: 80%;\n    margin-left: 50%;\n    transform: translateX(-50%);\n    bottom: 0;\n  }\n`;\n\nexport const RenderView: React.FC = (props) => {\n  return (\n    <div\n      css={css`\n        margin: 0 12rem;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      `}\n    >\n      <Link to=\"/\" style={{ textDecoration: \"inherit\", color: \"inherit\" }}>\n        <Header>Post Match Stats</Header>\n      </Link>\n      <img\n        alt=\"Powered by Slippi\"\n        css={css`\n          max-height: 5rem;\n          margin-bottom: 2rem;\n        `}\n        src={poweredByImage}\n      />\n      <RenderDisplay />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { hot } from \"react-hot-loader/root\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport { AppProvider } from \"./store\";\nimport { MainView } from \"./views/MainView\";\nimport { RenderView } from \"./views/RenderView\";\n\nconst App: React.FC = () => {\n  return (\n    <AppProvider>\n      <Router basename=\"/\">\n        <Route exact path=\"/\" component={MainView} />\n        <Route path=\"/render\" component={RenderView} />\n      </Router>\n    </AppProvider>\n  );\n};\n\nexport default hot(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"./index.scss\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* eslint-disable */\n\nconst { stages: stageUtil, moves: moveUtil, characters: characterUtil } = require(\"@slippi/slippi-js\");\nconst moment = require(\"moment\");\nconst _ = require(\"lodash\");\n\nconst stats = {\n  OPENINGS_PER_KILL: \"openingsPerKill\",\n  DAMAGE_PER_OPENING: \"damagePerOpening\",\n  NEUTRAL_WINS: \"neutralWins\",\n  KILL_MOVES: \"killMoves\",\n  NEUTRAL_OPENER_MOVES: \"neutralOpenerMoves\",\n  EARLY_KILLS: \"earlyKills\",\n  LATE_DEATHS: \"lateDeaths\",\n  SELF_DESTRUCTS: \"selfDestructs\",\n  INPUTS_PER_MINUTE: \"inputsPerMinute\",\n  AVG_KILL_PERCENT: \"avgKillPercent\",\n  HIGH_DAMAGE_PUNISHES: \"highDamagePunishes\",\n  DAMAGE_DONE: \"damageDone\",\n};\n\nconst statDefininitions = {\n  [stats.OPENINGS_PER_KILL]: {\n    id: stats.OPENINGS_PER_KILL,\n    name: \"Openings / Kill\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"openingsPerKill\", 1);\n    },\n  },\n  [stats.DAMAGE_PER_OPENING]: {\n    id: stats.DAMAGE_PER_OPENING,\n    name: \"Damage / Opening\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"damagePerOpening\", 1);\n    },\n  },\n  [stats.NEUTRAL_WINS]: {\n    id: stats.NEUTRAL_WINS,\n    name: \"Neutral Wins\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 0,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"neutralWinRatio\", 0, \"count\");\n    },\n  },\n  [stats.KILL_MOVES]: {\n    id: stats.KILL_MOVES,\n    name: \"Most Common Kill Move\",\n    type: \"text\",\n    calculate: (games, playerIndex) => {\n      const killMoves = _.flatMap(games, (game) => {\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        const conversionsForPlayer = _.filter(conversions, (conversion) => {\n          const isForPlayer = conversion.playerIndex === playerIndex;\n          const didKill = conversion.didKill;\n          return isForPlayer && didKill;\n        });\n\n        return _.map(conversionsForPlayer, (conversion) => {\n          return _.last(conversion.moves);\n        });\n      });\n\n      const killMovesByMove = _.groupBy(killMoves, \"moveId\");\n      const killMoveCounts = _.map(killMovesByMove, (moves) => {\n        const move = _.first(moves);\n        return {\n          count: moves.length,\n          id: move.moveId,\n          name: moveUtil.getMoveName(move.moveId),\n          shortName: moveUtil.getMoveShortName(move.moveId),\n        };\n      });\n\n      const orderedKillMoveCounts = _.orderBy(killMoveCounts, [\"count\"], [\"desc\"]);\n      const topKillMove = _.first(orderedKillMoveCounts);\n      let simpleText = \"N/A\";\n      if (topKillMove) {\n        simpleText = `${topKillMove.shortName} (${topKillMove.count})`;\n      }\n\n      return {\n        result: orderedKillMoveCounts,\n        simple: {\n          text: simpleText,\n        },\n      };\n    },\n  },\n  [stats.NEUTRAL_OPENER_MOVES]: {\n    id: stats.NEUTRAL_OPENER_MOVES,\n    name: \"Most Common Neutral Opener\",\n    type: \"text\",\n    calculate: (games, playerIndex) => {\n      const neutralMoves = _.flatMap(games, (game) => {\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        const conversionsForPlayer = _.filter(conversions, (conversion) => {\n          const isForPlayer = conversion.playerIndex === playerIndex;\n          const isNeutralWin = conversion.openingType === \"neutral-win\";\n          return isForPlayer && isNeutralWin;\n        });\n\n        return _.map(conversionsForPlayer, (conversion) => {\n          return _.first(conversion.moves);\n        });\n      });\n\n      // TODO: This following code is repeated from kill move code, put in function\n\n      const neutralMovesByMove = _.groupBy(neutralMoves, \"moveId\");\n      const neutralMoveCounts = _.map(neutralMovesByMove, (moves) => {\n        const move = _.first(moves);\n        return {\n          count: moves.length,\n          id: move.moveId,\n          name: moveUtil.getMoveName(move.moveId),\n          shortName: moveUtil.getMoveShortName(move.moveId),\n        };\n      });\n\n      const orderedNeutralMoveCounts = _.orderBy(neutralMoveCounts, [\"count\"], [\"desc\"]);\n      const topNeutralMove = _.first(orderedNeutralMoveCounts);\n      let simpleText = \"N/A\";\n      if (topNeutralMove) {\n        simpleText = `${topNeutralMove.shortName} (${topNeutralMove.count})`;\n      }\n\n      return {\n        result: orderedNeutralMoveCounts,\n        simple: {\n          text: simpleText,\n        },\n      };\n    },\n  },\n  [stats.EARLY_KILLS]: {\n    id: stats.EARLY_KILLS,\n    name: \"Earliest Kill\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const oppStocks = _.flatMap(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        return _.filter(stocks, (stock) => {\n          const isOpp = stock.playerIndex !== playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isOpp && hasEndPercent;\n        });\n      });\n\n      const orderedOppStocks = _.orderBy(oppStocks, [\"endPercent\"], [\"asc\"]);\n      const earliestKillStock = _.first(orderedOppStocks);\n      const simple = {\n        text: \"N/A\",\n        number: null,\n      };\n\n      if (earliestKillStock) {\n        simple.number = earliestKillStock.endPercent;\n        simple.text = simple.number.toFixed(1);\n      }\n\n      return {\n        result: _.take(orderedOppStocks, 5),\n        simple: simple,\n      };\n    },\n  },\n  [stats.LATE_DEATHS]: {\n    id: stats.LATE_DEATHS,\n    name: \"Latest Death\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const playerStocks = _.flatMap(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        return _.filter(stocks, (stock) => {\n          const isPlayer = stock.playerIndex === playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isPlayer && hasEndPercent;\n        });\n      });\n\n      const orderedPlayerStocks = _.orderBy(playerStocks, [\"endPercent\"], [\"desc\"]);\n      const latestDeathStock = _.first(orderedPlayerStocks);\n      const simple = {\n        text: \"N/A\",\n        number: null,\n      };\n\n      if (latestDeathStock) {\n        simple.number = latestDeathStock.endPercent;\n        simple.text = simple.number.toFixed(1);\n      }\n\n      return {\n        result: _.take(orderedPlayerStocks, 5),\n        simple: simple,\n      };\n    },\n  },\n  [stats.SELF_DESTRUCTS]: {\n    id: stats.SELF_DESTRUCTS, // Only show this one if greater than 2 for one player\n    name: \"Total Self-Destructs\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 0,\n    calculate: (games, playerIndex) => {\n      const sdCounts = _.map(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        const playerEndedStocks = _.filter(stocks, (stock) => {\n          const isPlayer = stock.playerIndex === playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isPlayer && hasEndPercent;\n        });\n\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        const oppKillConversions = _.filter(conversions, (conversion) => {\n          const isOpp = conversion.playerIndex !== playerIndex;\n          const didKill = conversion.didKill;\n          return isOpp && didKill;\n        });\n\n        return playerEndedStocks.length - oppKillConversions.length;\n      });\n\n      const sdSum = _.sum(sdCounts);\n\n      return {\n        result: sdSum,\n        simple: {\n          number: sdSum,\n          text: `${sdSum}`,\n        },\n      };\n    },\n  },\n  [stats.INPUTS_PER_MINUTE]: {\n    id: stats.INPUTS_PER_MINUTE,\n    name: \"Inputs / Minute\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"inputsPerMinute\", 1);\n    },\n  },\n  [stats.AVG_KILL_PERCENT]: {\n    id: stats.AVG_KILL_PERCENT,\n    name: \"Average Kill Percent\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const oppStocks = _.flatMap(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        return _.filter(stocks, (stock) => {\n          const isOpp = stock.playerIndex !== playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isOpp && hasEndPercent;\n        });\n      });\n\n      const result = {\n        total: oppStocks.length,\n        count: _.sumBy(oppStocks, \"endPercent\") || 0,\n      };\n\n      result.ratio = result.total ? result.count / result.total : null;\n\n      return {\n        result: result,\n        simple: genSimpleFromRatio(result, 1),\n      };\n    },\n  },\n  [stats.HIGH_DAMAGE_PUNISHES]: {\n    id: stats.HIGH_DAMAGE_PUNISHES,\n    name: \"Highest Damage Punish\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const punishes = _.flatMap(games, (game) => {\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        return _.filter(conversions, (conversion) => {\n          const isForPlayer = conversion.playerIndex === playerIndex;\n          const hasEndPercent = conversion.endPercent !== null;\n          return isForPlayer && hasEndPercent;\n        });\n      });\n\n      const getDamageDone = (punish) => punish.endPercent - punish.startPercent;\n      const orderedPunishes = _.orderBy(punishes, [getDamageDone], \"desc\");\n      const topPunish = _.first(orderedPunishes);\n      const simple = {\n        text: \"N/A\",\n        number: null,\n      };\n\n      if (topPunish) {\n        simple.number = getDamageDone(topPunish);\n        simple.text = simple.number.toFixed(1);\n      }\n\n      return {\n        result: _.take(orderedPunishes, 5),\n        simple: simple,\n      };\n    },\n  },\n  [stats.DAMAGE_DONE]: {\n    id: stats.DAMAGE_DONE,\n    name: \"Total Damage Done\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"damagePerOpening\", 1, \"count\");\n    },\n  },\n};\n\nfunction genOverallRatioStat(games, playerIndex, field, fixedNum, type = \"ratio\") {\n  const statRatios = _.map(games, (game) => {\n    const overallStats = _.get(game, [\"stats\", \"overall\"]);\n    const overallStatsByPlayer = _.keyBy(overallStats, \"playerIndex\");\n    const overallStatsForPlayer = overallStatsByPlayer[playerIndex];\n    return overallStatsForPlayer[field];\n  });\n\n  const avg = averageRatios(statRatios);\n  const simple = genSimpleFromRatio(avg, fixedNum, type);\n\n  return {\n    result: avg,\n    simple: simple,\n  };\n}\n\nfunction averageRatios(ratios) {\n  const result = {};\n\n  result.count = _.sumBy(ratios, \"count\") || 0;\n  result.total = _.sumBy(ratios, \"total\") || 0;\n  result.ratio = result.total ? result.count / result.total : null;\n\n  return result;\n}\n\nfunction genSimpleFromRatio(ratio, fixedNum, type = \"ratio\") {\n  const result = {};\n\n  switch (type) {\n    case \"ratio\":\n      result.number = ratio.ratio;\n      result.text = ratio.ratio !== null ? ratio.ratio.toFixed(fixedNum) : \"N/A\";\n      break;\n    case \"count\":\n      result.number = ratio.count;\n      result.text = ratio.count.toFixed(fixedNum);\n      break;\n  }\n\n  return result;\n}\n\n/*\nfunction parseFilesInFolder() {\n  const dirPath = process.cwd();\n  const dirContents = fs.readdirSync(dirPath, { withFileTypes: true });\n\n  console.log(\"Reading files in directory...\\n\");\n  const gameDetails = _.chain(dirContents).filter((item) => {\n    return item.isFile() && path.extname(item.name) === \".slp\";\n  }).map((slpItem) => {\n    const slpFilePath = path.join(dirPath, slpItem.name);\n    const game = new SlippiGame(slpFilePath);\n    return {\n      filePath: slpFilePath,\n      settings: game.getSettings(),\n      frames: game.getFrames(),\n      stats: game.getStats(),\n      metadata: game.getMetadata(),\n      latestFrame: game.getLatestFrame(),\n      gameEnd: game.getGameEnd(),\n    };\n  }).value();\n\n  return gameDetails;\n}\n*/\n\nfunction filterGames(games) {\n  // console.log(games);\n  const gamesByIsSingles = _.groupBy(games, (game) => {\n    const numberOfPlayers = game.settings.players.length;\n    return numberOfPlayers === 2;\n  });\n\n  const nonSinglesGames = _.get(gamesByIsSingles, false) || [];\n  if (_.some(nonSinglesGames)) {\n    console.log(\"The following games have been excluded because they are not singles games:\");\n    _.forEach(nonSinglesGames, (game) => {\n      console.log(game.filePath);\n    });\n    console.log();\n  }\n\n  const singlesGames = _.get(gamesByIsSingles, true) || [];\n  const gamesByPorts = _.chain(singlesGames)\n    .groupBy((game) => {\n      const ports = _.map(game.settings.players, \"port\");\n      return _.join(ports, \"-\");\n    })\n    .orderBy([\"length\"], [\"desc\"])\n    .value();\n\n  const gamesWithSamePorts = gamesByPorts.shift();\n  if (_.some(gamesByPorts)) {\n    console.log(\"The following games have been excluded because the player ports differ:\");\n    const flatGames = _.flatten(gamesByPorts);\n    _.forEach(flatGames, (game) => {\n      console.log(game.filePath);\n    });\n    console.log();\n  }\n\n  if (_.isEmpty(gamesWithSamePorts)) {\n    throw new Error(\"There were no valid games found to compute stats from.\");\n  }\n\n  console.log(`Including ${gamesWithSamePorts.length} games for stat calculation...`);\n\n  return gamesWithSamePorts;\n}\n\nfunction computeStats(games) {\n  const firstGame = _.first(games);\n  // console.log(firstGame);\n  const orderIndices = _.map(firstGame.settings.players, \"playerIndex\");\n  const reversedIndices = _.chain(orderIndices).clone().reverse().value();\n  const indices = [orderIndices, reversedIndices];\n\n  const statResults = _.flatMap(stats, (statKey) => {\n    const def = statDefininitions[statKey];\n    if (!def.calculate) {\n      return [];\n    }\n\n    const results = _.map(indices, (iIndices) => {\n      const result = def.calculate(games, iIndices[0], iIndices[1]);\n      result.port = iIndices[0] + 1;\n      return result;\n    });\n\n    const output = { ...def };\n    delete output.calculate;\n    output.results = results;\n\n    return [output];\n  });\n\n  return statResults;\n}\n\nfunction generateGameInfo(games) {\n  const getStartAt = (game) => game.metadata.startAt;\n  const orderedGames = _.orderBy(games, [getStartAt], [\"asc\"]);\n\n  const getResultForPlayer = (game, playerIndex) => {\n    // console.log(game);\n    // Calculate assumed game result\n    const gameEnd = game.gameEnd;\n    if (!gameEnd) {\n      return \"unknown\";\n    }\n\n    const players = _.get(game.settings, [\"players\"]);\n    const opp = _.filter(players, (player) => player.playerIndex !== playerIndex);\n    const oppIndex = _.get(opp, [0, \"playerIndex\"]);\n\n    switch (gameEnd.gameEndMethod) {\n      case 1:\n        // This is a TIME! ending, not implemented yet\n        return \"unknown\";\n      case 2:\n        // This is a GAME! ending\n        const latestFrame = _.get(game.latestFrame, \"players\") || [];\n        const playerStocks = _.get(latestFrame, [playerIndex, \"post\", \"stocksRemaining\"]);\n        const oppStocks = _.get(latestFrame, [oppIndex, \"post\", \"stocksRemaining\"]);\n        if (playerStocks === 0 && oppStocks === 0) {\n          return \"unknown\";\n        }\n\n        return playerStocks === 0 ? \"loser\" : \"winner\";\n      case 7:\n        return gameEnd.lrasInitiatorIndex === playerIndex ? \"loser\" : \"winner\";\n    }\n\n    return \"unknown\";\n  };\n\n  const generatePlayerInfo = (game) => (player) => {\n    // console.log(player);\n    return {\n      port: player.port,\n      characterId: player.characterId,\n      characterColor: player.characterColor,\n      nametag: player.nametag,\n      characterName: characterUtil.getCharacterName(player.characterId),\n      characterColor: characterUtil.getCharacterColorName(player.characterId, player.characterColor),\n      gameResult: getResultForPlayer(game, player.playerIndex),\n    };\n  };\n\n  return _.map(orderedGames, (game) => {\n    const playerInfoGen = generatePlayerInfo(game);\n\n    return {\n      stage: {\n        id: game.settings.stageId,\n        name: stageUtil.getStageName(game.settings.stageId),\n      },\n      players: _.map(game.settings.players, playerInfoGen),\n      startTime: game.metadata.startAt,\n      duration: convertFrameCountToDurationString(game.stats.lastFrame),\n    };\n  });\n}\n\nfunction generateBtsSummary(summary) {\n  const fixedStats = [stats.KILL_MOVES, stats.NEUTRAL_OPENER_MOVES, stats.OPENINGS_PER_KILL, stats.DAMAGE_DONE];\n\n  const randomizeCount = 2;\n\n  const generateSummaryItem = (fullStatOutput) => {\n    const type = fullStatOutput.type;\n\n    const output = { ...fullStatOutput };\n    output.results = _.map(fullStatOutput.results, (result) => _.get(result, [\"simple\", type]));\n\n    return output;\n  };\n\n  const result = [];\n\n  const statsById = _.keyBy(summary, \"id\");\n  const statsToRandomizeById = statsById;\n\n  // Add fixed stats\n  _.forEach(fixedStats, (statId) => {\n    const statOutput = statsById[statId];\n    result.push(generateSummaryItem(statOutput));\n\n    delete statsToRandomizeById[statId];\n  });\n\n  // Deal with SDs\n  const sdStat = statsById[stats.SELF_DESTRUCTS];\n  const sds1 = sdStat.results[0].simple.number;\n  const sds2 = sdStat.results[0].simple.number;\n  const shouldIncludeSds = sds1 > 1 || sds2 > 1;\n  if (!shouldIncludeSds) {\n    delete statsToRandomizeById[stats.SELF_DESTRUCTS];\n  }\n\n  const shuffled = _.shuffle(statsToRandomizeById);\n  const shuffledToInclude = _.take(shuffled, randomizeCount);\n  _.forEach(shuffledToInclude, (statOutput) => {\n    result.push(generateSummaryItem(statOutput));\n  });\n\n  return result;\n}\n\nfunction convertFrameCountToDurationString(frameCount) {\n  const duration = moment.duration(frameCount / 60, \"seconds\");\n  return moment.utc(duration.as(\"milliseconds\")).format(\"m:ss\");\n}\n\nfunction generateOutput(games) {\n  const stats = computeStats(games);\n\n  return {\n    games: generateGameInfo(games),\n    summary: stats,\n    btsSummary: generateBtsSummary(stats),\n  };\n}\n\n// function writeToFile(output) {\n//   console.log(util.inspect(output, { depth: 6, colors: true }));\n//   fs.writeFileSync('output.json', JSON.stringify(output));\n//   console.log(\"Finished writting stats to output.json!\");\n// }\n\nexport default function (games) {\n  const filteredGames = filterGames(games);\n  const output = generateOutput(filteredGames);\n  //   writeToFile(output);\n  //   console.log(output);\n  return output;\n}\n","import {\n  FrameEntryType,\n  FramesType,\n  GameEndType,\n  GameStartType,\n  MetadataType,\n  SlippiGame,\n  StatsType,\n} from \"@slippi/slippi-js\";\n\nimport generateStats from \"./stats\";\n\nexport interface GameDetails {\n  filePath: string;\n  settings: GameStartType;\n  frames: FramesType;\n  stats: StatsType;\n  metadata: MetadataType;\n  latestFrame: FrameEntryType | null;\n  gameEnd: GameEndType | null;\n}\n\nexport async function generateStatsOutput(files: File[]) {\n  const games = await readFilesAsSlippiGameDetails(files);\n  console.log(games);\n  const output = generateStats(games);\n  console.log(output);\n  return output;\n}\n\nexport async function readFileAsSlippiGame(file: File): Promise<SlippiGame> {\n  const data = (await readFileAsArrayBuffer(file)) as ArrayBuffer;\n  const arr = new Int8Array(data);\n  const buf = Buffer.from(arr);\n  return new SlippiGame(buf);\n}\n\nexport async function readFileAsGameDetails(file: File): Promise<GameDetails> {\n  const game = await readFileAsSlippiGame(file);\n  return generateGameDetails(file.name, game);\n}\n\nexport function generateGameDetails(name: string, game: SlippiGame): GameDetails {\n  return {\n    filePath: name,\n    settings: game.getSettings(),\n    frames: game.getFrames(),\n    stats: game.getStats(),\n    metadata: game.getMetadata(),\n    latestFrame: game.getLatestFrame(),\n    gameEnd: game.getGameEnd(),\n  };\n}\n\nexport async function readFilesAsSlippiGameDetails(files: File[]): Promise<GameDetails[]> {\n  const promises = files.map(async (f) => {\n    console.log(\"checking file: \", f);\n    const data = (await readFileAsArrayBuffer(f)) as ArrayBuffer;\n    const arr = new Int8Array(data);\n    const buf = Buffer.from(arr);\n    const game = new SlippiGame(buf);\n    // console.log(game.getStats());\n    return {\n      filePath: f.name,\n      settings: game.getSettings(),\n      frames: game.getFrames(),\n      stats: game.getStats(),\n      metadata: game.getMetadata(),\n      latestFrame: game.getLatestFrame(),\n      gameEnd: game.getGameEnd(),\n    };\n  });\n  return Promise.all(promises);\n}\n\nexport async function readFileAsArrayBuffer(file: File): Promise<string | ArrayBufferLike> {\n  return new Promise((resolve, reject) => {\n    const fr = new FileReader();\n    fr.onabort = () => reject(\"file reading was aborted\");\n    fr.onerror = () => reject(\"file reading has failed\");\n    if (fr.readAsBinaryString) {\n      fr.addEventListener(\n        \"load\",\n        function () {\n          const string = (this as any).resultString != null ? (this as any).resultString : this.result;\n          const result = new Uint8Array(string.length);\n          for (let i = 0; i < string.length; i++) {\n            result[i] = string.charCodeAt(i);\n          }\n          resolve(result.buffer);\n        },\n        false\n      );\n      fr.readAsBinaryString(file);\n    } else {\n      fr.addEventListener(\n        \"load\",\n        function () {\n          if (this.result) {\n            resolve(this.result);\n          } else {\n            reject(\"no data read\");\n          }\n        },\n        false\n      );\n      fr.readAsArrayBuffer(file);\n    }\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/powered-by.61867ea8.png\";"],"sourceRoot":""}
{"version":3,"sources":["store/reducers.ts","store/context.tsx","components/Header.tsx","components/DropPad.tsx","lib/resources.ts","components/FileList/FileItem.tsx","components/FileList/index.tsx","lib/portColor.ts","lib/processStats.ts","containers/FileListInput.tsx","lib/demo.ts","styles/theme.tsx","views/MainView.tsx","lib/hooks/useParam.ts","lib/hooks/useKeyPress.ts","containers/CharDisplay/index.tsx","components/Block.tsx","components/InlineEdit/index.tsx","lib/hooks/useOnClickOutside.ts","components/TextBlock.tsx","containers/NameBlock.tsx","containers/ScoreBlock.tsx","components/GameResult/HeadToHead.tsx","components/GameResult/StageTimer.tsx","components/GameResult/index.tsx","containers/GameDisplay/index.tsx","components/Stat.tsx","containers/StatDisplay/Statistics.tsx","containers/StatDisplay/index.tsx","containers/RenderDisplay.tsx","views/RenderView.tsx","App.tsx","serviceWorker.ts","index.tsx","lib/stats.js","lib/readFile.ts","styles/images/powered-by.png"],"names":["Types","initialState","files","AppContext","createContext","state","dispatch","mainReducer","action","type","ADD_GAME","payload","filename","details","fileToReplace","findIndex","f","loading","SET_ERROR","error","ADD_FILE","Boolean","find","push","REMOVE_FILE","filter","reducer","AppProvider","children","useReducer","Provider","value","Header","styled","h1","Container","div","props","isDragAccept","isDragActive","getColor","DropPad","useDropzone","getRootProps","getInputProps","isDragReject","sanitize","text","replacement","toLowerCase","replace","getCharacterFolderFromId","characterId","color","character","charFolder","colorFolder","process","getCharacterFolderFromName","characterUtil","getCharacterName","getCharacterPortrait","folder","BasicFileItem","onRemove","name","css","onClick","FileItem","file","icons","settings","players","map","player","charId","src","getCharacterStockIcon","getCharacterColorName","characterColor","key","port","PortColor","FileList","getPortColor","portNumber","P1","P2","P3","P4","extractNameAndCode","playerPort","metadata","index","playerIndex","playerTag","nametag","netplayName","get","ProcessButton","button","FileListInput","history","useHistory","useContext","onDrop","useCallback","acceptedFiles","startTime","Date","getTime","promises","a","readFileAsSlippiGame","game","generateGameDetails","Promise","all","then","time","console","log","finishedProcessing","buttonText","length","accept","disabled","search","gameDetails","filtered","filterGames","Error","generateStats","games","summary","params","lastGame","leftPlayer","rightPlayer","leftColor","rightColor","char1","char2","color1","color2","lastGameDetails","leftTag","leftCode","rightTag","rightCode","name1","toUpperCase","name2","sub1","sub2","gt","leftWins","rightWins","forEach","i","gameKey","stageId","stage","id","gameDuration","duration","playerInfo","p","gameResult","join","gameValue","score","s","opk1","results","simple","opk2","dpo1","dpo2","nw1","nw2","playerRes","result","opponentRes","mckm1","shortName","count","mckm2","mcno1","mcno2","ipm1","ipm2","akp1","akp2","tdd1","tdd2","URLSearchParams","processStats","toString","pathname","getRandomArbitrary","min","max","Math","random","getRandomInt","ceil","floor","generateDemoQuery","paramMap","generateRandomCharacter","totalGames","leftWillWin","generateRandomGame","move","moveUtil","getMoveShortName","generateRandomMove","toFixed","charInfo","getCharacterInfo","colorIndex","colors","LEGAL_STAGE_IDS","playerInfos","stageIndex","generateRandomStageId","mins","secs","String","padStart","generateRandomDuration","defaultTheme","primaryColor","secondaryColor","GlobalTheme","styles","MainView","useParam","defaultValue","useState","setValue","location","useLocation","useEffect","currentValue","setParam","val","set","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","window","addEventListener","removeEventListener","FLIP_RIGHT_CHARS","CharDisplay","colorParam","charParam","align","theme","char","facing","imgSrc","side","getCharacterVSScreen","alignment","defaultAlignment","includes","getAlignment","Block","backgroundColor","optional","show","InlineEdit","ref","handler","onSetText","textAlign","isInputActive","setIsInputActive","inputValue","setInputValue","wrapperRef","useRef","textRef","inputRef","tab","enter","esc","listener","event","current","contains","target","document","focus","className","style","maxWidth","onChange","e","defaultProps","TextBlock","onEdit","child","Name","Subtitle","NameBlock","nameParam","defaultName","subtitleParam","setName","sub","setSub","StyledBlock","ScoreBlock","setScore","Outer","BaseHeadImage","HeadImage","invWaypoint","waypoint","dim","imageSrc","HeadToHead","result1","result2","p1","p2","Text","span","StageTimer","stageIcon","stageName","stageUtil","getStageName","getStageIcon","GameResult","rest","Game","gameInfo","split","res1","res2","GameDisplay","total","parseInt","StatLabel","labelBackground","labelColor","StatContent","OuterStat","Stat","label","leftText","rightText","onLeftTextBlur","onRightTextBlur","ConnectedStat","param1","param2","field1","setField1","field2","setField2","MostCommonKillMove","MostCommonNeutralOpener","AverageKillPercent","NeutralWins","OpeningsPerKill","TotalDamageDone","Divider","StatDisplay","RenderDisplay","RenderView","to","textDecoration","title","href","rel","alt","poweredByImage","hot","basename","exact","path","component","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","require","stages","moves","characters","moment","_","stats","OPENINGS_PER_KILL","DAMAGE_PER_OPENING","NEUTRAL_WINS","KILL_MOVES","NEUTRAL_OPENER_MOVES","EARLY_KILLS","LATE_DEATHS","SELF_DESTRUCTS","INPUTS_PER_MINUTE","AVG_KILL_PERCENT","HIGH_DAMAGE_PUNISHES","DAMAGE_DONE","statDefininitions","betterDirection","recommendedRounding","calculate","genOverallRatioStat","killMoves","flatMap","conversions","conversionsForPlayer","conversion","isForPlayer","didKill","last","killMovesByMove","groupBy","killMoveCounts","first","moveId","getMoveName","orderedKillMoveCounts","orderBy","topKillMove","simpleText","neutralMoves","isNeutralWin","openingType","neutralMovesByMove","neutralMoveCounts","orderedNeutralMoveCounts","topNeutralMove","oppStocks","stocks","stock","isOpp","hasEndPercent","endPercent","orderedOppStocks","earliestKillStock","number","take","playerStocks","isPlayer","orderedPlayerStocks","latestDeathStock","sdCounts","playerEndedStocks","oppKillConversions","sdSum","sum","sumBy","ratio","genSimpleFromRatio","punishes","getDamageDone","punish","startPercent","orderedPunishes","topPunish","field","fixedNum","statRatios","overallStats","keyBy","avg","averageRatios","ratios","gamesByIsSingles","nonSinglesGames","some","filePath","singlesGames","gamesByPorts","chain","ports","gamesWithSamePorts","shift","flatGames","flatten","isEmpty","computeStats","firstGame","orderIndices","indices","clone","reverse","statKey","def","iIndices","output","generateGameInfo","orderedGames","startAt","generatePlayerInfo","characterName","gameEnd","opp","oppIndex","gameEndMethod","latestFrame","lrasInitiatorIndex","getResultForPlayer","playerInfoGen","convertFrameCountToDurationString","lastFrame","generateBtsSummary","fixedStats","generateSummaryItem","fullStatOutput","statsById","statsToRandomizeById","statId","statOutput","sdStat","sds1","sds2","shuffled","shuffle","shuffledToInclude","frameCount","utc","as","format","generateOutput","btsSummary","readFileAsArrayBuffer","data","arr","Int8Array","buf","Buffer","from","SlippiGame","getSettings","frames","getFrames","getStats","getMetadata","getLatestFrame","getGameEnd","resolve","reject","fr","FileReader","onabort","onerror","readAsBinaryString","string","this","resultString","Uint8Array","charCodeAt","buffer","readAsArrayBuffer","module","exports"],"mappings":"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","file":"static/js/main.17111426.chunk.js","sourcesContent":["import SlippiGame from \"@slippi/slippi-js\";\nimport { GameDetails } from \"lib/readFile\";\n\nimport { InitialStateType } from \"./types\";\n\ntype ActionMap<M extends { [index: string]: any }> = {\n  [Key in keyof M]: M[Key] extends undefined\n    ? {\n        type: Key;\n      }\n    : {\n        type: Key;\n        payload: M[Key];\n      };\n};\n\nexport enum Types {\n  ADD_GAME = \"ADD_GAME\",\n  SET_ERROR = \"SET_ERROR\",\n  ADD_FILE = \"ADD_FILE\",\n  REMOVE_FILE = \"REMOVE_FILE\",\n}\n\ntype ActionPayload = {\n  [Types.ADD_GAME]: {\n    filename: string;\n    game: SlippiGame;\n    details: GameDetails;\n  };\n  [Types.SET_ERROR]: {\n    filename: string;\n    error: any;\n  };\n  [Types.ADD_FILE]: {\n    filename: string;\n  };\n  [Types.REMOVE_FILE]: {\n    filename: string;\n  };\n};\n\nexport type ReducerActions = ActionMap<ActionPayload>[keyof ActionMap<ActionPayload>];\n\nexport const reducer = (state: InitialStateType, action: ReducerActions) => {\n  switch (action.type) {\n    case Types.ADD_GAME: {\n      const { filename, details } = action.payload;\n      const files = state.files;\n      const fileToReplace = files.findIndex((f) => f.filename === filename);\n      if (fileToReplace !== -1) {\n        files[fileToReplace].details = details;\n        files[fileToReplace].loading = false;\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.SET_ERROR: {\n      const { filename, error } = action.payload;\n      const files = state.files;\n      const fileToReplace = files.findIndex((f) => f.filename === filename);\n      if (fileToReplace !== -1) {\n        files[fileToReplace].error = error;\n        files[fileToReplace].loading = false;\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.ADD_FILE: {\n      const { filename } = action.payload;\n      const files = state.files;\n      const alreadyExists = Boolean(files.find((f) => f.filename === filename));\n      if (!alreadyExists) {\n        files.push({\n          filename,\n          loading: true,\n          details: null,\n        });\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.REMOVE_FILE: {\n      const { filename } = action.payload;\n      const files = state.files.filter((f) => f.filename !== filename);\n      return {\n        ...state,\n        files,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import React, { createContext, Dispatch, useReducer } from \"react\";\n\nimport { reducer, ReducerActions } from \"./reducers\";\nimport { InitialStateType } from \"./types\";\n\nconst initialState: InitialStateType = {\n  files: [],\n};\n\nconst AppContext = createContext<{\n  state: InitialStateType;\n  dispatch: Dispatch<ReducerActions>;\n}>({\n  state: initialState,\n  dispatch: () => null,\n});\n\nconst mainReducer = (state: InitialStateType, action: ReducerActions) => reducer(state, action);\n\nconst AppProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(mainReducer, initialState);\n\n  return <AppContext.Provider value={{ state, dispatch }}>{children}</AppContext.Provider>;\n};\n\nexport { AppProvider, AppContext };\n","import styled from \"@emotion/styled\";\n\nexport const Header = styled.h1`\n  text-transform: uppercase;\n  font-weight: 800;\n  font-size: 5.5rem;\n  margin: 2rem;\n  padding-bottom: 1rem;\n  position: relative;\n\n  &::before {\n    z-index: -1;\n    content: \"\";\n    display: block;\n    background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.2), transparent);\n    height: 0.1rem;\n    position: absolute;\n    width: 80%;\n    margin-left: 50%;\n    transform: translateX(-50%);\n    bottom: 0;\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { DropzoneOptions, useDropzone } from \"react-dropzone\";\n\nconst getColor = (props: any) => {\n  if (props.isDragAccept) {\n    return \"#00e676\";\n  }\n  if (props.isDragActive) {\n    return \"#2196f3\";\n  }\n  return \"#eeeeee\";\n};\n\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-width: 2px;\n  border-color: ${(props) => getColor(props)};\n  border-style: dashed;\n  background-color: rgba(0, 0, 0, 0.3);\n  color: white;\n  outline: none;\n  transition: border 0.24s ease-in-out;\n  p {\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n`;\n\nexport const DropPad: React.FC<Partial<DropzoneOptions>> = (props) => {\n  const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone(props);\n\n  return (\n    <Container {...getRootProps({ isDragActive, isDragAccept, isDragReject })}>\n      <input {...getInputProps()} />\n      <p>Drag SLP files here or click to select</p>\n    </Container>\n  );\n};\n","import { characters as characterUtil, stages as stageUtil } from \"@slippi/slippi-js\";\n\nexport type Side = \"left\" | \"right\";\n\nfunction sanitize(text: string, replacement = \"-\"): string {\n  return text.toLowerCase().replace(/[. &]+/gi, replacement);\n}\n\nfunction getCharacterFolderFromId(characterId: string | number, color?: string) {\n  const characterName = characterUtil.getCharacterName(+characterId);\n  return getCharacterFolderFromName(characterName, color);\n}\n\nfunction getCharacterFolderFromName(character: string, color = \"Default\") {\n  const charFolder = sanitize(character);\n  const colorFolder = sanitize(color);\n  return `${process.env.PUBLIC_URL}/images/characters/${charFolder}/${colorFolder}`;\n}\n\nexport function getCharacterPortrait(characterId: string | number, color?: string): string {\n  const folder = getCharacterFolderFromId(characterId, color);\n  return `${folder}/portrait.png`;\n}\n\nexport function getCharacterVSScreen(side: Side, characterId: string | number, color?: string): string {\n  const folder = getCharacterFolderFromId(characterId, color);\n  return `${folder}/vs-${side}.png`;\n}\n\nexport function getCharacterStockIcon(characterId: string | number, color?: string): string {\n  const folder = getCharacterFolderFromId(characterId, color);\n  return `${folder}/stock.png`;\n}\n\nexport function getStageIcon(stageId: string | number): string {\n  const stageName = stageUtil.getStageName(+stageId);\n  return `${process.env.PUBLIC_URL}/images/stages/${stageName}.png`;\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { characters as characterUtil } from \"@slippi/slippi-js\";\nimport { getCharacterStockIcon } from \"lib/resources\";\nimport React from \"react\";\nimport { ProcessedFile } from \"store/types\";\n\nconst BasicFileItem: React.FC<{ name: string; onRemove?: () => void }> = (props) => {\n  const { onRemove, name, children } = props;\n  return (\n    <div\n      css={css`\n        padding: 1.5rem 2rem;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        background-color: rgba(0, 0, 0, 0.3);\n      `}\n    >\n      <div>\n        <div\n          css={css`\n            font-size: 1.6rem;\n          `}\n        >\n          {name}\n        </div>\n        <div>{children}</div>\n      </div>\n      {onRemove && <button onClick={onRemove}>x</button>}\n    </div>\n  );\n};\n\nexport interface FileItemProps {\n  file: ProcessedFile;\n  onRemove: () => void;\n}\n\nexport const FileItem: React.FC<FileItemProps> = (props) => {\n  const { file, onRemove } = props;\n  const { filename, loading, error, details } = file;\n  if (loading) {\n    return <BasicFileItem name={filename}> loading...</BasicFileItem>;\n  }\n  if (error || !details) {\n    return (\n      <BasicFileItem onRemove={onRemove} name={filename}>\n        error :c\n      </BasicFileItem>\n    );\n  }\n\n  const players = details.settings.players;\n  const icons = players.map((player) => {\n    const charId = player.characterId as number;\n    const color = characterUtil.getCharacterColorName(charId, player.characterColor as number);\n    const src = getCharacterStockIcon(charId, color);\n    return <img key={`${player.port}-icon`} src={src} />;\n  });\n  return (\n    <BasicFileItem onRemove={onRemove} name={filename}>\n      {icons}\n    </BasicFileItem>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport { ProcessedFile } from \"store/types\";\n\nimport { FileItem } from \"./FileItem\";\n\nexport interface FileListProps {\n  files: ProcessedFile[];\n  onRemove: (filename: string) => void;\n}\n\nexport const FileList: React.FC<FileListProps> = (props) => {\n  const { files, onRemove } = props;\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-template-columns: 100%;\n        grid-row-gap: 1rem;\n        max-height: 500px;\n        overflow-y: auto;\n      `}\n    >\n      {files.map((f) => (\n        <FileItem key={f.filename} file={f} onRemove={() => onRemove(f.filename)} />\n      ))}\n    </div>\n  );\n};\n","export enum PortColor {\n  P1 = \"#f52e2e\",\n  P2 = \"#5463ff\",\n  P3 = \"#ffc717\",\n  P4 = \"#1f9e40\",\n}\n\nexport function getPortColor(portNumber: number): string {\n  switch (portNumber) {\n    case 1:\n      return PortColor.P1;\n    case 2:\n      return PortColor.P2;\n    case 3:\n      return PortColor.P3;\n    case 4:\n      return PortColor.P4;\n    default:\n      return PortColor.P1;\n  }\n}\n","import generateStats, { filterGames } from \"lib/stats\";\nimport { get } from \"lodash\";\n\nimport { getPortColor } from \"./portColor\";\nimport { GameDetails } from \"./readFile\";\n\nconst extractNameAndCode = (playerPort: number, details: GameDetails) => {\n  const settings = details.settings;\n  const metadata = details.metadata;\n  const index = playerPort - 1;\n  const player = settings.players.find((player) => player.playerIndex === index);\n  const playerTag = player ? player.nametag : null;\n  const netplayName: string | null = get(metadata, [\"players\", index, \"names\", \"netplay\"], null);\n  const netplayCode: string | null = get(metadata, [\"players\", index, \"names\", \"code\"], null);\n  const name = playerTag || netplayName || \"\";\n  return [name, netplayCode || \"\"] as const;\n};\n\nexport function processStats(gameDetails: GameDetails[]): URLSearchParams {\n  const filtered = filterGames(gameDetails);\n  if (!filtered || filtered.length === 0) {\n    throw new Error(\"No valid games\");\n  }\n\n  const { games, summary } = generateStats(filtered);\n  const params: any = {}; // \"mckm1\": , \"mckm2\", \"mcno1\", \"mcno2\", \"opk1\", \"opk2\", \"tdd1\", \"tdd2\", \"dpo1\", \"dpo2\", \"ipm1\", \"ipm2\", \"akp1\", \"akp2\", \"nw1\", \"nw2\"};\n\n  // Set character info\n  const lastGame = games[games.length - 1];\n  const leftPlayer = lastGame.players[0];\n  const rightPlayer = lastGame.players[1];\n  params.leftColor = getPortColor(leftPlayer.port);\n  params.rightColor = getPortColor(rightPlayer.port);\n\n  params.char1 = leftPlayer.characterId;\n  params.char2 = rightPlayer.characterId;\n  params.color1 = leftPlayer.characterColor;\n  params.color2 = rightPlayer.characterColor;\n\n  // Set name tags\n  const lastGameDetails = filtered[filtered.length - 1];\n  const [leftTag, leftCode] = extractNameAndCode(leftPlayer.port, lastGameDetails);\n  const [rightTag, rightCode] = extractNameAndCode(rightPlayer.port, lastGameDetails);\n  params.name1 = leftTag.toUpperCase();\n  params.name2 = rightTag.toUpperCase();\n  params.sub1 = leftCode;\n  params.sub2 = rightCode;\n\n  // Set game info\n  params.gt = games.length; // Set the total number of games\n\n  // Track game wins\n  let leftWins = 0;\n  let rightWins = 0;\n\n  (games as any[]).forEach((game, i) => {\n    console.log(\"processing game: \", game);\n    const gameKey = `g${i + 1}`;\n    const stageId: number = game.stage.id;\n    const gameDuration: string = game.duration;\n    const playerInfo = game.players.map((p: any) => [p.characterId, p.characterColor, p.gameResult].join(\",\"));\n    const gameValue = [stageId, gameDuration, ...playerInfo].join(\",\");\n    console.log(`${gameKey} : ${gameValue}`);\n    params[gameKey] = gameValue;\n\n    // Increment win counts\n    if (game.players[0].gameResult === \"winner\") {\n      leftWins += 1;\n    } else if (game.players[1].gameResult === \"winner\") {\n      rightWins += 1;\n    }\n  });\n\n  params.score = `${leftWins} - ${rightWins}`;\n\n  // Set the stat values\n  (summary as any[]).forEach((s) => {\n    switch (s.id) {\n      case \"openingsPerKill\": {\n        params.opk1 = s.results[0].simple.text;\n        params.opk2 = s.results[1].simple.text;\n        break;\n      }\n      case \"damagePerOpening\": {\n        params.dpo1 = s.results[0].simple.text;\n        params.dpo2 = s.results[1].simple.text;\n        break;\n      }\n      case \"neutralWins\": {\n        params.nw1 = s.results[0].simple.text;\n        params.nw2 = s.results[1].simple.text;\n        break;\n      }\n      case \"killMoves\": {\n        console.log(s);\n        const playerRes = s.results[0].result[0];\n        const opponentRes = s.results[1].result[0];\n        params.mckm1 = `${playerRes.shortName.toUpperCase()} - ${playerRes.count}`;\n        params.mckm2 = `${opponentRes.shortName.toUpperCase()} - ${opponentRes.count}`;\n        break;\n      }\n      case \"neutralOpenerMoves\": {\n        const playerRes = s.results[0].result[0];\n        const opponentRes = s.results[1].result[0];\n        params.mcno1 = `${playerRes.shortName.toUpperCase()} - ${playerRes.count}`;\n        params.mcno2 = `${opponentRes.shortName.toUpperCase()} - ${opponentRes.count}`;\n        break;\n      }\n      case \"inputsPerMinute\": {\n        params.ipm1 = s.results[0].simple.text;\n        params.ipm2 = s.results[1].simple.text;\n        break;\n      }\n      case \"avgKillPercent\": {\n        params.akp1 = s.results[0].simple.text;\n        params.akp2 = s.results[1].simple.text;\n        break;\n      }\n      case \"damageDone\": {\n        params.tdd1 = s.results[0].simple.text;\n        params.tdd2 = s.results[1].simple.text;\n        break;\n      }\n    }\n  });\n\n  console.log(\"returning these params: \", params);\n  return new URLSearchParams(params);\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { DropPad } from \"components/DropPad\";\nimport { FileList } from \"components/FileList\";\nimport { processStats } from \"lib/processStats\";\nimport { GameDetails, generateGameDetails, readFileAsSlippiGame } from \"lib/readFile\";\nimport React, { useCallback, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { AppContext, Types } from \"../store\";\n\nconst ProcessButton = styled.button`\n  background: #286163;\n  border: none;\n  color: inherit;\n  cursor: pointer;\n  font: inherit;\n  padding: 1rem 0rem;\n  width: 100%;\n  font-weight: 700;\n  font-size: 3rem;\n  &:disabled {\n    opacity: 0.65;\n    cursor: not-allowed;\n  }\n`;\n\nexport const FileListInput: React.FC = () => {\n  const history = useHistory();\n  const { state, dispatch } = useContext(AppContext);\n\n  const onClick = () => {\n    const gameDetails = state.files.filter((f) => f.details !== null).map((f) => f.details as GameDetails);\n    // const s = generateStats(gameDetails);\n    // setStats(s);\n    const params = processStats(gameDetails);\n    const search = \"?\" + params.toString();\n    history.push({\n      pathname: \"/render\",\n      search,\n    });\n  };\n\n  const onRemove = (filename: string) => {\n    dispatch({\n      type: Types.REMOVE_FILE,\n      payload: {\n        filename,\n      },\n    });\n  };\n\n  const onDrop = useCallback(\n    (acceptedFiles: File[]) => {\n      const startTime = new Date().getTime();\n      const promises = acceptedFiles.map(async (file) => {\n        dispatch({\n          type: Types.ADD_FILE,\n          payload: {\n            filename: file.name,\n          },\n        });\n        try {\n          const game = await readFileAsSlippiGame(file);\n          const details = generateGameDetails(file.name, game);\n          dispatch({\n            type: Types.ADD_GAME,\n            payload: {\n              filename: file.name,\n              game,\n              details,\n            },\n          });\n        } catch (err) {\n          dispatch({\n            type: Types.SET_ERROR,\n            payload: {\n              filename: file.name,\n              error: err,\n            },\n          });\n        }\n      });\n      Promise.all(promises).then(() => {\n        const time = new Date().getTime() - startTime;\n        console.log(`Finished processing in ${time}ms`);\n      });\n    },\n    [dispatch]\n  );\n\n  const finishedProcessing = !state.files.find((f) => f.loading);\n  const buttonText = state.files.length === 0 ? \"NO FILES ADDED\" : finishedProcessing ? \"COMPUTE STATS\" : \"PLEASE WAIT\";\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-template-columns: 100%;\n        grid-row-gap: 1rem;\n      `}\n    >\n      <DropPad accept=\".slp\" onDrop={onDrop} />\n      <FileList files={state.files} onRemove={onRemove} />\n      <ProcessButton disabled={state.files.length === 0 || !finishedProcessing} onClick={onClick}>\n        {buttonText}\n      </ProcessButton>\n    </div>\n  );\n};\n","import { characters as characterUtil, moves as moveUtil } from \"@slippi/slippi-js\";\n\n/*\n * Random functions are taken from: https://stackoverflow.com/questions/1527803/generating-random-whole-numbers-in-javascript-in-a-specific-range\n */\n\n/**\n * Returns a random number between min (inclusive) and max (exclusive)\n */\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\n/**\n * Returns a random integer between min (inclusive) and max (inclusive).\n * The value is no lower than min (or the next integer greater than min\n * if min isn't an integer) and no greater than max (or the next integer\n * lower than max if max isn't an integer).\n * Using Math.round() will give you a non-uniform distribution!\n */\nfunction getRandomInt(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function generateDemoQuery(): Record<string, any> {\n  const paramMap: Record<string, any> = {};\n\n  // Set names\n  paramMap.name1 = \"FOLLOW\";\n  paramMap.name2 = \"ON\";\n  paramMap.sub1 = \"@_vinceau\";\n  paramMap.sub2 = \"TWITTER\";\n\n  // Set colors\n  const [char1, color1] = generateRandomCharacter();\n  const [char2, color2] = generateRandomCharacter();\n  paramMap.char1 = char1;\n  paramMap.color1 = color1;\n  paramMap.char2 = char2;\n  paramMap.color2 = color2;\n\n  // Track game wins\n  let leftWins = 0;\n  let rightWins = 0;\n\n  // Random games\n  const totalGames = getRandomInt(3, 5);\n  paramMap.gt = totalGames;\n  for (let i = 1; i <= totalGames; i++) {\n    const gameKey = `g${i}`;\n    const leftWillWin = Math.random() < 0.5;\n    const leftPlayerInfo = [char1, color1, leftWillWin ? \"winner\" : \"loser\"].join(\",\");\n    const rightPlayerInfo = [char2, color2, leftWillWin ? \"loser\" : \"winner\"].join(\",\");\n    const gameValue = generateRandomGame([leftPlayerInfo, rightPlayerInfo]);\n    paramMap[gameKey] = gameValue;\n\n    if (leftWillWin) {\n      leftWins += 1;\n    } else {\n      rightWins += 1;\n    }\n  }\n\n  // Set score\n  paramMap.score = `${leftWins} - ${rightWins}`;\n\n  // Random moves\n  [\"mckm1\", \"mckm2\", \"mcno1\", \"mcno2\"].forEach((key) => {\n    paramMap[key] = generateRandomMove();\n  });\n\n  // Random openings per kill\n  [\"opk1\", \"opk2\"].forEach((key) => {\n    paramMap[key] = getRandomArbitrary(5, 15).toFixed(1);\n  });\n\n  // Total damage done\n  [\"tdd1\", \"tdd2\"].forEach((key) => {\n    paramMap[key] = getRandomArbitrary(1000, 2000).toFixed(1);\n  });\n\n  // Average kill percent\n  [\"akp1\", \"akp2\"].forEach((key) => {\n    paramMap[key] = getRandomArbitrary(50, 200).toFixed(1);\n  });\n\n  // Neutral wins\n  [\"nw1\", \"nw2\"].forEach((key) => {\n    paramMap[key] = getRandomInt(30, 80);\n  });\n\n  return paramMap;\n}\n\nfunction generateRandomMove(): string {\n  const move = getRandomInt(7, 21);\n  const name = moveUtil.getMoveShortName(move).toUpperCase();\n  return `${name} - ${move}`;\n}\n\nfunction generateRandomCharacter() {\n  const charId = getRandomInt(0, 25);\n  const charInfo = characterUtil.getCharacterInfo(charId);\n  const colorIndex = getRandomInt(0, charInfo.colors.length - 1);\n  const color = charInfo.colors[colorIndex];\n  return [charId, color] as const;\n}\n\nconst LEGAL_STAGE_IDS = [2, 3, 8, 28, 31, 32];\n\nfunction generateRandomStageId(): number {\n  const stageIndex = getRandomInt(0, LEGAL_STAGE_IDS.length - 1);\n  return LEGAL_STAGE_IDS[stageIndex];\n}\n\nfunction generateRandomDuration(): string {\n  const mins = getRandomInt(0, 7);\n  const secs = String(getRandomInt(0, 60)).padStart(2, \"0\");\n  return `${mins}:${secs}`;\n}\n\nfunction generateRandomGame(playerInfos: string[]): string {\n  const stageId = generateRandomStageId();\n  const gameDuration = generateRandomDuration();\n  const gameValue = [stageId, gameDuration, ...playerInfos].join(\",\");\n  return gameValue;\n}\n","/** @jsx jsx */\nimport { css, Global, jsx } from \"@emotion/core\";\n\nexport interface Theme {\n  primaryColor: string;\n  secondaryColor: string;\n}\n\nexport const defaultTheme: Theme = {\n  primaryColor: \"#286163\",\n  secondaryColor: \"#121020\",\n};\n\nexport const GlobalTheme: React.FC<Theme> = ({ primaryColor, secondaryColor }) => {\n  return (\n    <Global\n      styles={css`\n        body.themed {\n          background: radial-gradient(circle at center -30%, ${primaryColor}, ${secondaryColor});\n        }\n      `}\n    />\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { Header } from \"components/Header\";\nimport { FileListInput } from \"containers/FileListInput\";\nimport { generateDemoQuery } from \"lib/demo\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { defaultTheme, GlobalTheme } from \"styles/theme\";\n\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nexport const MainView: React.FC = () => {\n  const history = useHistory();\n\n  const onClick = () => {\n    const paramMap = generateDemoQuery();\n    const search = \"?\" + new URLSearchParams(paramMap).toString();\n    history.push({\n      pathname: \"/render\",\n      search,\n    });\n  };\n\n  return (\n    <div\n      css={css`\n        margin: 0 12rem;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      `}\n    >\n      <GlobalTheme {...defaultTheme} />\n      <Header>Slippi Stats</Header>\n      <button onClick={onClick}>randomize</button>\n      <FileListInput />\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport function useParam(key: string, defaultValue = \"\") {\n  const [value, setValue] = useState<string>(defaultValue);\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const currentValue = params.get(key);\n    if (currentValue !== value) {\n      setValue(currentValue || defaultValue);\n    }\n  }, [key, defaultValue, location, value]);\n\n  const setParam = (val: string) => {\n    const params = new URLSearchParams(location.search);\n    params.set(key, val);\n    const search = \"?\" + params.toString();\n    history.push({\n      pathname: location.pathname,\n      search,\n    });\n  };\n\n  return [value, setParam] as const;\n}\n","// From: https://usehooks.com/useKeyPress/\n\nimport { useEffect, useState } from \"react\";\n\nexport function useKeyPress(targetKey: any) {\n  // State for keeping track of whether key is pressed\n\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  // Add event listeners\n\n  useEffect(() => {\n    // If pressed key is our target key then set to true\n\n    function downHandler({ key }: any) {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    }\n\n    // If released key is our target key then set to false\n\n    const upHandler = ({ key }: any) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n\n    window.addEventListener(\"keydown\", downHandler);\n\n    window.addEventListener(\"keyup\", upHandler);\n\n    // Remove event listeners on cleanup\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [targetKey]); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { useParam } from \"lib/hooks\";\nimport { getCharacterVSScreen, Side } from \"lib/resources\";\nimport React from \"react\";\n\nexport interface CharDisplayProps {\n  colorParam: string;\n  charParam: string;\n  align: Side;\n  theme: string;\n}\n\n// Some characters have their faces to the right so it get cut off.\n// e.g. Sheik and Bowser\n// So make sure we return the desired alignment\nconst FLIP_RIGHT_CHARS = [\"19\", \"5\"];\n\nfunction getAlignment(facing: Side, char: string, defaultAlignment: Side): Side {\n  if (facing === \"left\") {\n    return defaultAlignment;\n  }\n\n  // We so far only care about the right hand side of the VS-screen\n  if (FLIP_RIGHT_CHARS.includes(char)) {\n    return \"right\";\n  }\n\n  return defaultAlignment;\n}\n\nexport const CharDisplay: React.FC<CharDisplayProps> = (props) => {\n  const { colorParam, charParam, align, theme } = props;\n  const [color] = useParam(colorParam);\n  const [char] = useParam(charParam);\n  const facing: Side = align === \"left\" ? \"right\" : \"left\";\n  const imgSrc = getCharacterVSScreen(facing, char, color);\n  const alignment = getAlignment(facing, char, align);\n  return (\n    <div\n      css={css`\n        height: 80%;\n        width: 100%;\n        position: relative;\n        background: radial-gradient(circle at center -30%, ${theme}, transparent);\n        &::after {\n          content: ' ';\n          position: absolute;\n          height: 100%;\n          width: 100%;\n          background-image: url(\"${imgSrc}\");\n          background-repeat: no-repeat;\n          background-size: cover;\n          background-position: top ${alignment};\n        }\n      `}\n    ></div>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const Block = styled.div<{\n  color: string;\n  backgroundColor: string;\n  optional?: boolean;\n  show?: boolean;\n}>`\n  color: ${(p) => p.color};\n  background-color: ${(p) => p.backgroundColor};\n  text-align: center;\n  padding: 0.3em 0;\n  font-size: 1.2em;\n  box-shadow: 0.2em 0.2em 0.2em black;\n  ${(p) =>\n    p.optional &&\n    `\n  opacity: ${p.show ? 1 : 0};\n  transition: opacity 0.1s ease-in-out;\n  &:hover {\n    opacity: 1;\n  }\n  `};\n`;\n","// From: https://dev.to/joelmturner/build-an-inline-edit-text-input-with-react-hooks-4nah\n\nimport \"./index.scss\";\n\nimport { useKeyPress, useOnClickOutside } from \"lib/hooks\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nexport interface InlineEditProps {\n  text: string;\n  textAlign?: \"left\" | \"right\";\n  onSetText: (text: string) => void;\n}\n\nexport const InlineEdit: React.FC<InlineEditProps> = (props) => {\n  const { text, onSetText, textAlign } = props;\n  const [isInputActive, setIsInputActive] = useState(false);\n  const [inputValue, setInputValue] = useState(text);\n\n  const wrapperRef = useRef(null);\n  const textRef = useRef(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const tab = useKeyPress(\"Tab\");\n  const enter = useKeyPress(\"Enter\");\n  const esc = useKeyPress(\"Escape\");\n\n  useEffect(() => {\n    setInputValue(text);\n  }, [text]);\n\n  // check to see if the user clicked outside of this component\n  useOnClickOutside(wrapperRef, () => {\n    if (isInputActive) {\n      onSetText(inputValue);\n      setIsInputActive(false);\n    }\n  });\n\n  // focus the cursor in the input field on edit start\n  useEffect(() => {\n    if (isInputActive && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isInputActive]);\n\n  useEffect(() => {\n    if (isInputActive) {\n      // if Enter or tab is pressed, save the text and case the editor\n      if (enter || tab) {\n        onSetText(inputValue);\n        setIsInputActive(false);\n      }\n      // if Escape is pressed, revert the text and close the editor\n      if (esc) {\n        setInputValue(props.text);\n        setIsInputActive(false);\n      }\n    }\n  }, [tab, enter, esc, isInputActive, onSetText, inputValue, props.text]); // watch for key presses\n\n  return (\n    <span className=\"inline-text\" ref={wrapperRef}>\n      <span\n        ref={textRef}\n        onClick={() => setIsInputActive(true)}\n        className={`inline-text_copy inline-text_copy--${!isInputActive ? \"active\" : \"hidden\"}`}\n      >\n        {props.text}\n      </span>\n      <input\n        ref={inputRef}\n        style={{ textAlign, maxWidth: \"100%\" }}\n        value={inputValue}\n        onChange={(e) => {\n          setInputValue(e.target.value);\n        }}\n        className={`inline-text_input inline-text_input--${isInputActive ? \"active\" : \"hidden\"}`}\n      />\n    </span>\n  );\n};\n\nInlineEdit.defaultProps = {\n  text: \"\",\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onSetText: () => {},\n};\n","// From: https://usehooks.com/useOnClickOutside/\n\nimport { useEffect } from \"react\";\n\nexport function useOnClickOutside(ref: any, handler: any) {\n  useEffect(\n    () => {\n      const listener = (event: any) => {\n        // Do nothing if clicking ref's element or descendent elements\n\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener(\"mousedown\", listener);\n\n      document.addEventListener(\"touchstart\", listener);\n\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    },\n\n    // Add ref and handler to effect dependencies\n\n    // It's worth noting that because passed in handler is a new ...\n\n    // ... function on every render that will cause this effect ...\n\n    // ... callback/cleanup to run every render. It's not a big deal ...\n\n    // ... but to optimize you can wrap handler in useCallback before ...\n\n    // ... passing it into this hook.\n\n    [ref, handler]\n  );\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\n\nimport { Block } from \"./Block\";\nimport { InlineEdit } from \"./InlineEdit\";\n\nexport interface TextBlockProps {\n  color: string;\n  backgroundColor: string;\n  value: string;\n  optional?: boolean;\n  onEdit?: (val: string) => void;\n}\n\nexport const TextBlock: React.FC<TextBlockProps> = ({ optional, onEdit, backgroundColor, value, color }) => {\n  const child = onEdit ? <InlineEdit text={value} onSetText={onEdit} /> : value;\n  return (\n    <Block optional={optional} show={Boolean(value)} color={color} backgroundColor={backgroundColor}>\n      {child}\n    </Block>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nimport { TextBlock } from \"../components/TextBlock\";\n\nconst Name = styled.div`\n  font-size: 150%;\n  font-weight: 800;\n`;\n\nconst Subtitle = styled.div<{\n  show?: boolean;\n}>`\n  margin-top: -0.3rem;\n  margin-left: auto;\n  margin-right: auto;\n  width: 80%;\n`;\n\nexport interface NameBlockProps {\n  nameParam: string;\n  defaultName: string;\n  subtitleParam: string;\n  primaryColor: string;\n  secondaryColor: string;\n}\n\nexport const NameBlock: React.FC<NameBlockProps> = ({\n  nameParam,\n  defaultName,\n  subtitleParam,\n  primaryColor,\n  secondaryColor,\n}) => {\n  const [name, setName] = useParam(nameParam, defaultName);\n  const [sub, setSub] = useParam(subtitleParam);\n  return (\n    <div>\n      <Name>\n        <TextBlock value={name} onEdit={setName} color=\"white\" backgroundColor={primaryColor} />\n      </Name>\n      <Subtitle>\n        <TextBlock value={sub} optional={true} onEdit={setSub} color={secondaryColor} backgroundColor=\"white\" />\n      </Subtitle>\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { Block } from \"components/Block\";\nimport { InlineEdit } from \"components/InlineEdit\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nexport interface ScoreBlockProps {\n  primaryColor: string;\n}\n\nconst StyledBlock = styled(Block)`\n  padding: 0.5rem 4rem;\n  font-size: 5rem;\n  font-weight: 800;\n`;\n\nexport const ScoreBlock: React.FC<ScoreBlockProps> = (props) => {\n  const [score, setScore] = useParam(\"score\", \"0 - 0\");\n  return (\n    <StyledBlock color=\"white\" backgroundColor={props.primaryColor}>\n      <InlineEdit text={score} onSetText={setScore} />\n    </StyledBlock>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { getCharacterPortrait } from \"lib/resources\";\nimport React from \"react\";\n\nconst Outer = styled.div`\n  position: relative;\n  display: block;\n  border: solid 0.1rem rgba(255, 255, 255, 0.3);\n  height: 5rem;\n  width: 100%;\n  max-width: 10rem;\n`;\n\nconst BaseHeadImage = styled.div`\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  &::after {\n    content: \" \";\n    height: 100%;\n    background-repeat: no-repeat;\n    background-size: cover;\n    position: absolute;\n  }\n`;\n\nconst HeadImage = styled(BaseHeadImage)<{\n  backgroundColor?: string;\n  imageSrc: string;\n  side: \"left\" | \"right\";\n  waypoint: number;\n  dim?: boolean;\n}>`\n  ${(p) => {\n    const invWaypoint = 100 - p.waypoint;\n    return `\n      ${p.side === \"right\" ? `clip-path: polygon(${p.waypoint}% 0, 100% 0, 100% 100%, ${invWaypoint}% 100%);` : \"\"}\n      ${p.dim ? \"filter: brightness(25%);\" : \"\"}\n      ${p.backgroundColor ? `background: radial-gradient(circle at center -30%, ${p.backgroundColor}, black);` : \"\"}\n      &::after {\n        width: ${p.waypoint}%;\n        background-image: url(\"${p.imageSrc}\");\n        background-position: top ${p.side};\n        ${p.side === \"right\" ? `left: ${invWaypoint}%;` : \"transform: scaleX(-1);\"}\n      }\n    `;\n  }}\n`;\n\nexport interface HeadToHeadProps {\n  char1: number | string;\n  color1: string;\n  result1: string;\n  char2: number | string;\n  color2: string;\n  result2: string;\n  leftColor: string;\n  rightColor: string;\n}\n\nexport const HeadToHead: React.FC<HeadToHeadProps> = ({\n  char1,\n  color1,\n  result1,\n  char2,\n  color2,\n  result2,\n  leftColor,\n  rightColor,\n}) => {\n  const waypoint = 55;\n  const p1 = getCharacterPortrait(char1, color1);\n  const p2 = getCharacterPortrait(char2, color2);\n\n  return (\n    <Outer>\n      <HeadImage backgroundColor={leftColor} imageSrc={p1} waypoint={waypoint} side=\"left\" dim={result1 === \"loser\"} />\n      <HeadImage\n        backgroundColor={rightColor}\n        imageSrc={p2}\n        waypoint={waypoint}\n        side=\"right\"\n        dim={result2 === \"loser\"}\n      />\n    </Outer>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { getStageIcon } from \"lib/resources\";\nimport React from \"react\";\n\ninterface StageTimerProps {\n  stageId: string | number;\n  duration: string;\n}\n\nconst Text = styled.span`\n  font-size: 2.5rem;\n  font-weight: bold;\n  opacity: 0.7;\n  text-shadow: 2px 2px 2px black;\n`;\n\nconst Outer = styled.div<{\n  src: string;\n}>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  height: 9rem;\n  width: 100%;\n  border: solid 1px rgba(255, 255, 255, 0.3);\n  z-index: 0;\n\n  &::after {\n    content: ' ';\n    height: 100%;\n    width: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-image: url(\"${(p) => p.src}\");\n    background-repeat: no-repeat;\n    background-size: 105% auto;\n    background-position: center;\n    filter: blur(2px) brightness(30%);\n    z-index: -1;\n  }\n`;\n\nexport const StageTimer: React.FC<StageTimerProps> = ({ stageId, duration }) => {\n  const stageIcon = getStageIcon(stageId);\n  return (\n    <Outer src={stageIcon}>\n      <Text>{duration}</Text>\n    </Outer>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React from \"react\";\n\nimport { HeadToHead } from \"./HeadToHead\";\nimport { StageTimer } from \"./StageTimer\";\n\nexport interface GameResultProps {\n  stageId: string;\n  duration: string;\n  char1: number | string;\n  color1: string;\n  result1: string;\n  char2: number | string;\n  color2: string;\n  result2: string;\n  leftColor: string;\n  rightColor: string;\n}\n\nexport const GameResult: React.FC<GameResultProps> = (props) => {\n  const { stageId, duration, ...rest } = props;\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-template-columns: 100%;\n        justify-items: center;\n        width: 100%;\n        max-width: 18rem;\n        grid-row-gap: 2rem;\n      `}\n    >\n      <HeadToHead {...rest} />\n      <StageTimer stageId={stageId} duration={duration} />\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { GameResult } from \"components/GameResult\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nconst Game: React.FC<{\n  index: number;\n  leftColor: string;\n  rightColor: string;\n}> = ({ index, leftColor, rightColor }) => {\n  const [gameInfo] = useParam(`g${index}`);\n  // The game info starts off undefined\n  if (!gameInfo) {\n    return null;\n  }\n\n  const [stageId, duration, char1, color1, res1, char2, color2, res2] = gameInfo.split(\",\");\n  return (\n    <GameResult\n      stageId={stageId}\n      duration={duration}\n      char1={char1}\n      color1={color1}\n      result1={res1}\n      char2={char2}\n      color2={color2}\n      result2={res2}\n      leftColor={leftColor}\n      rightColor={rightColor}\n    />\n  );\n};\n\nexport const GameDisplay: React.FC<{\n  leftColor: string;\n  rightColor: string;\n}> = (props) => {\n  const [gt] = useParam(`gt`);\n  const total = parseInt(gt, 10) || 0;\n\n  const games = [];\n  for (let i = 1; i <= total; i++) {\n    games.push(<Game key={`g${i}`} index={i} leftColor={props.leftColor} rightColor={props.rightColor} />);\n  }\n\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-column-gap: 2rem;\n        grid-template-columns: repeat(${total}, 1fr);\n        justify-items: center;\n      `}\n    >\n      {games}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\n\nimport { InlineEdit } from \"./InlineEdit\";\n\nexport interface StatProps {\n  type?: \"text\" | \"number\";\n  label: string;\n  labelColor?: string;\n  labelBackground?: string;\n  leftText: string;\n  rightText: string;\n  onLeftTextBlur?: (text: string) => void;\n  onRightTextBlur?: (text: string) => void;\n}\n\nconst StatLabel = styled.div<{\n  labelBackground: string;\n  labelColor: string;\n}>`\n  text-align: center;\n  background-color: ${(p) => p.labelBackground};\n  color: ${(p) => p.labelColor};\n  padding: 0.3em 2.5em;\n  font-weight: 700;\n  font-size: 1.2em;\n  box-shadow: 0.2em 0.2em 0.2em black;\n  justify-self: center;\n  z-index: 1;\n`;\n\nconst StatContent = styled.div<{\n  type: \"text\" | \"number\";\n}>`\n  width: 100%;\n  font-weight: 800;\n  font-size: ${(p) => (p.type === \"text\" ? \"1.4em\" : \"2.3em\")};\n`;\n\nconst OuterStat = styled.div`\n  display: grid;\n  grid-template-columns: 20% 60% 20%;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  &::before {\n    z-index: -1;\n    content: \"\";\n    display: block;\n    background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.4), transparent);\n    height: 0.1rem;\n    position: absolute;\n    width: 80%;\n    margin-left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nexport const Stat: React.FC<StatProps> = (props) => {\n  const { type, label, leftText, rightText, labelBackground, labelColor } = props;\n  return (\n    <OuterStat>\n      <StatContent\n        type={type!}\n        css={css`\n          justify-self: start;\n        `}\n      >\n        <InlineEdit text={leftText} onSetText={props.onLeftTextBlur!} />\n      </StatContent>\n      <StatLabel labelBackground={labelBackground!} labelColor={labelColor!}>\n        {label}\n      </StatLabel>\n      <StatContent\n        type={type!}\n        css={css`\n          justify-self: end;\n          text-align: right;\n        `}\n      >\n        <InlineEdit text={rightText} textAlign=\"right\" onSetText={props.onRightTextBlur!} />\n      </StatContent>\n    </OuterStat>\n  );\n};\n\nStat.defaultProps = {\n  type: \"number\",\n  labelColor: \"black\",\n  labelBackground: \"white\",\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onLeftTextBlur: () => {},\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onRightTextBlur: () => {},\n};\n","import { Stat } from \"components/Stat\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\ninterface ThemeProps {\n  primaryColor: string;\n  secondaryColor: string;\n}\n\ninterface ConnectedStatProps extends ThemeProps {\n  param1: string;\n  param2: string;\n  label: string;\n  type?: \"text\" | \"number\";\n}\n\nconst ConnectedStat: React.FC<ConnectedStatProps> = (props) => {\n  const { param1, param2, label, type, primaryColor, secondaryColor } = props;\n  const defaultValue = type === \"number\" ? \"0\" : \"-\";\n  const [field1, setField1] = useParam(param1, defaultValue);\n  const [field2, setField2] = useParam(param2, defaultValue);\n  const labelColor = type === \"number\" ? secondaryColor : \"white\";\n  const labelBackground = type === \"number\" ? \"white\" : primaryColor;\n  return (\n    <Stat\n      type={type}\n      leftText={field1}\n      onLeftTextBlur={(text) => setField1(text)}\n      label={label}\n      rightText={field2}\n      onRightTextBlur={(text) => setField2(text)}\n      labelColor={labelColor}\n      labelBackground={labelBackground}\n    />\n  );\n};\n\nConnectedStat.defaultProps = {\n  type: \"number\",\n};\n\nexport const MostCommonKillMove: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat type=\"text\" param1=\"mckm1\" param2=\"mckm2\" label=\"MOST COMMON KILL MOVE\" {...props} />;\n};\n\nexport const MostCommonNeutralOpener: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat type=\"text\" param1=\"mcno1\" param2=\"mcno2\" label=\"MOST COMMON NEUTRAL OPENER\" {...props} />;\n};\n\nexport const AverageKillPercent: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat param1=\"akp1\" param2=\"akp2\" label=\"AVERAGE KILL PERCENT\" {...props} />;\n};\n\nexport const NeutralWins: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat param1=\"nw1\" param2=\"nw2\" label=\"NEUTRAL WINS\" {...props} />;\n};\n\nexport const DamagePerOpening: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat param1=\"dpo1\" param2=\"dpo2\" label=\"DAMAGE / OPENING\" {...props} />;\n};\n\nexport const InputsPerMinute: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat param1=\"ipm1\" param2=\"ipm2\" label=\"INPUTS / MINUTE\" {...props} />;\n};\n\nexport const OpeningsPerKill: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat param1=\"opk1\" param2=\"opk2\" label=\"OPENINGS / KILL\" {...props} />;\n};\n\nexport const TotalDamageDone: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat param1=\"tdd1\" param2=\"tdd2\" label=\"TOTAL DAMAGE DONE\" {...props} />;\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\n\nimport { GameDisplay } from \"../GameDisplay\";\nimport {\n  AverageKillPercent,\n  DamagePerOpening,\n  InputsPerMinute,\n  MostCommonKillMove,\n  MostCommonNeutralOpener,\n  NeutralWins,\n  OpeningsPerKill,\n  TotalDamageDone,\n} from \"./Statistics\";\n\nconst Divider = styled.div`\n  content: \" \";\n  display: block;\n  height: 0.1rem;\n  width: 100%;\n  margin-top: 0.7rem;\n  background-color: rgba(255, 255, 255, 0.05);\n`;\n\nexport const StatDisplay: React.FC<{\n  primaryColor: string;\n  secondaryColor: string;\n  leftColor: string;\n  rightColor: string;\n}> = (props) => {\n  const { leftColor, rightColor, ...theme } = props;\n  return (\n    <div\n      css={css`\n        background: linear-gradient(to right, ${props.secondaryColor}, transparent, ${props.secondaryColor});\n        width: 100%;\n      `}\n    >\n      <div\n        css={css`\n          display: grid;\n          grid-template-columns: 100%;\n          grid-row-gap: 2rem;\n          margin: 4rem;\n        `}\n      >\n        <MostCommonKillMove {...theme} />\n        <MostCommonNeutralOpener {...theme} />\n        <Divider />\n        <OpeningsPerKill {...theme} />\n        <TotalDamageDone {...theme} />\n        <AverageKillPercent {...theme} />\n        <NeutralWins {...theme} />\n        <Divider />\n        <GameDisplay leftColor={leftColor} rightColor={rightColor} />\n      </div>\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { useParam } from \"lib/hooks\";\nimport { PortColor } from \"lib/portColor\";\nimport React from \"react\";\nimport { Theme } from \"styles/theme\";\n\nimport { CharDisplay } from \"./CharDisplay\";\nimport { NameBlock } from \"./NameBlock\";\nimport { ScoreBlock } from \"./ScoreBlock\";\nimport { StatDisplay } from \"./StatDisplay\";\n\nconst Outer = styled.div`\n  position: relative;\n  width: 100%;\n  display: grid;\n  grid-template-columns: 20% 60% 20%;\n`;\n\nexport const RenderDisplay: React.FC<Theme> = (theme) => {\n  const [leftColor] = useParam(\"leftColor\", PortColor.P1);\n  const [rightColor] = useParam(\"rightColor\", PortColor.P2);\n  return (\n    <Outer>\n      <div\n        css={css`\n          justify-self: end;\n          width: 100%;\n        `}\n      >\n        <CharDisplay theme={leftColor} charParam=\"char1\" colorParam=\"color1\" align=\"right\" />\n      </div>\n      <StatDisplay leftColor={leftColor} rightColor={rightColor} {...theme} />\n      <div\n        css={css`\n          width: 100%;\n        `}\n      >\n        <CharDisplay theme={rightColor} charParam=\"char2\" colorParam=\"color2\" align=\"left\" />\n      </div>\n      <div\n        css={css`\n          position: absolute;\n          bottom: 15%;\n          display: inline-flex;\n          width: 98%;\n          margin: 0 1%;\n        `}\n      >\n        <div\n          css={css`\n            width: 100%;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n          `}\n        >\n          <div\n            css={css`\n              width: 20%;\n            `}\n          >\n            <NameBlock nameParam=\"name1\" subtitleParam=\"sub1\" defaultName=\"Player\" {...theme} />\n          </div>\n          <div\n            css={css`\n              width: 20%;\n            `}\n          >\n            <NameBlock nameParam=\"name2\" subtitleParam=\"sub2\" defaultName=\"Player\" {...theme} />\n          </div>\n        </div>\n      </div>\n      <div\n        css={css`\n          position: absolute;\n          bottom: -6rem;\n          width: 100%;\n          display: flex;\n          justify-content: center;\n        `}\n      >\n        <ScoreBlock primaryColor={theme.primaryColor} />\n      </div>\n    </Outer>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { Header } from \"components/Header\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { defaultTheme, GlobalTheme } from \"styles/theme\";\n\nimport { RenderDisplay } from \"../containers/RenderDisplay\";\nimport poweredByImage from \"../styles/images/powered-by.png\";\n\nexport const RenderView: React.FC = () => {\n  const [primaryColor] = useParam(\"primaryColor\", defaultTheme.primaryColor);\n  const [secondaryColor] = useParam(\"secondaryColor\", defaultTheme.secondaryColor);\n  return (\n    <div\n      css={css`\n        margin: 0 12rem;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      `}\n    >\n      <GlobalTheme primaryColor={primaryColor} secondaryColor={secondaryColor} />\n      <Link to=\"/\" style={{ textDecoration: \"inherit\", color: \"inherit\" }} title=\"Back to homepage\">\n        <Header>Post Match Stats</Header>\n      </Link>\n      <div\n        css={css`\n          margin-bottom: 2rem;\n        `}\n      >\n        <a href=\"https://slippi.gg\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img\n            alt=\"Powered by Slippi\"\n            title=\"Open Slippi.gg homepage\"\n            src={poweredByImage}\n            css={css`\n              max-height: 5rem;\n            `}\n          />\n        </a>\n      </div>\n      <RenderDisplay primaryColor={primaryColor} secondaryColor={secondaryColor} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { hot } from \"react-hot-loader/root\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport { AppProvider } from \"./store\";\nimport { MainView } from \"./views/MainView\";\nimport { RenderView } from \"./views/RenderView\";\n\nconst App: React.FC = () => {\n  return (\n    <AppProvider>\n      <Router basename=\"/\">\n        <Route exact path=\"/\" component={MainView} />\n        <Route path=\"/render\" component={RenderView} />\n      </Router>\n    </AppProvider>\n  );\n};\n\nexport default hot(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"./index.scss\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* eslint-disable */\n\n/*\n * Taken from: https://github.com/project-slippi/slippi-set-stats/blob/master/main.js\n */\n\nconst { stages: stageUtil, moves: moveUtil, characters: characterUtil } = require(\"@slippi/slippi-js\");\nconst moment = require(\"moment\");\nconst _ = require(\"lodash\");\n\nconst stats = {\n  OPENINGS_PER_KILL: \"openingsPerKill\",\n  DAMAGE_PER_OPENING: \"damagePerOpening\",\n  NEUTRAL_WINS: \"neutralWins\",\n  KILL_MOVES: \"killMoves\",\n  NEUTRAL_OPENER_MOVES: \"neutralOpenerMoves\",\n  EARLY_KILLS: \"earlyKills\",\n  LATE_DEATHS: \"lateDeaths\",\n  SELF_DESTRUCTS: \"selfDestructs\",\n  INPUTS_PER_MINUTE: \"inputsPerMinute\",\n  AVG_KILL_PERCENT: \"avgKillPercent\",\n  HIGH_DAMAGE_PUNISHES: \"highDamagePunishes\",\n  DAMAGE_DONE: \"damageDone\",\n};\n\nconst statDefininitions = {\n  [stats.OPENINGS_PER_KILL]: {\n    id: stats.OPENINGS_PER_KILL,\n    name: \"Openings / Kill\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"openingsPerKill\", 1);\n    },\n  },\n  [stats.DAMAGE_PER_OPENING]: {\n    id: stats.DAMAGE_PER_OPENING,\n    name: \"Damage / Opening\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"damagePerOpening\", 1);\n    },\n  },\n  [stats.NEUTRAL_WINS]: {\n    id: stats.NEUTRAL_WINS,\n    name: \"Neutral Wins\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 0,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"neutralWinRatio\", 0, \"count\");\n    },\n  },\n  [stats.KILL_MOVES]: {\n    id: stats.KILL_MOVES,\n    name: \"Most Common Kill Move\",\n    type: \"text\",\n    calculate: (games, playerIndex) => {\n      const killMoves = _.flatMap(games, (game) => {\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        const conversionsForPlayer = _.filter(conversions, (conversion) => {\n          const isForPlayer = conversion.playerIndex === playerIndex;\n          const didKill = conversion.didKill;\n          return isForPlayer && didKill;\n        });\n\n        return _.map(conversionsForPlayer, (conversion) => {\n          return _.last(conversion.moves);\n        });\n      });\n\n      const killMovesByMove = _.groupBy(killMoves, \"moveId\");\n      const killMoveCounts = _.map(killMovesByMove, (moves) => {\n        const move = _.first(moves);\n        return {\n          count: moves.length,\n          id: move.moveId,\n          name: moveUtil.getMoveName(move.moveId),\n          shortName: moveUtil.getMoveShortName(move.moveId),\n        };\n      });\n\n      const orderedKillMoveCounts = _.orderBy(killMoveCounts, [\"count\"], [\"desc\"]);\n      const topKillMove = _.first(orderedKillMoveCounts);\n      let simpleText = \"N/A\";\n      if (topKillMove) {\n        simpleText = `${topKillMove.shortName} (${topKillMove.count})`;\n      }\n\n      return {\n        result: orderedKillMoveCounts,\n        simple: {\n          text: simpleText,\n        },\n      };\n    },\n  },\n  [stats.NEUTRAL_OPENER_MOVES]: {\n    id: stats.NEUTRAL_OPENER_MOVES,\n    name: \"Most Common Neutral Opener\",\n    type: \"text\",\n    calculate: (games, playerIndex) => {\n      const neutralMoves = _.flatMap(games, (game) => {\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        const conversionsForPlayer = _.filter(conversions, (conversion) => {\n          const isForPlayer = conversion.playerIndex === playerIndex;\n          const isNeutralWin = conversion.openingType === \"neutral-win\";\n          return isForPlayer && isNeutralWin;\n        });\n\n        return _.map(conversionsForPlayer, (conversion) => {\n          return _.first(conversion.moves);\n        });\n      });\n\n      // TODO: This following code is repeated from kill move code, put in function\n\n      const neutralMovesByMove = _.groupBy(neutralMoves, \"moveId\");\n      const neutralMoveCounts = _.map(neutralMovesByMove, (moves) => {\n        const move = _.first(moves);\n        return {\n          count: moves.length,\n          id: move.moveId,\n          name: moveUtil.getMoveName(move.moveId),\n          shortName: moveUtil.getMoveShortName(move.moveId),\n        };\n      });\n\n      const orderedNeutralMoveCounts = _.orderBy(neutralMoveCounts, [\"count\"], [\"desc\"]);\n      const topNeutralMove = _.first(orderedNeutralMoveCounts);\n      let simpleText = \"N/A\";\n      if (topNeutralMove) {\n        simpleText = `${topNeutralMove.shortName} (${topNeutralMove.count})`;\n      }\n\n      return {\n        result: orderedNeutralMoveCounts,\n        simple: {\n          text: simpleText,\n        },\n      };\n    },\n  },\n  [stats.EARLY_KILLS]: {\n    id: stats.EARLY_KILLS,\n    name: \"Earliest Kill\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const oppStocks = _.flatMap(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        return _.filter(stocks, (stock) => {\n          const isOpp = stock.playerIndex !== playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isOpp && hasEndPercent;\n        });\n      });\n\n      const orderedOppStocks = _.orderBy(oppStocks, [\"endPercent\"], [\"asc\"]);\n      const earliestKillStock = _.first(orderedOppStocks);\n      const simple = {\n        text: \"N/A\",\n        number: null,\n      };\n\n      if (earliestKillStock) {\n        simple.number = earliestKillStock.endPercent;\n        simple.text = simple.number.toFixed(1);\n      }\n\n      return {\n        result: _.take(orderedOppStocks, 5),\n        simple: simple,\n      };\n    },\n  },\n  [stats.LATE_DEATHS]: {\n    id: stats.LATE_DEATHS,\n    name: \"Latest Death\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const playerStocks = _.flatMap(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        return _.filter(stocks, (stock) => {\n          const isPlayer = stock.playerIndex === playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isPlayer && hasEndPercent;\n        });\n      });\n\n      const orderedPlayerStocks = _.orderBy(playerStocks, [\"endPercent\"], [\"desc\"]);\n      const latestDeathStock = _.first(orderedPlayerStocks);\n      const simple = {\n        text: \"N/A\",\n        number: null,\n      };\n\n      if (latestDeathStock) {\n        simple.number = latestDeathStock.endPercent;\n        simple.text = simple.number.toFixed(1);\n      }\n\n      return {\n        result: _.take(orderedPlayerStocks, 5),\n        simple: simple,\n      };\n    },\n  },\n  [stats.SELF_DESTRUCTS]: {\n    id: stats.SELF_DESTRUCTS, // Only show this one if greater than 2 for one player\n    name: \"Total Self-Destructs\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 0,\n    calculate: (games, playerIndex) => {\n      const sdCounts = _.map(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        const playerEndedStocks = _.filter(stocks, (stock) => {\n          const isPlayer = stock.playerIndex === playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isPlayer && hasEndPercent;\n        });\n\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        const oppKillConversions = _.filter(conversions, (conversion) => {\n          const isOpp = conversion.playerIndex !== playerIndex;\n          const didKill = conversion.didKill;\n          return isOpp && didKill;\n        });\n\n        return playerEndedStocks.length - oppKillConversions.length;\n      });\n\n      const sdSum = _.sum(sdCounts);\n\n      return {\n        result: sdSum,\n        simple: {\n          number: sdSum,\n          text: `${sdSum}`,\n        },\n      };\n    },\n  },\n  [stats.INPUTS_PER_MINUTE]: {\n    id: stats.INPUTS_PER_MINUTE,\n    name: \"Inputs / Minute\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"inputsPerMinute\", 1);\n    },\n  },\n  [stats.AVG_KILL_PERCENT]: {\n    id: stats.AVG_KILL_PERCENT,\n    name: \"Average Kill Percent\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const oppStocks = _.flatMap(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        return _.filter(stocks, (stock) => {\n          const isOpp = stock.playerIndex !== playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isOpp && hasEndPercent;\n        });\n      });\n\n      const result = {\n        total: oppStocks.length,\n        count: _.sumBy(oppStocks, \"endPercent\") || 0,\n      };\n\n      result.ratio = result.total ? result.count / result.total : null;\n\n      return {\n        result: result,\n        simple: genSimpleFromRatio(result, 1),\n      };\n    },\n  },\n  [stats.HIGH_DAMAGE_PUNISHES]: {\n    id: stats.HIGH_DAMAGE_PUNISHES,\n    name: \"Highest Damage Punish\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const punishes = _.flatMap(games, (game) => {\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        return _.filter(conversions, (conversion) => {\n          const isForPlayer = conversion.playerIndex === playerIndex;\n          const hasEndPercent = conversion.endPercent !== null;\n          return isForPlayer && hasEndPercent;\n        });\n      });\n\n      const getDamageDone = (punish) => punish.endPercent - punish.startPercent;\n      const orderedPunishes = _.orderBy(punishes, [getDamageDone], \"desc\");\n      const topPunish = _.first(orderedPunishes);\n      const simple = {\n        text: \"N/A\",\n        number: null,\n      };\n\n      if (topPunish) {\n        simple.number = getDamageDone(topPunish);\n        simple.text = simple.number.toFixed(1);\n      }\n\n      return {\n        result: _.take(orderedPunishes, 5),\n        simple: simple,\n      };\n    },\n  },\n  [stats.DAMAGE_DONE]: {\n    id: stats.DAMAGE_DONE,\n    name: \"Total Damage Done\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"damagePerOpening\", 1, \"count\");\n    },\n  },\n};\n\nfunction genOverallRatioStat(games, playerIndex, field, fixedNum, type = \"ratio\") {\n  const statRatios = _.map(games, (game) => {\n    const overallStats = _.get(game, [\"stats\", \"overall\"]);\n    const overallStatsByPlayer = _.keyBy(overallStats, \"playerIndex\");\n    const overallStatsForPlayer = overallStatsByPlayer[playerIndex];\n    return overallStatsForPlayer[field];\n  });\n\n  const avg = averageRatios(statRatios);\n  const simple = genSimpleFromRatio(avg, fixedNum, type);\n\n  return {\n    result: avg,\n    simple: simple,\n  };\n}\n\nfunction averageRatios(ratios) {\n  const result = {};\n\n  result.count = _.sumBy(ratios, \"count\") || 0;\n  result.total = _.sumBy(ratios, \"total\") || 0;\n  result.ratio = result.total ? result.count / result.total : null;\n\n  return result;\n}\n\nfunction genSimpleFromRatio(ratio, fixedNum, type = \"ratio\") {\n  const result = {};\n\n  switch (type) {\n    case \"ratio\":\n      result.number = ratio.ratio;\n      result.text = ratio.ratio !== null ? ratio.ratio.toFixed(fixedNum) : \"N/A\";\n      break;\n    case \"count\":\n      result.number = ratio.count;\n      result.text = ratio.count.toFixed(fixedNum);\n      break;\n  }\n\n  return result;\n}\n\n/*\nfunction parseFilesInFolder() {\n  const dirPath = process.cwd();\n  const dirContents = fs.readdirSync(dirPath, { withFileTypes: true });\n\n  console.log(\"Reading files in directory...\\n\");\n  const gameDetails = _.chain(dirContents).filter((item) => {\n    return item.isFile() && path.extname(item.name) === \".slp\";\n  }).map((slpItem) => {\n    const slpFilePath = path.join(dirPath, slpItem.name);\n    const game = new SlippiGame(slpFilePath);\n    return {\n      filePath: slpFilePath,\n      settings: game.getSettings(),\n      frames: game.getFrames(),\n      stats: game.getStats(),\n      metadata: game.getMetadata(),\n      latestFrame: game.getLatestFrame(),\n      gameEnd: game.getGameEnd(),\n    };\n  }).value();\n\n  return gameDetails;\n}\n*/\n\nexport function filterGames(games) {\n  // console.log(games);\n  const gamesByIsSingles = _.groupBy(games, (game) => {\n    const numberOfPlayers = game.settings.players.length;\n    return numberOfPlayers === 2;\n  });\n\n  const nonSinglesGames = _.get(gamesByIsSingles, false) || [];\n  if (_.some(nonSinglesGames)) {\n    console.log(\"The following games have been excluded because they are not singles games:\");\n    _.forEach(nonSinglesGames, (game) => {\n      console.log(game.filePath);\n    });\n    console.log();\n  }\n\n  const singlesGames = _.get(gamesByIsSingles, true) || [];\n  const gamesByPorts = _.chain(singlesGames)\n    .groupBy((game) => {\n      const ports = _.map(game.settings.players, \"port\");\n      return _.join(ports, \"-\");\n    })\n    .orderBy([\"length\"], [\"desc\"])\n    .value();\n\n  const gamesWithSamePorts = gamesByPorts.shift();\n  if (_.some(gamesByPorts)) {\n    console.log(\"The following games have been excluded because the player ports differ:\");\n    const flatGames = _.flatten(gamesByPorts);\n    _.forEach(flatGames, (game) => {\n      console.log(game.filePath);\n    });\n    console.log();\n  }\n\n  if (_.isEmpty(gamesWithSamePorts)) {\n    throw new Error(\"There were no valid games found to compute stats from.\");\n  }\n\n  console.log(`Including ${gamesWithSamePorts.length} games for stat calculation...`);\n\n  return gamesWithSamePorts;\n}\n\nfunction computeStats(games) {\n  const firstGame = _.first(games);\n  // console.log(firstGame);\n  const orderIndices = _.map(firstGame.settings.players, \"playerIndex\");\n  const reversedIndices = _.chain(orderIndices).clone().reverse().value();\n  const indices = [orderIndices, reversedIndices];\n\n  const statResults = _.flatMap(stats, (statKey) => {\n    const def = statDefininitions[statKey];\n    if (!def.calculate) {\n      return [];\n    }\n\n    const results = _.map(indices, (iIndices) => {\n      const result = def.calculate(games, iIndices[0], iIndices[1]);\n      result.port = iIndices[0] + 1;\n      return result;\n    });\n\n    const output = { ...def };\n    delete output.calculate;\n    output.results = results;\n\n    return [output];\n  });\n\n  return statResults;\n}\n\nfunction generateGameInfo(games) {\n  const getStartAt = (game) => game.metadata.startAt;\n  const orderedGames = _.orderBy(games, [getStartAt], [\"asc\"]);\n\n  const getResultForPlayer = (game, playerIndex) => {\n    // console.log(game);\n    // Calculate assumed game result\n    const gameEnd = game.gameEnd;\n    if (!gameEnd) {\n      return \"unknown\";\n    }\n\n    const players = _.get(game.settings, [\"players\"]);\n    const opp = _.filter(players, (player) => player.playerIndex !== playerIndex);\n    const oppIndex = _.get(opp, [0, \"playerIndex\"]);\n\n    switch (gameEnd.gameEndMethod) {\n      case 1:\n        // This is a TIME! ending, not implemented yet\n        return \"unknown\";\n      case 2:\n        // This is a GAME! ending\n        const latestFrame = _.get(game.latestFrame, \"players\") || [];\n        const playerStocks = _.get(latestFrame, [playerIndex, \"post\", \"stocksRemaining\"]);\n        const oppStocks = _.get(latestFrame, [oppIndex, \"post\", \"stocksRemaining\"]);\n        if (playerStocks === 0 && oppStocks === 0) {\n          return \"unknown\";\n        }\n\n        return playerStocks === 0 ? \"loser\" : \"winner\";\n      case 7:\n        return gameEnd.lrasInitiatorIndex === playerIndex ? \"loser\" : \"winner\";\n    }\n\n    return \"unknown\";\n  };\n\n  const generatePlayerInfo = (game) => (player) => {\n    // console.log(player);\n    return {\n      port: player.port,\n      characterId: player.characterId,\n      characterColor: player.characterColor,\n      nametag: player.nametag,\n      characterName: characterUtil.getCharacterName(player.characterId),\n      characterColor: characterUtil.getCharacterColorName(player.characterId, player.characterColor),\n      gameResult: getResultForPlayer(game, player.playerIndex),\n    };\n  };\n\n  return _.map(orderedGames, (game) => {\n    const playerInfoGen = generatePlayerInfo(game);\n\n    return {\n      stage: {\n        id: game.settings.stageId,\n        name: stageUtil.getStageName(game.settings.stageId),\n      },\n      players: _.map(game.settings.players, playerInfoGen),\n      startTime: game.metadata.startAt,\n      duration: convertFrameCountToDurationString(game.stats.lastFrame),\n    };\n  });\n}\n\nfunction generateBtsSummary(summary) {\n  const fixedStats = [stats.KILL_MOVES, stats.NEUTRAL_OPENER_MOVES, stats.OPENINGS_PER_KILL, stats.DAMAGE_DONE];\n\n  const randomizeCount = 2;\n\n  const generateSummaryItem = (fullStatOutput) => {\n    const type = fullStatOutput.type;\n\n    const output = { ...fullStatOutput };\n    output.results = _.map(fullStatOutput.results, (result) => _.get(result, [\"simple\", type]));\n\n    return output;\n  };\n\n  const result = [];\n\n  const statsById = _.keyBy(summary, \"id\");\n  const statsToRandomizeById = statsById;\n\n  // Add fixed stats\n  _.forEach(fixedStats, (statId) => {\n    const statOutput = statsById[statId];\n    result.push(generateSummaryItem(statOutput));\n\n    delete statsToRandomizeById[statId];\n  });\n\n  // Deal with SDs\n  const sdStat = statsById[stats.SELF_DESTRUCTS];\n  const sds1 = sdStat.results[0].simple.number;\n  const sds2 = sdStat.results[0].simple.number;\n  const shouldIncludeSds = sds1 > 1 || sds2 > 1;\n  if (!shouldIncludeSds) {\n    delete statsToRandomizeById[stats.SELF_DESTRUCTS];\n  }\n\n  const shuffled = _.shuffle(statsToRandomizeById);\n  const shuffledToInclude = _.take(shuffled, randomizeCount);\n  _.forEach(shuffledToInclude, (statOutput) => {\n    result.push(generateSummaryItem(statOutput));\n  });\n\n  return result;\n}\n\nfunction convertFrameCountToDurationString(frameCount) {\n  const duration = moment.duration(frameCount / 60, \"seconds\");\n  return moment.utc(duration.as(\"milliseconds\")).format(\"m:ss\");\n}\n\nexport default function generateOutput(games) {\n  const stats = computeStats(games);\n\n  return {\n    games: generateGameInfo(games),\n    summary: stats,\n    btsSummary: generateBtsSummary(stats),\n  };\n}\n\n// function writeToFile(output) {\n//   console.log(util.inspect(output, { depth: 6, colors: true }));\n//   fs.writeFileSync('output.json', JSON.stringify(output));\n//   console.log(\"Finished writting stats to output.json!\");\n// }\n\n// export default function (games) {\n//   const filteredGames = filterGames(games);\n//   const output = generateOutput(filteredGames);\n//   writeToFile(output);\n//   console.log(output);\n//   return output;\n// }\n","import {\n  FrameEntryType,\n  FramesType,\n  GameEndType,\n  GameStartType,\n  MetadataType,\n  SlippiGame,\n  StatsType,\n} from \"@slippi/slippi-js\";\n\nimport generateStats from \"./stats\";\n\nexport interface GameDetails {\n  filePath: string;\n  settings: GameStartType;\n  frames: FramesType;\n  stats: StatsType;\n  metadata: MetadataType;\n  latestFrame: FrameEntryType | null;\n  gameEnd: GameEndType | null;\n}\n\nexport async function generateStatsOutput(files: File[]) {\n  const games = await readFilesAsSlippiGameDetails(files);\n  console.log(games);\n  const output = generateStats(games);\n  console.log(output);\n  return output;\n}\n\nexport async function readFileAsSlippiGame(file: File): Promise<SlippiGame> {\n  const data = (await readFileAsArrayBuffer(file)) as ArrayBuffer;\n  const arr = new Int8Array(data);\n  const buf = Buffer.from(arr);\n  return new SlippiGame(buf);\n}\n\nexport async function readFileAsGameDetails(file: File): Promise<GameDetails> {\n  const game = await readFileAsSlippiGame(file);\n  return generateGameDetails(file.name, game);\n}\n\nexport function generateGameDetails(name: string, game: SlippiGame): GameDetails {\n  return {\n    filePath: name,\n    settings: game.getSettings(),\n    frames: game.getFrames(),\n    stats: game.getStats(),\n    metadata: game.getMetadata(),\n    latestFrame: game.getLatestFrame(),\n    gameEnd: game.getGameEnd(),\n  };\n}\n\nexport async function readFilesAsSlippiGameDetails(files: File[]): Promise<GameDetails[]> {\n  const promises = files.map(async (f) => {\n    console.log(\"checking file: \", f);\n    const data = (await readFileAsArrayBuffer(f)) as ArrayBuffer;\n    const arr = new Int8Array(data);\n    const buf = Buffer.from(arr);\n    const game = new SlippiGame(buf);\n    // console.log(game.getStats());\n    return {\n      filePath: f.name,\n      settings: game.getSettings(),\n      frames: game.getFrames(),\n      stats: game.getStats(),\n      metadata: game.getMetadata(),\n      latestFrame: game.getLatestFrame(),\n      gameEnd: game.getGameEnd(),\n    };\n  });\n  return Promise.all(promises);\n}\n\nexport async function readFileAsArrayBuffer(file: File): Promise<string | ArrayBufferLike> {\n  return new Promise((resolve, reject) => {\n    const fr = new FileReader();\n    fr.onabort = () => reject(\"file reading was aborted\");\n    fr.onerror = () => reject(\"file reading has failed\");\n    if (fr.readAsBinaryString) {\n      fr.addEventListener(\n        \"load\",\n        function () {\n          const string = (this as any).resultString != null ? (this as any).resultString : this.result;\n          const result = new Uint8Array(string.length);\n          for (let i = 0; i < string.length; i++) {\n            result[i] = string.charCodeAt(i);\n          }\n          resolve(result.buffer);\n        },\n        false\n      );\n      fr.readAsBinaryString(file);\n    } else {\n      fr.addEventListener(\n        \"load\",\n        function () {\n          if (this.result) {\n            resolve(this.result);\n          } else {\n            reject(\"no data read\");\n          }\n        },\n        false\n      );\n      fr.readAsArrayBuffer(file);\n    }\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/powered-by.61867ea8.png\";"],"sourceRoot":""}
{"version":3,"sources":["lib/readFile.ts","styles/images/obs.png","styles/images/powered-by.png","lib/demo.ts","views/RandomView.tsx","store/reducers.ts","store/context.tsx","components/ExternalLink.tsx","components/Header.tsx","components/DropPad.tsx","lib/resources.ts","styles/theme.tsx","components/FileList/FileItem.tsx","lib/winner.ts","components/FileList/index.tsx","lib/portColor.ts","lib/processStats.ts","containers/FileListInput.tsx","views/MainView.tsx","components/OBSDragButton.tsx","lib/hooks/useParam.ts","lib/hooks/useKeyPress.ts","lib/hooks/useOnClickOutside.ts","components/ColorPicker.tsx","containers/Options/Panel.tsx","containers/Options/index.tsx","containers/CharDisplay/index.tsx","components/Block.tsx","components/InlineEdit/index.tsx","components/TextBlock.tsx","containers/NameBlock.tsx","containers/ScoreBlock.tsx","components/GameResult/HeadToHead.tsx","components/GameResult/StageTimer.tsx","components/GameResult/index.tsx","containers/GameDisplay/index.tsx","components/Stat.tsx","containers/StatDisplay/Statistics.tsx","containers/StatDisplay/index.tsx","containers/RenderDisplay.tsx","views/RenderView.tsx","App.tsx","serviceWorker.ts","index.tsx","lib/stats.js"],"names":["readFileAsSlippiGame","file","a","readFileAsArrayBuffer","data","arr","Int8Array","buf","Buffer","from","SlippiGame","generateGameDetails","name","game","filePath","settings","getSettings","frames","getFrames","stats","getStats","metadata","getMetadata","latestFrame","getLatestFrame","gameEnd","getGameEnd","Promise","resolve","reject","fr","FileReader","onabort","onerror","readAsBinaryString","addEventListener","string","this","resultString","result","Uint8Array","length","i","charCodeAt","buffer","readAsArrayBuffer","module","exports","getRandomArbitrary","min","max","Math","random","getRandomInt","ceil","floor","generateDemoQuery","paramMap","generateRandomCharacter","char1","color1","char2","color2","leftWins","rightWins","totalGames","gt","gameKey","leftWillWin","gameValue","generateRandomGame","join","score","winner","forEach","key","move","moveUtil","getMoveShortName","toUpperCase","generateRandomMove","toFixed","charId","charInfo","characterUtil","getCharacterInfo","colorIndex","colors","LEGAL_STAGE_IDS","playerInfos","stageIndex","generateRandomStageId","mins","secs","String","padStart","generateRandomDuration","Types","RandomView","search","URLSearchParams","toString","to","pathname","initialState","files","AppContext","createContext","state","dispatch","mainReducer","action","type","ADD_GAME","payload","filename","details","fileToReplace","findIndex","f","loading","SET_ERROR","error","ADD_FILE","Boolean","find","push","REMOVE_FILE","filter","CLEAR_ALL","reducer","AppProvider","children","useReducer","Provider","value","ExternalLink","props","target","rel","Header","styled","h1","Container","div","isDragAccept","isDragActive","getColor","DropPad","useDropzone","getRootProps","getInputProps","isDragReject","sanitize","text","replacement","toLowerCase","replace","getCharacterFolderFromId","characterId","color","character","charFolder","colorFolder","process","getCharacterFolderFromName","getCharacterName","getCharacterPortrait","folder","defaultTheme","primaryColor","secondaryColor","GlobalTheme","styles","css","BasicFileItem","onRemove","className","onClick","title","CharacterIcon","src","getCharacterStockIcon","style","height","FileItem","console","log","lastFrame","stageName","stageUtil","getStageName","stageId","players","duration","convertFrameCountToDurationString","frame","winnerIndex","Object","keys","map","post","reduce","b","stocksRemaining","percent","playerIndex","icons","player","getCharacterColorName","characterColor","port","PortColor","FileList","getPortColor","portNumber","P1","P2","P3","P4","extractNameAndCode","playerPort","index","playerTag","nametag","netplayName","get","ProcessButton","button","p","backgroundColor","FileListInput","history","useHistory","useContext","onDrop","useCallback","acceptedFiles","startTime","Date","getTime","promises","all","then","time","finishedProcessing","buttonText","accept","disabled","gameDetails","filtered","filterGames","Error","generateStats","games","summary","params","lastGame","leftPlayer","rightPlayer","leftColor","rightColor","lastGameDetails","leftTag","leftCode","rightTag","rightCode","name1","name2","sub1","sub2","stage","id","gameDuration","playerInfo","gameResult","s","opk1","results","simple","opk2","dpo1","dpo2","nw1","nw2","playerRes","opponentRes","mckm1","shortName","count","mckm2","mcno1","mcno2","ipm1","ipm2","akp1","akp2","tdd1","tdd2","processStats","linkStyle","MainView","href","Draggable","OBSDragButton","wrapperRef","React","useRef","window","location","onDragStart","e","dragged","img","Image","obsImage","dataTransfer","setDragImage","setData","handleDragStart","onDragEnd","blur","handleDragEnd","preventDefault","ref","width","marginRight","useParam","defaultValue","useState","setValue","useLocation","useEffect","currentValue","setParam","val","set","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","removeEventListener","useOnClickOutside","handler","listener","event","current","contains","document","ColorPicker","onChange","show","setShow","hex","ColorContainer","ColorLabel","DualColorPanel","panelLabel","leftLabel","leftColorParam","leftDefault","rightLabel","rightColorParam","rightDefault","setLeftColor","setRightColor","Content","Column","Heading","h2","Outer","Options","open","setOpen","outerRef","FLIP_RIGHT_CHARS","CharDisplay","colorParam","charParam","align","theme","char","facing","imgSrc","side","getCharacterVSScreen","alignment","defaultAlignment","includes","getAlignment","Block","optional","InlineEdit","onSetText","textAlign","isInputActive","setIsInputActive","inputValue","setInputValue","textRef","inputRef","tab","enter","esc","focus","maxWidth","defaultProps","TextBlock","onEdit","child","Name","Subtitle","NameBlock","nameParam","defaultName","subtitleParam","setName","sub","setSub","StyledBlock","ScoreBlock","setScore","highlight","BaseHeadImage","HeadImage","invWaypoint","waypoint","dim","imageSrc","HeadToHead","result1","result2","p1","p2","Text","span","StageTimer","stageIcon","getStageIcon","GameResult","rest","Game","winningSide","gameInfo","split","res1","res2","gameWinner","GameDisplay","total","parseInt","StatLabel","labelBackground","labelColor","StatContent","OuterStat","Stat","label","leftText","rightText","onLeftTextBlur","onRightTextBlur","ConnectedStat","param1","param2","field1","setField1","field2","setField2","MostCommonKillMove","MostCommonNeutralOpener","AverageKillPercent","NeutralWins","OpeningsPerKill","TotalDamageDone","Divider","StatDisplay","RenderDisplay","RenderView","alt","poweredByImage","hot","basename","exact","path","component","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","require","stages","moves","characters","moment","_","OPENINGS_PER_KILL","DAMAGE_PER_OPENING","NEUTRAL_WINS","KILL_MOVES","NEUTRAL_OPENER_MOVES","EARLY_KILLS","LATE_DEATHS","SELF_DESTRUCTS","INPUTS_PER_MINUTE","AVG_KILL_PERCENT","HIGH_DAMAGE_PUNISHES","DAMAGE_DONE","statDefininitions","betterDirection","recommendedRounding","calculate","genOverallRatioStat","killMoves","flatMap","conversions","conversionsForPlayer","conversion","isForPlayer","didKill","last","killMovesByMove","groupBy","killMoveCounts","first","moveId","getMoveName","orderedKillMoveCounts","orderBy","topKillMove","simpleText","neutralMoves","isNeutralWin","openingType","neutralMovesByMove","neutralMoveCounts","orderedNeutralMoveCounts","topNeutralMove","oppStocks","stocks","stock","isOpp","hasEndPercent","endPercent","orderedOppStocks","earliestKillStock","number","take","playerStocks","isPlayer","orderedPlayerStocks","latestDeathStock","sdCounts","playerEndedStocks","oppKillConversions","sdSum","sum","sumBy","ratio","genSimpleFromRatio","punishes","getDamageDone","punish","startPercent","orderedPunishes","topPunish","field","fixedNum","statRatios","overallStats","keyBy","avg","averageRatios","ratios","gamesByIsSingles","nonSinglesGames","some","singlesGames","gamesByPorts","chain","ports","gamesWithSamePorts","shift","flatGames","flatten","isEmpty","computeStats","firstGame","orderIndices","indices","clone","reverse","statKey","def","iIndices","output","generateGameInfo","orderedGames","startAt","generatePlayerInfo","characterName","opp","oppIndex","gameEndMethod","lrasInitiatorIndex","getResultForPlayer","playerInfoGen","generateBtsSummary","fixedStats","generateSummaryItem","fullStatOutput","statsById","statsToRandomizeById","statId","statOutput","sdStat","sds1","sds2","shuffled","shuffle","shuffledToInclude","frameCount","utc","as","format","generateOutput","btsSummary"],"mappings":"gPA8BO,SAAeA,EAAtB,kC,4CAAO,WAAoCC,GAApC,mBAAAC,EAAA,sEACeC,EAAsBF,GADrC,cACCG,EADD,OAECC,EAAM,IAAIC,UAAUF,GACpBG,EAAMC,EAAOC,KAAKJ,GAHnB,kBAIE,IAAIK,aAAWH,IAJjB,4C,sBAYA,SAASI,EAAoBC,EAAcC,GAChD,MAAO,CACLC,SAAUF,EACVG,SAAUF,EAAKG,cACfC,OAAQJ,EAAKK,YACbC,MAAON,EAAKO,WACZC,SAAUR,EAAKS,cACfC,YAAaV,EAAKW,iBAClBC,QAASZ,EAAKa,cAyBX,SAAevB,EAAtB,kC,4CAAO,WAAqCF,GAArC,SAAAC,EAAA,+EACE,IAAIyB,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAK,IAAIC,WACfD,EAAGE,QAAU,kBAAMH,EAAO,6BAC1BC,EAAGG,QAAU,kBAAMJ,EAAO,4BACtBC,EAAGI,oBACLJ,EAAGK,iBACD,QACA,WAGE,IAFA,IAAMC,EAAuC,MAA7BC,KAAaC,aAAwBD,KAAaC,aAAeD,KAAKE,OAChFA,EAAS,IAAIC,WAAWJ,EAAOK,QAC5BC,EAAI,EAAGA,EAAIN,EAAOK,OAAQC,IACjCH,EAAOG,GAAKN,EAAOO,WAAWD,GAEhCd,EAAQW,EAAOK,WAEjB,GAEFd,EAAGI,mBAAmBjC,KAEtB6B,EAAGK,iBACD,QACA,WACME,KAAKE,OACPX,EAAQS,KAAKE,QAEbV,EAAO,mBAGX,GAEFC,EAAGe,kBAAkB5C,QA/BpB,4C,sEC3EP6C,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,kRCS3C,SAASC,EAAmBC,EAAaC,GACvC,OAAOC,KAAKC,UAAYF,EAAMD,GAAOA,EAUvC,SAASI,EAAaJ,EAAaC,GAGjC,OAFAD,EAAME,KAAKG,KAAKL,GAChBC,EAAMC,KAAKI,MAAML,GACVC,KAAKI,MAAMJ,KAAKC,UAAYF,EAAMD,EAAM,IAAMA,EAGhD,SAASO,IACd,IAAMC,EAAgC,CAGtCA,MAAiB,SACjBA,MAAiB,KACjBA,KAAgB,YAChBA,KAAgB,WAPuC,EAU/BC,IAV+B,mBAUhDC,EAVgD,KAUzCC,EAVyC,OAW/BF,IAX+B,mBAWhDG,EAXgD,KAWzCC,EAXyC,KAYvDL,EAASE,MAAQA,EACjBF,EAASG,OAASA,EAClBH,EAASI,MAAQA,EACjBJ,EAASK,OAASA,EAGlB,IAAIC,EAAW,EACXC,EAAY,EAGVC,EAAaZ,EAAa,EAAG,GACnCI,EAASS,GAAKD,EACd,IAAK,IAAIvB,EAAI,EAAGA,GAAKuB,EAAYvB,IAAK,CACpC,IAAMyB,EAAO,WAAOzB,GACd0B,EAAcjB,KAAKC,SAAW,GAG9BiB,EAAYC,EAAmB,CAFd,CAACX,EAAOC,EAAQQ,EAAc,SAAW,SAASG,KAAK,KACtD,CAACV,EAAOC,EAAQM,EAAc,QAAU,UAAUG,KAAK,OAE/Ed,EAASU,GAAWE,EAEhBD,EACFL,GAAY,EAEZC,GAAa,EAoCjB,OA/BAP,EAASe,MAAT,UAAoBT,EAApB,cAAkCC,GAE9BD,IAAaC,IACfP,EAASgB,OAASV,EAAWC,EAAY,OAAS,SAIpD,CAAC,QAAS,QAAS,QAAS,SAASU,SAAQ,SAACC,GAC5ClB,EAASkB,GA0Bb,WACE,IAAMC,EAAOvB,EAAa,EAAG,IACvBzC,EAAOiE,QAASC,iBAAiBF,GAAMG,cAC7C,MAAM,GAAN,OAAUnE,EAAV,cAAoBgE,GA7BFI,MAIlB,CAAC,OAAQ,QAAQN,SAAQ,SAACC,GACxBlB,EAASkB,GAAO3B,EAAmB,EAAG,IAAIiC,QAAQ,MAIpD,CAAC,OAAQ,QAAQP,SAAQ,SAACC,GACxBlB,EAASkB,GAAO3B,EAAmB,IAAM,KAAMiC,QAAQ,MAIzD,CAAC,OAAQ,QAAQP,SAAQ,SAACC,GACxBlB,EAASkB,GAAO3B,EAAmB,GAAI,KAAKiC,QAAQ,MAItD,CAAC,MAAO,OAAOP,SAAQ,SAACC,GACtBlB,EAASkB,GAAOtB,EAAa,GAAI,OAG5BI,EAST,SAASC,IACP,IAAMwB,EAAS7B,EAAa,EAAG,IACzB8B,EAAWC,aAAcC,iBAAiBH,GAC1CI,EAAajC,EAAa,EAAG8B,EAASI,OAAO9C,OAAS,GAE5D,MAAO,CAACyC,EADMC,EAASI,OAAOD,IAIhC,IAAME,EAAkB,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,IAa1C,SAASlB,EAAmBmB,GAI1B,MADkB,CAdpB,WACE,IAAMC,EAAarC,EAAa,EAAGmC,EAAgB/C,OAAS,GAC5D,OAAO+C,EAAgBE,GAUPC,GAPlB,WACE,IAAMC,EAAOvC,EAAa,EAAG,GACvBwC,EAAOC,OAAOzC,EAAa,EAAG,KAAK0C,SAAS,EAAG,KACrD,MAAM,GAAN,OAAUH,EAAV,YAAkBC,GAKGG,IACH,mBAA2BP,IAAalB,KAAK,KC9H1D,ICYK0B,EDZCC,EAAuB,WAClC,IAAMzC,EAAWD,IACX2C,EAAS,IAAM,IAAIC,gBAAgB3C,GAAU4C,WACnD,OACE,kBAAC,IAAD,CACEC,GAAI,CACFC,SAAU,UACVJ,a,kBCKIF,K,oBAAAA,E,sBAAAA,E,oBAAAA,E,0BAAAA,E,uBAAAA,M,KA6BL,ICxCDO,EAAiC,CACrCC,MAAO,IAGHC,EAAaC,wBAGhB,CACDC,MAAOJ,EACPK,SAAU,kBAAM,QAGZC,EAAc,SAACF,EAAyBG,GAA1B,OD4BG,SAACH,EAAyBG,GAC/C,OAAQA,EAAOC,MACb,KAAKf,EAAMgB,SAAW,IAAD,EACWF,EAAOG,QAA7BC,EADW,EACXA,SAAUC,EADC,EACDA,QACZX,EAAQG,EAAMH,MACdY,EAAgBZ,EAAMa,WAAU,SAACC,GAAD,OAAOA,EAAEJ,WAAaA,KAK5D,OAJuB,IAAnBE,IACFZ,EAAMY,GAAeD,QAAUA,EAC/BX,EAAMY,GAAeG,SAAU,GAE1B,2BACFZ,GADL,IAEEH,UAGJ,KAAKR,EAAMwB,UAAY,IAAD,EACQV,EAAOG,QAA3BC,EADY,EACZA,SAAUO,EADE,EACFA,MACZjB,EAAQG,EAAMH,MACdY,EAAgBZ,EAAMa,WAAU,SAACC,GAAD,OAAOA,EAAEJ,WAAaA,KAK5D,OAJuB,IAAnBE,IACFZ,EAAMY,GAAeK,MAAQA,EAC7BjB,EAAMY,GAAeG,SAAU,GAE1B,2BACFZ,GADL,IAEEH,UAGJ,KAAKR,EAAM0B,SAAW,IACZR,EAAaJ,EAAOG,QAApBC,SACFV,EAAQG,EAAMH,MASpB,OARsBmB,QAAQnB,EAAMoB,MAAK,SAACN,GAAD,OAAOA,EAAEJ,WAAaA,OAE7DV,EAAMqB,KAAK,CACTX,WACAK,SAAS,EACTJ,QAAS,OAGN,2BACFR,GADL,IAEEH,UAGJ,KAAKR,EAAM8B,YAAc,IACfZ,EAAaJ,EAAOG,QAApBC,SACFV,EAAQG,EAAMH,MAAMuB,QAAO,SAACT,GAAD,OAAOA,EAAEJ,WAAaA,KACvD,OAAO,2BACFP,GADL,IAEEH,UAGJ,KAAKR,EAAMgC,UACT,OAAO,2BACFrB,GADL,IAEEH,MAAO,KAGX,QACE,OAAOG,GCvF4DsB,CAAQtB,EAAOG,IAElFoB,EAAwB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACpBC,qBAAWvB,EAAaN,GADJ,mBACvCI,EADuC,KAChCC,EADgC,KAG9C,OAAO,kBAACH,EAAW4B,SAAZ,CAAqBC,MAAO,CAAE3B,QAAOC,aAAauB,I,qBCpB9CI,EAA6D,SAACC,GACzE,OACE,qCAAGC,OAAO,SAASC,IAAI,uBAA0BF,GAC9CA,EAAML,W,qiBCHN,IAAMQ,EAASC,IAAOC,GAAV,K,0cCEnB,IAUMC,EAAYF,IAAOG,IAAV,KAOG,SAACP,GAAD,OAjBD,SAACA,GAChB,OAAIA,EAAMQ,aACD,UAELR,EAAMS,aACD,UAEF,UAUoBC,CAASV,MAYzBW,EAA8C,SAACX,GAAW,IAAD,EACcY,YAAYZ,GAAtFa,EAD4D,EAC5DA,aAAcC,EAD8C,EAC9CA,cAAeL,EAD+B,EAC/BA,aAAcD,EADiB,EACjBA,aAAcO,EADG,EACHA,aAEjE,OACE,kBAACT,EAAcO,EAAa,CAAEJ,eAAcD,eAAcO,iBACxD,0BAAWD,KACX,uECnCN,SAASE,EAASC,GAA0C,IAA5BC,EAA2B,uDAAb,IAC5C,OAAOD,EAAKE,cAAcC,QAAQ,WAAYF,GAGhD,SAASG,EAAyBC,EAA8BC,GAE9D,OAGF,SAAoCC,GAAuC,IAApBD,EAAmB,uDAAX,UACvDE,EAAaT,EAASQ,GACtBE,EAAcV,EAASO,GAC7B,MAAM,GAAN,OAAUI,IAAV,8BAAsDF,EAAtD,YAAoEC,GAN7DE,CADejF,aAAckF,kBAAkBP,GACLC,GAS5C,SAASO,EAAqBR,EAA8BC,GACjE,IAAMQ,EAASV,EAAyBC,EAAaC,GACrD,MAAM,GAAN,OAAUQ,EAAV,iB,oMCbK,IAAMC,EAAsB,CACjCC,aAAc,UACdC,eAAgB,WAGLC,EAA+B,SAAC,GAAsC,IAApCF,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,eAC3D,OACE,YAAC,IAAD,CACEE,OAAQC,YAAF,IAEmDJ,EAAiBC,M,2sDCRhF,IAAMI,EAAmE,SAACtC,GAAW,IAC3EuC,EAA6BvC,EAA7BuC,SAAUpK,EAAmB6H,EAAnB7H,KAAMwH,EAAaK,EAAbL,SACxB,OACE,mBACE0C,IAAKA,YAAF,IAmBUL,EAAaE,iBAU1B,mBACEG,IAAKA,YAAF,MAIH,mBACEA,IAAKA,YAAF,MAOFlK,GAEH,uBAAMwH,IAEP4C,GACC,sBAAQC,UAAU,gBAAgBC,QAASF,EAAUG,MAAM,UAA3D,YAQFC,EAID,SAAC,GAA+B,IAA7BlG,EAA4B,EAA5BA,OAAQ8E,EAAoB,EAApBA,MAAOvF,EAAa,EAAbA,OACf4G,EF7CD,SAA+BtB,EAA8BC,GAClE,IAAMQ,EAASV,EAAyBC,EAAaC,GACrD,MAAM,GAAN,OAAUQ,EAAV,cE2CYc,CAAsBpG,EAAQ8E,GAC1C,OACE,mBACEc,IAAKA,YAAF,IAICrG,GAAM,0TAcV,mBAAK4G,IAAKA,EAAKE,MAAO,CAAEC,OAAQ,YAUzBC,GAAoC,SAAChD,GAAW,IACnDxI,EAAmBwI,EAAnBxI,KAAM+K,EAAavC,EAAbuC,SACN7D,EAAsClH,EAAtCkH,SAAUK,EAA4BvH,EAA5BuH,QAASE,EAAmBzH,EAAnByH,MAAON,EAAYnH,EAAZmH,QAClC,GAAII,EACF,OAAO,YAAC,EAAD,CAAe5G,KAAMuG,GAArB,eAET,GAAIO,IAAUN,EACZ,OACE,YAAC,EAAD,CAAe4D,SAAUA,EAAUpK,KAAMuG,GAAzC,YAMJuE,QAAQC,IAAIvE,GACZ,IC/GyBwE,ED+GnBC,EAAYC,SAAUC,aAAa3E,EAAQrG,SAASiL,SACpDC,EAAU7E,EAAQrG,SAASkL,QAC3BC,EAAW9E,EAAQ7F,YAAc4K,YAAkC/E,EAAQ7F,YAAY6K,OAAS,MAChGC,EAAcjF,EAAQ7F,aClHHqK,EDkH4BxE,EAAQ7F,YCjHpC+K,OAAOC,KAAKX,EAAUK,SAASO,KAAI,SAAC9J,GAAD,OAAakJ,EAAUK,QAAQvJ,GAAW+J,QAC7DC,QAAO,SAACxM,EAAGyM,GAElD,OAAIzM,EAAE0M,gBAAkBD,EAAEC,gBACjB1M,EAELA,EAAE0M,gBAAkBD,EAAEC,gBACjBD,EAILzM,EAAE2M,QAAUF,EAAEE,QACT3M,EAELA,EAAE2M,QAAUF,EAAEE,QACTF,EAIF,QAGcG,aD2FqD,KACtEC,EAAQd,EAAQO,KAAI,SAACQ,GACzB,IAAMvI,EAASuI,EAAOF,cAAgBT,EAChCnH,EAAS8H,EAAOjD,YAChBC,EAAQ5E,aAAc6H,sBAAsB/H,EAAQ8H,EAAOE,gBACjE,OAAO,YAAC,EAAD,CAAevI,IAAG,UAAKqI,EAAOG,KAAZ,SAAyBjI,OAAQA,EAAQ8E,MAAOA,EAAOvF,OAAQA,OAE1F,OACE,YAAC,EAAD,CAAeuG,SAAUA,EAAUpK,KAAMuG,GACvC,mBACE2D,IAAKA,YAAF,MAQH,uBAAMe,GACN,mBACEf,IAAKA,YAAF,MAMFiC,GAEH,uBAAMb,M,iOE3IP,ICZKkB,GDYCC,GAAoC,SAAC5E,GAAW,IACnDhC,EAAoBgC,EAApBhC,MAAOuE,EAAavC,EAAbuC,SACf,OACE,mBACEF,IAAKA,YAAF,OAQFrE,EAAM+F,KAAI,SAACjF,GAAD,OACT,YAAC,GAAD,CAAU5C,IAAK4C,EAAEJ,SAAUlH,KAAMsH,EAAGyD,SAAU,kBAAMA,EAASzD,EAAEJ,kB,SClBhE,SAASmG,GAAaC,GAC3B,OAAQA,GACN,KAAK,EACH,OAAOH,GAAUI,GACnB,KAAK,EACH,OAAOJ,GAAUK,GACnB,KAAK,EACH,OAAOL,GAAUM,GACnB,KAAK,EACH,OAAON,GAAUO,GACnB,QACE,OAAOP,GAAUI,K,SAlBXJ,K,aAAAA,E,aAAAA,E,aAAAA,E,cAAAA,Q,KCMZ,IAAMQ,GAAqB,SAACC,EAAoBzG,GAC9C,IAAMrG,EAAWqG,EAAQrG,SACnBM,EAAW+F,EAAQ/F,SACnByM,EAAQD,EAAa,EACrBb,EAASjM,EAASkL,QAAQpE,MAAK,SAACmF,GAAD,OAAYA,EAAOF,cAAgBgB,KAClEC,EAAYf,EAASA,EAAOgB,QAAU,KACtCC,EAA6BC,eAAI7M,EAAU,CAAC,UAAWyM,EAAO,QAAS,WAAY,MAGzF,MAAO,CADMC,GAAaE,GAAe,GADNC,eAAI7M,EAAU,CAAC,UAAWyM,EAAO,QAAS,QAAS,OAEzD,K,klBCF/B,IAAMK,GAAgBtF,IAAOuF,OAAV,MAIH,SAACC,GAAD,OAAOA,EAAEC,mBAEd,SAACD,GAAD,OAAOA,EAAErE,SAkBPuE,GAA0B,WACrC,IAAMC,EAAUC,cAD2B,EAEfC,qBAAWhI,GAA/BE,EAFmC,EAEnCA,MAAOC,EAF4B,EAE5BA,SAuBT8H,EAASC,uBACb,SAACC,GACC,IAAMC,GAAY,IAAIC,MAAOC,UACvBC,EAAWJ,EAAcrC,IAAd,+BAAAtM,EAAA,MAAkB,WAAOD,GAAP,iBAAAC,EAAA,6DACjC2G,EAAS,CACPG,KAAMf,EAAM0B,SACZT,QAAS,CACPC,SAAUlH,EAAKW,QAJc,kBAQZZ,aAAqBC,GART,OAQzBY,EARyB,OASzBuG,EAAUzG,aAAoBV,EAAKW,KAAMC,GAC/CgG,EAAS,CACPG,KAAMf,EAAMgB,SACZC,QAAS,CACPC,SAAUlH,EAAKW,KACfC,OACAuG,aAf2B,gDAmB/BP,EAAS,CACPG,KAAMf,EAAMwB,UACZP,QAAS,CACPC,SAAUlH,EAAKW,KACf8G,MAAM,EAAD,MAvBsB,yDAAlB,uDA4BjB/F,QAAQuN,IAAID,GAAUE,MAAK,WACzB,IAAMC,GAAO,IAAIL,MAAOC,UAAYF,EACpCpD,QAAQC,IAAR,iCAAsCyD,EAAtC,YAGJ,CAACvI,IAGGwI,GAAsBzI,EAAMH,MAAMoB,MAAK,SAACN,GAAD,OAAOA,EAAEC,WAChD8H,EACmB,IAAvB1I,EAAMH,MAAMhE,OAAe,iBAAmB4M,EAAqB,iBAAmB,cACxF,OACE,mBACEvE,IAAKA,YAAF,OAMH,YAAC,EAAD,CAASyE,OAAO,OAAOZ,OAAQA,IAC/B,YAAC,GAAD,CAAUlI,MAAOG,EAAMH,MAAOuE,SA5DjB,SAAC7D,GAChBN,EAAS,CACPG,KAAMf,EAAM8B,YACZb,QAAS,CACPC,iBAyDF,YAACgH,GAAD,CACEG,gBAAiB7D,EAAaC,aAC9BV,MAAM,QACNwF,SAAiC,IAAvB5I,EAAMH,MAAMhE,SAAiB4M,EACvCnE,QA7EU,WACd,IAIM/E,EAAS,ID5BZ,SAAsBsJ,GAC3B,IAAMC,EAAWC,YAAYF,GAC7B,IAAKC,GAAgC,IAApBA,EAASjN,OACxB,MAAM,IAAImN,MAAM,kBAHsD,MAM7CC,YAAcH,GAAjCI,EANgE,EAMhEA,MAAOC,EANyD,EAMzDA,QACTC,EAAc,GAGdC,EAAWH,EAAMA,EAAMrN,OAAS,GAChCyN,EAAaD,EAAShE,QAAQ,GAC9BkE,EAAcF,EAAShE,QAAQ,GACrC+D,EAAOI,UAAY9C,GAAa4C,EAAW/C,MAC3C6C,EAAOK,WAAa/C,GAAa6C,EAAYhD,MAE7C6C,EAAOrM,MAAQuM,EAAWnG,YAC1BiG,EAAOnM,MAAQsM,EAAYpG,YAC3BiG,EAAOpM,OAASsM,EAAWhD,eAC3B8C,EAAOlM,OAASqM,EAAYjD,eAG5B,IAAMoD,EAAkBZ,EAASA,EAASjN,OAAS,GAtBqB,EAuB5CmL,GAAmBsC,EAAW/C,KAAMmD,GAvBQ,mBAuBjEC,EAvBiE,KAuBxDC,EAvBwD,OAwB1C5C,GAAmBuC,EAAYhD,KAAMmD,GAxBK,mBAwBjEG,EAxBiE,KAwBvDC,EAxBuD,KAyBxEV,EAAOW,MAAQJ,EAAQxL,cACvBiL,EAAOY,MAAQH,EAAS1L,cACxBiL,EAAOa,KAAOL,EACdR,EAAOc,KAAOJ,EAGdV,EAAO9L,GAAK4L,EAAMrN,OAGlB,IAAIsB,EAAW,EACXC,EAAY,EA6EhB,OA3EC8L,EAAgBpL,SAAQ,SAAC7D,EAAM6B,GAC9BgJ,QAAQC,IAAI,oBAAqB9K,GACjC,IAAMsD,EAAO,WAAOzB,EAAI,GAClBsJ,EAAkBnL,EAAKkQ,MAAMC,GAC7BC,EAAuBpQ,EAAKqL,SAC5BgF,EAAarQ,EAAKoL,QAAQO,KAAI,SAAC6B,GAAD,MAAY,CAACA,EAAEtE,YAAasE,EAAEnB,eAAgBmB,EAAE8C,YAAY5M,KAAK,QAC/FF,EAAY,CAAC2H,EAASiF,GAAV,mBAA2BC,IAAY3M,KAAK,KAC9DmH,QAAQC,IAAR,UAAexH,EAAf,cAA4BE,IAC5B2L,EAAO7L,GAAWE,EAGiB,WAA/BxD,EAAKoL,QAAQ,GAAGkF,WAClBpN,GAAY,EAC4B,WAA/BlD,EAAKoL,QAAQ,GAAGkF,aACzBnN,GAAa,MAIjBgM,EAAOxL,MAAP,UAAkBT,EAAlB,cAAgCC,GAC5BD,IAAaC,IACfgM,EAAOvL,OAASV,EAAWC,EAAY,OAAS,SAIjD+L,EAAkBrL,SAAQ,SAAC0M,GAC1B,OAAQA,EAAEJ,IACR,IAAK,kBACHhB,EAAOqB,KAAOD,EAAEE,QAAQ,GAAGC,OAAO7H,KAClCsG,EAAOwB,KAAOJ,EAAEE,QAAQ,GAAGC,OAAO7H,KAClC,MAEF,IAAK,mBACHsG,EAAOyB,KAAOL,EAAEE,QAAQ,GAAGC,OAAO7H,KAClCsG,EAAO0B,KAAON,EAAEE,QAAQ,GAAGC,OAAO7H,KAClC,MAEF,IAAK,cACHsG,EAAO2B,IAAMP,EAAEE,QAAQ,GAAGC,OAAO7H,KACjCsG,EAAO4B,IAAMR,EAAEE,QAAQ,GAAGC,OAAO7H,KACjC,MAEF,IAAK,YACHgC,QAAQC,IAAIyF,GACZ,IAAMS,EAAYT,EAAEE,QAAQ,GAAG/O,OAAO,GAChCuP,EAAcV,EAAEE,QAAQ,GAAG/O,OAAO,GACxCyN,EAAO+B,MAAP,UAAkBF,EAAUG,UAAUjN,cAAtC,cAAyD8M,EAAUI,OACnEjC,EAAOkC,MAAP,UAAkBJ,EAAYE,UAAUjN,cAAxC,cAA2D+M,EAAYG,OACvE,MAEF,IAAK,qBACH,IAAMJ,EAAYT,EAAEE,QAAQ,GAAG/O,OAAO,GAChCuP,EAAcV,EAAEE,QAAQ,GAAG/O,OAAO,GACxCyN,EAAOmC,MAAP,UAAkBN,EAAUG,UAAUjN,cAAtC,cAAyD8M,EAAUI,OACnEjC,EAAOoC,MAAP,UAAkBN,EAAYE,UAAUjN,cAAxC,cAA2D+M,EAAYG,OACvE,MAEF,IAAK,kBACHjC,EAAOqC,KAAOjB,EAAEE,QAAQ,GAAGC,OAAO7H,KAClCsG,EAAOsC,KAAOlB,EAAEE,QAAQ,GAAGC,OAAO7H,KAClC,MAEF,IAAK,iBACHsG,EAAOuC,KAAOnB,EAAEE,QAAQ,GAAGC,OAAO7H,KAClCsG,EAAOwC,KAAOpB,EAAEE,QAAQ,GAAGC,OAAO7H,KAClC,MAEF,IAAK,aACHsG,EAAOyC,KAAOrB,EAAEE,QAAQ,GAAGC,OAAO7H,KAClCsG,EAAO0C,KAAOtB,EAAEE,QAAQ,GAAGC,OAAO7H,SAMxCgC,QAAQC,IAAI,2BAA4BqE,GACjC,IAAI5J,gBAAgB4J,GCrFV2C,CAHK/L,EAAMH,MAAMuB,QAAO,SAACT,GAAD,OAAqB,OAAdA,EAAEH,WAAkBoF,KAAI,SAACjF,GAAD,OAAOA,EAAEH,YAInDf,WAC5BmI,EAAQ1G,KAAK,CACXvB,SAAU,UACVJ,aAuEGmJ,K,sxCC7GT,IAAMsD,GAAY9H,YAAH,KAIJL,EAAaE,gBAclB5B,GAAYF,IAAOG,IAAV,MAMF6J,GAAqB,WAAO,IAC/BhM,EAAa6H,qBAAWhI,GAAxBG,SAQR,OACE,mBACEiE,IAAKA,YAAF,OAOH,YAAC,EAAgBL,GACjB,YAAC,GAAD,KACE,mBACEK,IAAKA,YAAF,OAIH,YAAClC,EAAD,CACEsC,QAvBO,WACfrE,EAAS,CACPG,KAAMf,EAAMgC,aAsBNkD,MAAM,eACNL,IAAKA,YAAF,OAHL,iBAUF,mBACEA,IAAKA,YAAF,OAKH,YAAC,GAAD,OAEF,mBACEA,IAAKA,YAAF,OAQH,YAAC,IAAD,CAAMA,IAAK8H,GAAWtM,GAAG,UAAU6E,MAAM,4BAAzC,QAGA,YAAC,EAAD,CAAGL,IAAK8H,GAAWzH,MAAM,sBAAsB2H,KAAK,2CAApD,UAGA,YAAC,EAAD,CAAGhI,IAAK8H,GAAWzH,MAAM,YAAY2H,KAAK,gCAA1C,c,oYCtFV,IAAMC,GAAYlK,IAAO3I,EAAV,MAeF8S,GAA0B,WACrC,IAAMC,EAAaC,IAAMC,OAAO,MAoBhC,OACE,YAACJ,GAAD,CACED,KAAMM,OAAOC,SAASP,KACtBQ,YAAa,SAACC,GAAD,OArBO,SAACA,GACvB7H,QAAQC,IAAI,cACZD,QAAQC,IAAI4H,EAAE7K,QACd,IAAM8K,EAAUD,EAAE7K,OAClBgD,QAAQC,IAAI6H,EAAQV,MACpB,IAAMW,EAAM,IAAIC,MAChBD,EAAIpI,IAAMsI,KAEVJ,EAAEK,aAAaC,aAAaJ,EATlB,OAWVF,EAAEK,aAAaE,QAAQ,gBAAiBN,EAAQV,MAW1BiB,CAAgBR,IACpCS,UAAW,SAACT,GAAD,OARO,SAACA,GACrB7H,QAAQC,IAAI,OACZ4H,EAAE7K,OAAOuL,OAMWC,CAAcX,IAChCrI,QAAS,SAACqI,GAAD,OAAOA,EAAEY,kBAClBC,IAAKnB,GAEL,mBAAK1H,MAAO,CAAE8I,MAAO,OAAQC,YAAa,QAAUjJ,IAAKsI,OAP3D,sB,MCzCG,SAASY,GAAS5P,GAAiC,IAApB6P,EAAmB,uDAAJ,GAAI,EAC7BC,mBAAiBD,GADY,mBAChDjM,EADgD,KACzCmM,EADyC,KAEjDlG,EAAUC,cACV4E,EAAWsB,cAEjBC,qBAAU,WACR,IACMC,EADS,IAAIzO,gBAAgBiN,EAASlN,QAChB+H,IAAIvJ,GAC5BkQ,IAAiBtM,GACnBmM,EAASG,GAAgBL,KAE1B,CAAC7P,EAAK6P,EAAcnB,EAAU9K,IAEjC,IAAMuM,EAAW,SAACC,GAChB,IAAM/E,EAAS,IAAI5J,gBAAgBiN,EAASlN,QAC5C6J,EAAOgF,IAAIrQ,EAAKoQ,GAChB,IAAM5O,EAAS,IAAM6J,EAAO3J,WAC5BmI,EAAQ1G,KAAK,CACXvB,SAAU8M,EAAS9M,SACnBJ,YAIJ,MAAO,CAACoC,EAAOuM,GCtBV,SAASG,GAAYC,GAAgB,MAGNT,oBAAS,GAHH,mBAGnCU,EAHmC,KAGvBC,EAHuB,KAqC1C,OA9BAR,qBAAU,WAGR,SAASS,EAAT,GAAmC,EAAZ1Q,MACTuQ,GACVE,GAAc,GAMlB,IAAME,EAAY,SAAC,GAAiB,EAAf3Q,MACPuQ,GACVE,GAAc,IAUlB,OANAhC,OAAOjR,iBAAiB,UAAWkT,GAEnCjC,OAAOjR,iBAAiB,QAASmT,GAI1B,WACLlC,OAAOmC,oBAAoB,UAAWF,GAEtCjC,OAAOmC,oBAAoB,QAASD,MAErC,CAACJ,IAEGC,ECrCF,SAASK,GAAkBpB,EAAUqB,GAC1Cb,qBACE,WACE,IAAMc,EAAW,SAACC,GAGXvB,EAAIwB,UAAWxB,EAAIwB,QAAQC,SAASF,EAAMjN,SAI/C+M,EAAQE,IAOV,OAJAG,SAAS3T,iBAAiB,YAAauT,GAEvCI,SAAS3T,iBAAiB,aAAcuT,GAEjC,WACLI,SAASP,oBAAoB,YAAaG,GAE1CI,SAASP,oBAAoB,aAAcG,MAgB/C,CAACtB,EAAKqB,I,yaCnCH,IAAMM,GAGR,SAAC,GAAyB,IAAvBxN,EAAsB,EAAtBA,MAAOyN,EAAe,EAAfA,SAAe,EACJ9C,IAAMuB,UAAS,GADX,mBACrBwB,EADqB,KACfC,EADe,KAEtBjD,EAAaE,iBAAO,MAE1BqC,GAAkBvC,GAAY,WACxBgD,GACFC,GAAQ,MASZ,OACE,mBACE9B,IAAKnB,EACLnI,IAAKA,YAAF,KAMmBvC,GAEtB2C,QAhBY,WACT+K,GACHC,GAAQ,KAgBPD,GACC,mBACEnL,IAAKA,YAAF,OAMH,YAAC,KAAD,CAAcd,MAAOzB,EAAOyN,SAAU,SAAChM,GAAD,OAAWgM,EAAShM,EAAMmM,W,i6BCtC1E,IAAMC,GAAiBvN,IAAOG,IAAV,MAQdqN,GAAaxN,IAAOG,IAAV,MAeHsN,GAAgD,SAAC7N,GAAW,IAC/D8N,EAAkG9N,EAAlG8N,WAAYC,EAAsF/N,EAAtF+N,UAAWC,EAA2EhO,EAA3EgO,eAAgBC,EAA2DjO,EAA3DiO,YAAaC,EAA8ClO,EAA9CkO,WAAYC,EAAkCnO,EAAlCmO,gBAAiBC,EAAiBpO,EAAjBoO,aADnB,EAEpCtC,GAASkC,EAAgBC,GAFW,mBAE/DtG,EAF+D,KAEpD0G,EAFoD,OAGlCvC,GAASqC,EAAiBC,GAHQ,mBAG/DxG,EAH+D,KAGnD0G,EAHmD,KAKtE,OACE,uBACE,mBACEjM,IAAKA,YAAF,OAOFyL,GAEH,mBACEzL,IAAKA,YAAF,OAMH,YAACsL,GAAD,CACEtL,IAAKA,YAAF,OAIH,YAACuL,GAAD,KAAaG,GACb,uBACE,YAAC,GAAD,CAAajO,MAAO6H,EAAW4F,SAAUc,MAG7C,YAACV,GAAD,CACEtL,IAAKA,YAAF,OAIH,uBACE,YAAC,GAAD,CAAavC,MAAO8H,EAAY2F,SAAUe,KAE5C,YAACV,GAAD,KAAaM,O,ogEC3DvB,IAAMK,GAAUnO,IAAOG,IAAV,MAMPiO,GAASpO,IAAOG,IAAV,MAMNkO,GAAUrO,IAAOsO,GAAV,MAuBPC,GAAQvO,IAAOG,IAAV,MAiCEqO,GAAoB,WAAO,IAAD,EACbnE,IAAMuB,UAAS,GADF,mBAC9B6C,EAD8B,KACxBC,EADwB,KAE/BC,EAAWtE,IAAMC,OAAO,MAE9BqC,GAAkBgC,GAAU,WACtBF,GACFC,GAAQ,MAYZ,OACE,YAACH,GAAD,CAAOnM,UAAWqM,EAAO,OAAS,SAAUlD,IAAKoD,EAAUtM,QATzC,WACboM,GACHC,GAAQ,KAQR,mBAAKtM,UAAU,eAAeC,QAJb,kBAAMqM,GAAQ,KAI/B,UAGA,YAACL,GAAD,gBACA,YAACF,GAAD,KACE,YAACC,GAAD,KACE,YAAC,GAAD,CACEV,WAAW,eACXC,UAAU,OACVG,WAAW,QACXD,YAAatJ,GAAUI,GACvBiJ,eAAe,YACfG,gBAAgB,aAChBC,aAAczJ,GAAUK,MAG5B,YAACwJ,GAAD,KACE,mBACEnM,IAAKA,YAAF,OAIH,YAAC,GAAD,OAEF,mBACEA,IAAKA,YAAF,OADL,qBAcoB,YAAC,EAAD,CAAGgI,KAAK,gCAAR,cAGtB,YAACmE,GAAD,KACE,YAAC,GAAD,CACEV,WAAW,cACXC,UAAU,UACVG,WAAW,YACXD,YAAajM,EAAaC,aAC1B+L,eAAe,eACfG,gBAAgB,iBAChBC,aAAcpM,EAAaE,qB,8gBCrIvC,IAAM8M,GAAmB,CAAC,KAAM,KAezB,IAAMC,GAA0C,SAACjP,GAAW,IACzDkP,EAAwClP,EAAxCkP,WAAYC,EAA4BnP,EAA5BmP,UAAWC,EAAiBpP,EAAjBoP,MAAOC,EAAUrP,EAAVqP,MAD0B,EAEhDvD,GAASoD,GAAlB3N,EAFyD,sBAGjDuK,GAASqD,GAAjBG,EAHyD,oBAI1DC,EAAyB,SAAVH,EAAmB,QAAU,OAC5CI,EhBZD,SAA8BC,EAAYnO,EAA8BC,GAC7E,IAAMQ,EAASV,EAAyBC,EAAaC,GACrD,MAAM,GAAN,OAAUQ,EAAV,eAAuB0N,EAAvB,QgBUeC,CAAqBH,EAAQD,EAAM/N,GAC5CoO,EAnBR,SAAsBJ,EAAcD,EAAcM,GAChD,MAAe,SAAXL,EACKK,EAILZ,GAAiBa,SAASP,GACrB,QAGFM,EASWE,CAAaP,EAAQD,EAAMF,GAC7C,OACE,mBACE/M,IAAKA,YAAF,KAIoDgN,EAM1BG,EAGEG,M,mOCnD9B,IAAMI,GAAQ3P,IAAOG,IAAV,MAMP,SAACqF,GAAD,OAAOA,EAAErE,SACE,SAACqE,GAAD,OAAOA,EAAEC,mBAK3B,SAACD,GAAD,OACAA,EAAEoK,UAAF,uBAESpK,EAAE4H,KAAO,EAAI,EAFtB,wFCFSyC,I,OAAwC,SAACjQ,GAAW,IACvDiB,EAA+BjB,EAA/BiB,KAAMiP,EAAyBlQ,EAAzBkQ,UAAWC,EAAcnQ,EAAdmQ,UADqC,EAEpBnE,oBAAS,GAFW,mBAEvDoE,EAFuD,KAExCC,EAFwC,OAG1BrE,mBAAS/K,GAHiB,mBAGvDqP,EAHuD,KAG3CC,EAH2C,KAKxD/F,EAAaE,iBAAO,MACpB8F,EAAU9F,iBAAO,MACjB+F,EAAW/F,iBAAyB,MAEpCgG,EAAMlE,GAAY,OAClBmE,EAAQnE,GAAY,SACpBoE,EAAMpE,GAAY,UAoCxB,OAlCAL,qBAAU,WACRoE,EAActP,KACb,CAACA,IAGJ8L,GAAkBvC,GAAY,WACxB4F,IACFF,EAAUI,GACVD,GAAiB,OAKrBlE,qBAAU,WACJiE,GAAiBK,EAAStD,SAC5BsD,EAAStD,QAAQ0D,UAElB,CAACT,IAEJjE,qBAAU,WACJiE,KAEEO,GAASD,KACXR,EAAUI,GACVD,GAAiB,IAGfO,IACFL,EAAcvQ,EAAMiB,MACpBoP,GAAiB,OAGpB,CAACK,EAAKC,EAAOC,EAAKR,EAAeF,EAAWI,EAAYtQ,EAAMiB,OAG/D,0BAAMuB,UAAU,cAAcmJ,IAAKnB,GACjC,0BACEmB,IAAK6E,EACL/N,QAAS,kBAAM4N,GAAiB,IAChC7N,UAAS,6CAAyC4N,EAA2B,SAAX,WAEjEpQ,EAAMiB,MAET,2BACE0K,IAAK8E,EACL3N,MAAO,CAAEqN,YAAWW,SAAU,QAC9BhR,MAAOwQ,EACP/C,SAAU,SAACzC,GACTyF,EAAczF,EAAE7K,OAAOH,QAEzB0C,UAAS,+CAA0C4N,EAAgB,SAAW,eAMtFH,GAAWc,aAAe,CACxB9P,KAAM,GAENiP,UAAW,cCrEN,IAAMc,GAAsC,SAAC,GAAyD,IAAvDhB,EAAsD,EAAtDA,SAAUiB,EAA4C,EAA5CA,OAAQpL,EAAoC,EAApCA,gBAAiB/F,EAAmB,EAAnBA,MAAOyB,EAAY,EAAZA,MACxF2P,EAAQD,EAAS,YAAC,GAAD,CAAYhQ,KAAMnB,EAAOoQ,UAAWe,IAAanR,EACxE,OACE,YAACiQ,GAAD,CAAOC,SAAUA,EAAUxC,KAAMrO,QAAQW,GAAQyB,MAAOA,EAAOsE,gBAAiBA,GAC7EqL,I,oSCZP,IAAMC,GAAO/Q,IAAOG,IAAV,MAKJ6Q,GAAWhR,IAAOG,IAAV,MAkBD8Q,GAAsC,SAAC,GAM7C,IALLC,EAKI,EALJA,UACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,cACAvP,EAEI,EAFJA,aACAC,EACI,EADJA,eACI,EACoB4J,GAASwF,EAAWC,GADxC,mBACGpZ,EADH,KACSsZ,EADT,OAEkB3F,GAAS0F,GAF3B,mBAEGE,EAFH,KAEQC,EAFR,KAGJ,OACE,uBACE,YAACR,GAAD,KACE,YAAC,GAAD,CAAWrR,MAAO3H,EAAM8Y,OAAQQ,EAASlQ,MAAM,QAAQsE,gBAAiB5D,KAE1E,YAACmP,GAAD,KACE,YAAC,GAAD,CAAWtR,MAAO4R,EAAK1B,UAAU,EAAMiB,OAAQU,EAAQpQ,MAAOW,EAAgB2D,gBAAgB,a,2IClCtG,IAAM+L,GAAcxR,YAAO2P,GAAP3P,CAAH,MAMJyR,GAAwC,SAAC7R,GAAW,IAAD,EACpC8L,GAAS,QAAS,SADkB,mBACvD/P,EADuD,KAChD+V,EADgD,KAE9D,OACE,YAACF,GAAD,CAAarQ,MAAM,QAAQsE,gBAAiB7F,EAAMiC,cAChD,YAAC,GAAD,CAAYhB,KAAMlF,EAAOmU,UAAW4B,M,ukBChB1C,IAAMnD,GAAQvO,IAAOG,IAAV,MAKkC,SAACqF,GAAD,OAAQA,EAAEmM,UAAY,MAAQ,SAMrEC,GAAgB5R,IAAOG,IAAV,MAab0R,GAAY7R,YAAO4R,GAAP5R,CAAH,MAOX,SAACwF,GACD,IAAMsM,EAAc,IAAMtM,EAAEuM,SAC5B,MAAM,WAAN,OACe,UAAXvM,EAAE6J,KAAF,6BAA2C7J,EAAEuM,SAA7C,mCAAgFD,EAAhF,YAAwG,GAD5G,mBAEItM,EAAEwM,IAAM,2BAA6B,GAFzC,mBAGIxM,EAAEC,gBAAF,6DAA0ED,EAAEC,gBAA5E,aAAyG,GAH7G,8CAKaD,EAAEuM,SALf,8CAM6BvM,EAAEyM,SAN/B,iDAO+BzM,EAAE6J,KAPjC,sBAQiB,UAAX7J,EAAE6J,KAAF,gBAA8ByC,EAA9B,MAAgD,yBARtD,sBA0BSI,GAAwC,SAAC,GAU/C,IATLpX,EASI,EATJA,MACAC,EAQI,EARJA,OACAoX,EAOI,EAPJA,QACAnX,EAMI,EANJA,MACAC,EAKI,EALJA,OACAmX,EAII,EAJJA,QACA7K,EAGI,EAHJA,UACAC,EAEI,EAFJA,WACAmK,EACI,EADJA,UAGMU,EAAK3Q,EAAqB5G,EAAOC,GACjCuX,EAAK5Q,EAAqB1G,EAAOC,GAEvC,OACE,YAAC,GAAD,CAAO0W,UAAWA,GAChB,YAACE,GAAD,CAAWpM,gBAAiB8B,EAAW0K,SAAUI,EAAIN,SANxC,GAM4D1C,KAAK,OAAO2C,IAAiB,UAAZG,IAC1F,YAACN,GAAD,CACEpM,gBAAiB+B,EACjByK,SAAUK,EACVP,SAVW,GAWX1C,KAAK,QACL2C,IAAiB,UAAZI,M,mvBC5Eb,IAAMG,GAAOvS,IAAOwS,KAAV,MAOJjE,GAAQvO,IAAOG,IAAV,MAU+B,SAACqF,GAAD,OAAQA,EAAEmM,UAAY,MAAQ,SAU3C,SAACnM,GAAD,OAAOA,EAAEhD,OASzBiQ,GAAwC,SAAC,GAAsC,IAApCtP,EAAmC,EAAnCA,QAASE,EAA0B,EAA1BA,SAAUsO,EAAgB,EAAhBA,UACnEe,EvBfD,SAAsBvP,GAC3B,IAAMH,EAAYC,SAAUC,cAAcC,GAC1C,MAAM,GAAN,OAAU5B,IAAV,0BAAkDyB,EAAlD,QuBakB2P,CAAaxP,GAC/B,OACE,YAAC,GAAD,CAAOX,IAAKkQ,EAAWf,UAAWA,GAChC,YAACY,GAAD,KAAOlP,K,2PC/BN,IAAMuP,GAAwC,SAAChT,GAAW,IACvDuD,EAA+BvD,EAA/BuD,QAASE,EAAsBzD,EAAtByD,SAAawP,EADgC,aACvBjT,EADuB,wBAE9D,OACE,mBACEqC,IAAKA,YAAF,OASH,YAAC,GAAe4Q,GAChB,YAAC,GAAD,CAAY1P,QAASA,EAASE,SAAUA,EAAUsO,UAAW/R,EAAM+R,c,yNC7BzE,IAAMmB,GAKD,SAAC,GAAmD,IAAjD7N,EAAgD,EAAhDA,MAAOsC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,WAAYuL,EAAkB,EAAlBA,YAAkB,EACnCrH,GAAS,IAAD,OAAKzG,IAAzB+N,EAD+C,oBAGtD,IAAKA,EACH,OAAO,KAJ6C,MAMgBA,EAASC,MAAM,KAN/B,mBAM/C9P,EAN+C,KAMtCE,EANsC,KAM5BvI,EAN4B,KAMrBC,EANqB,KAMbmY,EANa,KAMPlY,EANO,KAMAC,EANA,KAMQkY,EANR,KAOhDC,EAAsB,WAATF,EAAoB,OAAkB,WAATC,EAAoB,QAAU,GAC9E,OACE,YAAC,GAAD,CACExB,UAAWoB,IAAgBK,EAC3BjQ,QAASA,EACTE,SAAUA,EACVvI,MAAOA,EACPC,OAAQA,EACRoX,QAASe,EACTlY,MAAOA,EACPC,OAAQA,EACRmX,QAASe,EACT5L,UAAWA,EACXC,WAAYA,KAKL6L,GAIR,SAACzT,GAKJ,IALe,IAAD,EACD8L,GAAS,MAAfrQ,EADO,oBAERiY,EAAQC,SAASlY,EAAI,KAAO,EAE5B4L,EAAQ,GACLpN,EAAI,EAAGA,GAAKyZ,EAAOzZ,IAC1BoN,EAAMhI,KACJ,YAAC,GAAD,CACEnD,IAAG,WAAMjC,GACToL,MAAOpL,EACP0N,UAAW3H,EAAM2H,UACjBC,WAAY5H,EAAM4H,WAClBuL,YAAanT,EAAMmT,eAKzB,OACE,mBACE9Q,IAAKA,YAAF,KAG+BqR,IAIjCrM,I,8oCChDP,IAAMuM,GAAYxT,IAAOG,IAAV,MAKO,SAACqF,GAAD,OAAOA,EAAEiO,mBACpB,SAACjO,GAAD,OAAOA,EAAEkO,cASdC,GAAc3T,IAAOG,IAAV,MAKF,SAACqF,GAAD,MAAmB,SAAXA,EAAErH,KAAkB,QAAU,WAG/CyV,GAAY5T,IAAOG,IAAV,MAoBF0T,GAA4B,SAACjU,GAAW,IAC3CzB,EAAkEyB,EAAlEzB,KAAM2V,EAA4DlU,EAA5DkU,MAAOC,EAAqDnU,EAArDmU,SAAUC,EAA2CpU,EAA3CoU,UAAWP,EAAgC7T,EAAhC6T,gBAAiBC,EAAe9T,EAAf8T,WAC3D,OACE,YAACE,GAAD,KACE,YAACD,GAAD,CACExV,KAAMA,EACN8D,IAAKA,YAAF,OAIH,YAAC,GAAD,CAAYpB,KAAMkT,EAAUjE,UAAWlQ,EAAMqU,kBAE/C,YAACT,GAAD,CAAWC,gBAAiBA,EAAkBC,WAAYA,GACvDI,GAEH,YAACH,GAAD,CACExV,KAAMA,EACN8D,IAAKA,YAAF,OAKH,YAAC,GAAD,CAAYpB,KAAMmT,EAAWjE,UAAU,QAAQD,UAAWlQ,EAAMsU,qBAMxEL,GAAKlD,aAAe,CAClBxS,KAAM,SACNuV,WAAY,QACZD,gBAAiB,QAEjBQ,eAAgB,aAEhBC,gBAAiB,cChFnB,IAAMC,GAA8C,SAACvU,GAAW,IACtDwU,EAA8DxU,EAA9DwU,OAAQC,EAAsDzU,EAAtDyU,OAAQP,EAA8ClU,EAA9CkU,MAAO3V,EAAuCyB,EAAvCzB,KAAM0D,EAAiCjC,EAAjCiC,aAAcC,EAAmBlC,EAAnBkC,eAC7C6J,EAAwB,WAATxN,EAAoB,IAAM,IAFc,EAGjCuN,GAAS0I,EAAQzI,GAHgB,mBAGtD2I,EAHsD,KAG9CC,EAH8C,OAIjC7I,GAAS2I,EAAQ1I,GAJgB,mBAItD6I,EAJsD,KAI9CC,EAJ8C,KAKvDf,EAAsB,WAATvV,EAAoB2D,EAAiB,QAClD2R,EAA2B,WAATtV,EAAoB,QAAU0D,EACtD,OACE,kBAAC,GAAD,CACE1D,KAAMA,EACN4V,SAAUO,EACVL,eAAgB,SAACpT,GAAD,OAAU0T,EAAU1T,IACpCiT,MAAOA,EACPE,UAAWQ,EACXN,gBAAiB,SAACrT,GAAD,OAAU4T,EAAU5T,IACrC6S,WAAYA,EACZD,gBAAiBA,KAKvBU,GAAcxD,aAAe,CAC3BxS,KAAM,UAGD,IAAMuW,GAA2C,SAAC9U,GACvD,OAAO,kBAAC,GAAD,eAAezB,KAAK,OAAOiW,OAAO,QAAQC,OAAO,QAAQP,MAAM,yBAA4BlU,KAGvF+U,GAAgD,SAAC/U,GAC5D,OAAO,kBAAC,GAAD,eAAezB,KAAK,OAAOiW,OAAO,QAAQC,OAAO,QAAQP,MAAM,8BAAiClU,KAG5FgV,GAA2C,SAAChV,GACvD,OAAO,kBAAC,GAAD,eAAewU,OAAO,OAAOC,OAAO,OAAOP,MAAM,wBAA2BlU,KAGxEiV,GAAoC,SAACjV,GAChD,OAAO,kBAAC,GAAD,eAAewU,OAAO,MAAMC,OAAO,MAAMP,MAAM,gBAAmBlU,KAW9DkV,GAAwC,SAAClV,GACpD,OAAO,kBAAC,GAAD,eAAewU,OAAO,OAAOC,OAAO,OAAOP,MAAM,mBAAsBlU,KAGnEmV,GAAwC,SAACnV,GACpD,OAAO,kBAAC,GAAD,eAAewU,OAAO,OAAOC,OAAO,OAAOP,MAAM,qBAAwBlU,K,8kBCpDlF,IAAMoV,GAAUhV,IAAOG,IAAV,MASA8U,GAKR,SAACrV,GAAW,IAAD,EACQ8L,GAAS,UAAxBqH,EADO,oBAENxL,EAAoC3H,EAApC2H,UAAWC,EAAyB5H,EAAzB4H,WAAeyH,EAFpB,aAE8BrP,EAF9B,4BAGd,OACE,mBACEqC,IAAKA,YAAF,KACuCrC,EAAMkC,eAAgClC,EAAMkC,iBAItF,mBACEG,IAAKA,YAAF,OAOH,YAAC,GAAuBgN,GACxB,YAAC,GAA4BA,GAC7B,YAAC+F,GAAD,MACA,YAAC,GAAoB/F,GACrB,YAAC,GAAoBA,GACrB,YAAC,GAAuBA,GACxB,YAAC,GAAgBA,GACjB,YAAC+F,GAAD,MACA,YAAC,GAAD,CAAajC,YAAaA,EAAaxL,UAAWA,EAAWC,WAAYA,O,0wCC7CjF,IAAM+G,GAAQvO,IAAOG,IAAV,MAOE+U,GAAiC,SAACjG,GAAW,IAAD,EACnCvD,GAAS,YAAanH,GAAUI,IAA7C4C,EADgD,sBAElCmE,GAAS,aAAcnH,GAAUK,IAA/C4C,EAFgD,oBAGvD,OACE,YAAC,GAAD,KACE,mBACEvF,IAAKA,YAAF,OAKH,YAAC,GAAD,CAAagN,MAAO1H,EAAWwH,UAAU,QAAQD,WAAW,SAASE,MAAM,WAE7E,YAAC,GAAD,eAAazH,UAAWA,EAAWC,WAAYA,GAAgByH,IAC/D,mBACEhN,IAAKA,YAAF,OAIH,YAAC,GAAD,CAAagN,MAAOzH,EAAYuH,UAAU,QAAQD,WAAW,SAASE,MAAM,UAE9E,mBACE/M,IAAKA,YAAF,OAQH,mBACEA,IAAKA,YAAF,OAOH,mBACEA,IAAKA,YAAF,OAIH,YAAC,GAAD,eAAWiP,UAAU,QAAQE,cAAc,OAAOD,YAAY,UAAalC,KAE7E,mBACEhN,IAAKA,YAAF,OAIH,YAAC,GAAD,eAAWiP,UAAU,QAAQE,cAAc,OAAOD,YAAY,UAAalC,OAIjF,mBACEhN,IAAKA,YAAF,OAQH,YAAC,GAAD,CAAYJ,aAAcoN,EAAMpN,kB,m0BCtEjC,IAAMsT,GAAuB,WAAO,IAAD,EACjBzJ,GAAS,eAAgB9J,EAAaC,cAAtDA,EADiC,sBAEf6J,GAAS,iBAAkB9J,EAAaE,gBAA1DA,EAFiC,oBAGxC,OACE,mBACEG,IAAKA,YAAF,OAYH,YAAC,EAAD,CAAaJ,aAAcA,EAAcC,eAAgBA,IACzD,YAAC,IAAD,CAAMrE,GAAG,IAAI6E,MAAM,QACjB,YAACvC,EAAD,0BAEF,mBACEkC,IAAKA,YAAF,OAIH,YAAC,EAAD,CAAGgI,KAAK,qBACN,mBACEmL,IAAI,oBACJ9S,MAAM,0BACNE,IAAK6S,KACLpT,IAAKA,YAAF,UAMT,YAAC,GAAD,CAAeJ,aAAcA,EAAcC,eAAgBA,IAC3D,mBACEM,UAAU,WACVH,IAAKA,YAAF,OAWH,YAAC,GAAD,SC3COqT,kBAZO,WACpB,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAQC,SAAS,KACf,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW1L,KACjC,kBAAC,IAAD,CAAOyL,KAAK,UAAUC,UAAWP,KACjC,kBAAC,IAAD,CAAOM,KAAK,UAAUC,UAAWrY,SCHrB0B,QACW,cAA7BwL,OAAOC,SAASmL,UAEe,UAA7BpL,OAAOC,SAASmL,UAEhBpL,OAAOC,SAASmL,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEF9I,SAAS+I,eAAe,SD+HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7P,MAAK,SAAA8P,GACJA,EAAaC,gBAEdC,OAAM,SAAAzX,GACLgE,QAAQhE,MAAMA,EAAM0X,a,8JE3I8CC,EAAQ,IAAlEvT,E,EAARwT,OAA0Bza,E,EAAP0a,MAA6Bna,E,EAAZoa,WACtCC,EAASJ,EAAQ,IACjBK,EAAIL,EAAQ,IAEZle,EAAQ,CACZwe,kBAAmB,kBACnBC,mBAAoB,mBACpBC,aAAc,cACdC,WAAY,YACZC,qBAAsB,qBACtBC,YAAa,aACbC,YAAa,aACbC,eAAgB,gBAChBC,kBAAmB,kBACnBC,iBAAkB,iBAClBC,qBAAsB,qBACtBC,YAAa,cAGTC,GAAiB,mBACpBpf,EAAMwe,kBAAoB,CACzB3O,GAAI7P,EAAMwe,kBACV/e,KAAM,kBACNoG,KAAM,SACNwZ,gBAAiB,QACjBC,oBAAqB,EACrBC,UAAW,SAAC5Q,EAAOhD,GACjB,OAAO6T,EAAoB7Q,EAAOhD,EAAa,kBAAmB,MARjD,cAWpB3L,EAAMye,mBAAqB,CAC1B5O,GAAI7P,EAAMye,mBACVhf,KAAM,mBACNoG,KAAM,SACNwZ,gBAAiB,SACjBC,oBAAqB,EACrBC,UAAW,SAAC5Q,EAAOhD,GACjB,OAAO6T,EAAoB7Q,EAAOhD,EAAa,mBAAoB,MAlBlD,cAqBpB3L,EAAM0e,aAAe,CACpB7O,GAAI7P,EAAM0e,aACVjf,KAAM,eACNoG,KAAM,SACNwZ,gBAAiB,SACjBC,oBAAqB,EACrBC,UAAW,SAAC5Q,EAAOhD,GACjB,OAAO6T,EAAoB7Q,EAAOhD,EAAa,kBAAmB,EAAG,YA5BpD,cA+BpB3L,EAAM2e,WAAa,CAClB9O,GAAI7P,EAAM2e,WACVlf,KAAM,wBACNoG,KAAM,OACN0Z,UAAW,SAAC5Q,EAAOhD,GACjB,IAAM8T,EAAYlB,EAAEmB,QAAQ/Q,GAAO,SAACjP,GAClC,IAAMigB,EAAcpB,EAAExR,IAAIrN,EAAM,CAAC,QAAS,iBAAmB,GACvDkgB,EAAuBrB,EAAE1X,OAAO8Y,GAAa,SAACE,GAClD,IAAMC,EAAcD,EAAWlU,cAAgBA,EACzCoU,EAAUF,EAAWE,QAC3B,OAAOD,GAAeC,KAGxB,OAAOxB,EAAElT,IAAIuU,GAAsB,SAACC,GAClC,OAAOtB,EAAEyB,KAAKH,EAAWzB,aAIvB6B,EAAkB1B,EAAE2B,QAAQT,EAAW,UACvCU,EAAiB5B,EAAElT,IAAI4U,GAAiB,SAAC7B,GAC7C,IAAM3a,EAAO8a,EAAE6B,MAAMhC,GACrB,MAAO,CACLtN,MAAOsN,EAAM9c,OACbuO,GAAIpM,EAAK4c,OACT5gB,KAAMiE,EAAS4c,YAAY7c,EAAK4c,QAChCxP,UAAWnN,EAASC,iBAAiBF,EAAK4c,YAIxCE,EAAwBhC,EAAEiC,QAAQL,EAAgB,CAAC,SAAU,CAAC,SAC9DM,EAAclC,EAAE6B,MAAMG,GACxBG,EAAa,MAKjB,OAJID,IACFC,EAAU,UAAMD,EAAY5P,UAAlB,aAAgC4P,EAAY3P,MAA5C,MAGL,CACL1P,OAAQmf,EACRnQ,OAAQ,CACN7H,KAAMmY,OAtEO,cA2EpB1gB,EAAM4e,qBAAuB,CAC5B/O,GAAI7P,EAAM4e,qBACVnf,KAAM,6BACNoG,KAAM,OACN0Z,UAAW,SAAC5Q,EAAOhD,GACjB,IAAMgV,EAAepC,EAAEmB,QAAQ/Q,GAAO,SAACjP,GACrC,IAAMigB,EAAcpB,EAAExR,IAAIrN,EAAM,CAAC,QAAS,iBAAmB,GACvDkgB,EAAuBrB,EAAE1X,OAAO8Y,GAAa,SAACE,GAClD,IAAMC,EAAcD,EAAWlU,cAAgBA,EACzCiV,EAA0C,gBAA3Bf,EAAWgB,YAChC,OAAOf,GAAec,KAGxB,OAAOrC,EAAElT,IAAIuU,GAAsB,SAACC,GAClC,OAAOtB,EAAE6B,MAAMP,EAAWzB,aAMxB0C,EAAqBvC,EAAE2B,QAAQS,EAAc,UAC7CI,EAAoBxC,EAAElT,IAAIyV,GAAoB,SAAC1C,GACnD,IAAM3a,EAAO8a,EAAE6B,MAAMhC,GACrB,MAAO,CACLtN,MAAOsN,EAAM9c,OACbuO,GAAIpM,EAAK4c,OACT5gB,KAAMiE,EAAS4c,YAAY7c,EAAK4c,QAChCxP,UAAWnN,EAASC,iBAAiBF,EAAK4c,YAIxCW,EAA2BzC,EAAEiC,QAAQO,EAAmB,CAAC,SAAU,CAAC,SACpEE,EAAiB1C,EAAE6B,MAAMY,GAC3BN,EAAa,MAKjB,OAJIO,IACFP,EAAU,UAAMO,EAAepQ,UAArB,aAAmCoQ,EAAenQ,MAAlD,MAGL,CACL1P,OAAQ4f,EACR5Q,OAAQ,CACN7H,KAAMmY,OApHO,cAyHpB1gB,EAAM6e,YAAc,CACnBhP,GAAI7P,EAAM6e,YACVpf,KAAM,gBACNoG,KAAM,SACNwZ,gBAAiB,QACjBC,oBAAqB,EACrBC,UAAW,SAAC5Q,EAAOhD,GACjB,IAAMuV,EAAY3C,EAAEmB,QAAQ/Q,GAAO,SAACjP,GAClC,IAAMyhB,EAAS5C,EAAExR,IAAIrN,EAAM,CAAC,QAAS,YAAc,GACnD,OAAO6e,EAAE1X,OAAOsa,GAAQ,SAACC,GACvB,IAAMC,EAAQD,EAAMzV,cAAgBA,EAC9B2V,EAAqC,OAArBF,EAAMG,WAC5B,OAAOF,GAASC,QAIdE,EAAmBjD,EAAEiC,QAAQU,EAAW,CAAC,cAAe,CAAC,QACzDO,EAAoBlD,EAAE6B,MAAMoB,GAC5BpR,EAAS,CACb7H,KAAM,MACNmZ,OAAQ,MAQV,OALID,IACFrR,EAAOsR,OAASD,EAAkBF,WAClCnR,EAAO7H,KAAO6H,EAAOsR,OAAO5d,QAAQ,IAG/B,CACL1C,OAAQmd,EAAEoD,KAAKH,EAAkB,GACjCpR,OAAQA,MAvJO,cA2JpBpQ,EAAM8e,YAAc,CACnBjP,GAAI7P,EAAM8e,YACVrf,KAAM,eACNoG,KAAM,SACNwZ,gBAAiB,SACjBC,oBAAqB,EACrBC,UAAW,SAAC5Q,EAAOhD,GACjB,IAAMiW,EAAerD,EAAEmB,QAAQ/Q,GAAO,SAACjP,GACrC,IAAMyhB,EAAS5C,EAAExR,IAAIrN,EAAM,CAAC,QAAS,YAAc,GACnD,OAAO6e,EAAE1X,OAAOsa,GAAQ,SAACC,GACvB,IAAMS,EAAWT,EAAMzV,cAAgBA,EACjC2V,EAAqC,OAArBF,EAAMG,WAC5B,OAAOM,GAAYP,QAIjBQ,EAAsBvD,EAAEiC,QAAQoB,EAAc,CAAC,cAAe,CAAC,SAC/DG,EAAmBxD,EAAE6B,MAAM0B,GAC3B1R,EAAS,CACb7H,KAAM,MACNmZ,OAAQ,MAQV,OALIK,IACF3R,EAAOsR,OAASK,EAAiBR,WACjCnR,EAAO7H,KAAO6H,EAAOsR,OAAO5d,QAAQ,IAG/B,CACL1C,OAAQmd,EAAEoD,KAAKG,EAAqB,GACpC1R,OAAQA,MAzLO,cA6LpBpQ,EAAM+e,eAAiB,CACtBlP,GAAI7P,EAAM+e,eACVtf,KAAM,uBACNoG,KAAM,SACNwZ,gBAAiB,QACjBC,oBAAqB,EACrBC,UAAW,SAAC5Q,EAAOhD,GACjB,IAAMqW,EAAWzD,EAAElT,IAAIsD,GAAO,SAACjP,GAC7B,IAAMyhB,EAAS5C,EAAExR,IAAIrN,EAAM,CAAC,QAAS,YAAc,GAC7CuiB,EAAoB1D,EAAE1X,OAAOsa,GAAQ,SAACC,GAC1C,IAAMS,EAAWT,EAAMzV,cAAgBA,EACjC2V,EAAqC,OAArBF,EAAMG,WAC5B,OAAOM,GAAYP,KAGf3B,EAAcpB,EAAExR,IAAIrN,EAAM,CAAC,QAAS,iBAAmB,GACvDwiB,EAAqB3D,EAAE1X,OAAO8Y,GAAa,SAACE,GAChD,IAAMwB,EAAQxB,EAAWlU,cAAgBA,EACnCoU,EAAUF,EAAWE,QAC3B,OAAOsB,GAAStB,KAGlB,OAAOkC,EAAkB3gB,OAAS4gB,EAAmB5gB,UAGjD6gB,EAAQ5D,EAAE6D,IAAIJ,GAEpB,MAAO,CACL5gB,OAAQ+gB,EACR/R,OAAQ,CACNsR,OAAQS,EACR5Z,KAAK,GAAD,OAAK4Z,QA5NI,cAiOpBniB,EAAMgf,kBAAoB,CACzBnP,GAAI7P,EAAMgf,kBACVvf,KAAM,kBACNoG,KAAM,SACNwZ,gBAAiB,SACjBC,oBAAqB,EACrBC,UAAW,SAAC5Q,EAAOhD,GACjB,OAAO6T,EAAoB7Q,EAAOhD,EAAa,kBAAmB,MAxOjD,cA2OpB3L,EAAMif,iBAAmB,CACxBpP,GAAI7P,EAAMif,iBACVxf,KAAM,uBACNoG,KAAM,SACNwZ,gBAAiB,QACjBC,oBAAqB,EACrBC,UAAW,SAAC5Q,EAAOhD,GACjB,IAAMuV,EAAY3C,EAAEmB,QAAQ/Q,GAAO,SAACjP,GAClC,IAAMyhB,EAAS5C,EAAExR,IAAIrN,EAAM,CAAC,QAAS,YAAc,GACnD,OAAO6e,EAAE1X,OAAOsa,GAAQ,SAACC,GACvB,IAAMC,EAAQD,EAAMzV,cAAgBA,EAC9B2V,EAAqC,OAArBF,EAAMG,WAC5B,OAAOF,GAASC,QAIdlgB,EAAS,CACb4Z,MAAOkG,EAAU5f,OACjBwP,MAAOyN,EAAE8D,MAAMnB,EAAW,eAAiB,GAK7C,OAFA9f,EAAOkhB,MAAQlhB,EAAO4Z,MAAQ5Z,EAAO0P,MAAQ1P,EAAO4Z,MAAQ,KAErD,CACL5Z,OAAQA,EACRgP,OAAQmS,EAAmBnhB,EAAQ,OApQpB,cAwQpBpB,EAAMkf,qBAAuB,CAC5BrP,GAAI7P,EAAMkf,qBACVzf,KAAM,wBACNoG,KAAM,SACNwZ,gBAAiB,SACjBC,oBAAqB,EACrBC,UAAW,SAAC5Q,EAAOhD,GACjB,IAAM6W,EAAWjE,EAAEmB,QAAQ/Q,GAAO,SAACjP,GACjC,IAAMigB,EAAcpB,EAAExR,IAAIrN,EAAM,CAAC,QAAS,iBAAmB,GAC7D,OAAO6e,EAAE1X,OAAO8Y,GAAa,SAACE,GAC5B,IAAMC,EAAcD,EAAWlU,cAAgBA,EACzC2V,EAA0C,OAA1BzB,EAAW0B,WACjC,OAAOzB,GAAewB,QAIpBmB,EAAgB,SAACC,GAAD,OAAYA,EAAOnB,WAAamB,EAAOC,cACvDC,EAAkBrE,EAAEiC,QAAQgC,EAAU,CAACC,GAAgB,QACvDI,EAAYtE,EAAE6B,MAAMwC,GACpBxS,EAAS,CACb7H,KAAM,MACNmZ,OAAQ,MAQV,OALImB,IACFzS,EAAOsR,OAASe,EAAcI,GAC9BzS,EAAO7H,KAAO6H,EAAOsR,OAAO5d,QAAQ,IAG/B,CACL1C,OAAQmd,EAAEoD,KAAKiB,EAAiB,GAChCxS,OAAQA,MAvSO,cA2SpBpQ,EAAMmf,YAAc,CACnBtP,GAAI7P,EAAMmf,YACV1f,KAAM,oBACNoG,KAAM,SACNwZ,gBAAiB,SACjBC,oBAAqB,EACrBC,UAAW,SAAC5Q,EAAOhD,GACjB,OAAO6T,EAAoB7Q,EAAOhD,EAAa,mBAAoB,EAAG,YAlTrD,GAuTvB,SAAS6T,EAAoB7Q,EAAOhD,EAAamX,EAAOC,GAA2B,IAAjBld,EAAgB,uDAAT,QACjEmd,EAAazE,EAAElT,IAAIsD,GAAO,SAACjP,GAC/B,IAAMujB,EAAe1E,EAAExR,IAAIrN,EAAM,CAAC,QAAS,YAG3C,OAF6B6e,EAAE2E,MAAMD,EAAc,eACAtX,GACtBmX,MAGzBK,EAAMC,EAAcJ,GACpB5S,EAASmS,EAAmBY,EAAKJ,EAAUld,GAEjD,MAAO,CACLzE,OAAQ+hB,EACR/S,OAAQA,GAIZ,SAASgT,EAAcC,GACrB,IAAMjiB,EAAS,GAMf,OAJAA,EAAO0P,MAAQyN,EAAE8D,MAAMgB,EAAQ,UAAY,EAC3CjiB,EAAO4Z,MAAQuD,EAAE8D,MAAMgB,EAAQ,UAAY,EAC3CjiB,EAAOkhB,MAAQlhB,EAAO4Z,MAAQ5Z,EAAO0P,MAAQ1P,EAAO4Z,MAAQ,KAErD5Z,EAGT,SAASmhB,EAAmBD,EAAOS,GAA2B,IAAjBld,EAAgB,uDAAT,QAC5CzE,EAAS,GAEf,OAAQyE,GACN,IAAK,QACHzE,EAAOsgB,OAASY,EAAMA,MACtBlhB,EAAOmH,KAAuB,OAAhB+Z,EAAMA,MAAiBA,EAAMA,MAAMxe,QAAQif,GAAY,MACrE,MACF,IAAK,QACH3hB,EAAOsgB,OAASY,EAAMxR,MACtB1P,EAAOmH,KAAO+Z,EAAMxR,MAAMhN,QAAQif,GAItC,OAAO3hB,EA6BF,SAASoN,EAAYG,GAE1B,IAAM2U,EAAmB/E,EAAE2B,QAAQvR,GAAO,SAACjP,GAEzC,OAA2B,IADHA,EAAKE,SAASkL,QAAQxJ,UAI1CiiB,EAAkBhF,EAAExR,IAAIuW,GAAkB,IAAU,GACtD/E,EAAEiF,KAAKD,KACThZ,QAAQC,IAAI,8EACZ+T,EAAEhb,QAAQggB,GAAiB,SAAC7jB,GAC1B6K,QAAQC,IAAI9K,EAAKC,aAEnB4K,QAAQC,OAGV,IAAMiZ,EAAelF,EAAExR,IAAIuW,GAAkB,IAAS,GAChDI,EAAenF,EAAEoF,MAAMF,GAC1BvD,SAAQ,SAACxgB,GACR,IAAMkkB,EAAQrF,EAAElT,IAAI3L,EAAKE,SAASkL,QAAS,QAC3C,OAAOyT,EAAEnb,KAAKwgB,EAAO,QAEtBpD,QAAQ,CAAC,UAAW,CAAC,SACrBpZ,QAEGyc,EAAqBH,EAAaI,QACxC,GAAIvF,EAAEiF,KAAKE,GAAe,CACxBnZ,QAAQC,IAAI,2EACZ,IAAMuZ,EAAYxF,EAAEyF,QAAQN,GAC5BnF,EAAEhb,QAAQwgB,GAAW,SAACrkB,GACpB6K,QAAQC,IAAI9K,EAAKC,aAEnB4K,QAAQC,MAGV,GAAI+T,EAAE0F,QAAQJ,GACZ,MAAM,IAAIpV,MAAM,0DAKlB,OAFAlE,QAAQC,IAAR,oBAAyBqZ,EAAmBviB,OAA5C,mCAEOuiB,EAGT,SAASK,EAAavV,GACpB,IAAMwV,EAAY5F,EAAE6B,MAAMzR,GAEpByV,EAAe7F,EAAElT,IAAI8Y,EAAUvkB,SAASkL,QAAS,eAEjDuZ,EAAU,CAACD,EADO7F,EAAEoF,MAAMS,GAAcE,QAAQC,UAAUnd,SAsBhE,OAnBoBmX,EAAEmB,QAAQ1f,GAAO,SAACwkB,GACpC,IAAMC,EAAMrF,EAAkBoF,GAC9B,IAAKC,EAAIlF,UACP,MAAO,GAGT,IAAMpP,EAAUoO,EAAElT,IAAIgZ,GAAS,SAACK,GAC9B,IAAMtjB,EAASqjB,EAAIlF,UAAU5Q,EAAO+V,EAAS,GAAIA,EAAS,IAE1D,OADAtjB,EAAO4K,KAAO0Y,EAAS,GAAK,EACrBtjB,KAGHujB,EAAM,eAAQF,GAIpB,cAHOE,EAAOpF,UACdoF,EAAOxU,QAAUA,EAEV,CAACwU,MAMZ,SAASC,EAAiBjW,GACxB,IACMkW,EAAetG,EAAEiC,QAAQ7R,EAAO,CADnB,SAACjP,GAAD,OAAUA,EAAKQ,SAAS4kB,UACS,CAAC,QAmC/CC,EAAqB,SAACrlB,GAAD,OAAU,SAACmM,GAAY,IAAD,EAE/C,OAAO,EAAP,CACEG,KAAMH,EAAOG,KACbpD,YAAaiD,EAAOjD,YACpBmD,eAAgBF,EAAOE,eACvBc,QAAShB,EAAOgB,QAChBmY,cAAe/gB,EAAckF,iBAAiB0C,EAAOjD,cALvD,+BAMkB3E,EAAc6H,sBAAsBD,EAAOjD,YAAaiD,EAAOE,iBANjF,2BAnCyB,SAACrM,EAAMiM,GAGhC,IAAMrL,EAAUZ,EAAKY,QACrB,IAAKA,EACH,MAAO,UAGT,IAAMwK,EAAUyT,EAAExR,IAAIrN,EAAKE,SAAU,CAAC,YAChCqlB,EAAM1G,EAAE1X,OAAOiE,GAAS,SAACe,GAAD,OAAYA,EAAOF,cAAgBA,KAC3DuZ,EAAW3G,EAAExR,IAAIkY,EAAK,CAAC,EAAG,gBAEhC,OAAQ3kB,EAAQ6kB,eACd,KAAK,EAEH,MAAO,UACT,KAAK,EAEH,IAAM/kB,EAAcme,EAAExR,IAAIrN,EAAKU,YAAa,YAAc,GACpDwhB,EAAerD,EAAExR,IAAI3M,EAAa,CAACuL,EAAa,OAAQ,oBACxDuV,EAAY3C,EAAExR,IAAI3M,EAAa,CAAC8kB,EAAU,OAAQ,oBACxD,OAAqB,IAAjBtD,GAAoC,IAAdV,EACjB,UAGe,IAAjBU,EAAqB,QAAU,SACxC,KAAK,EACH,OAAOthB,EAAQ8kB,qBAAuBzZ,EAAc,QAAU,SAGlE,MAAO,UAYO0Z,CAAmB3lB,EAAMmM,EAAOF,cAP9C,IAWF,OAAO4S,EAAElT,IAAIwZ,GAAc,SAACnlB,GAC1B,IAAM4lB,EAAgBP,EAAmBrlB,GAEzC,MAAO,CACLkQ,MAAO,CACLC,GAAInQ,EAAKE,SAASiL,QAClBpL,KAAMkL,EAAUC,aAAalL,EAAKE,SAASiL,UAE7CC,QAASyT,EAAElT,IAAI3L,EAAKE,SAASkL,QAASwa,GACtC3X,UAAWjO,EAAKQ,SAAS4kB,QACzB/Z,SAAUC,EAAkCtL,EAAKM,MAAMyK,eAK7D,SAAS8a,EAAmB3W,GAC1B,IAAM4W,EAAa,CAACxlB,EAAM2e,WAAY3e,EAAM4e,qBAAsB5e,EAAMwe,kBAAmBxe,EAAMmf,aAI3FsG,EAAsB,SAACC,GAC3B,IAAM7f,EAAO6f,EAAe7f,KAEtB8e,EAAM,eAAQe,GAGpB,OAFAf,EAAOxU,QAAUoO,EAAElT,IAAIqa,EAAevV,SAAS,SAAC/O,GAAD,OAAYmd,EAAExR,IAAI3L,EAAQ,CAAC,SAAUyE,OAE7E8e,GAGHvjB,EAAS,GAETukB,EAAYpH,EAAE2E,MAAMtU,EAAS,MAC7BgX,EAAuBD,EAG7BpH,EAAEhb,QAAQiiB,GAAY,SAACK,GACrB,IAAMC,EAAaH,EAAUE,GAC7BzkB,EAAOuF,KAAK8e,EAAoBK,WAEzBF,EAAqBC,MAI9B,IAAME,EAASJ,EAAU3lB,EAAM+e,gBACzBiH,EAAOD,EAAO5V,QAAQ,GAAGC,OAAOsR,OAChCuE,EAAOF,EAAO5V,QAAQ,GAAGC,OAAOsR,OACbsE,EAAO,GAAKC,EAAO,UAEnCL,EAAqB5lB,EAAM+e,gBAGpC,IAAMmH,EAAW3H,EAAE4H,QAAQP,GACrBQ,EAAoB7H,EAAEoD,KAAKuE,EAlCV,GAuCvB,OAJA3H,EAAEhb,QAAQ6iB,GAAmB,SAACN,GAC5B1kB,EAAOuF,KAAK8e,EAAoBK,OAG3B1kB,EAGF,SAAS4J,EAAkCqb,GAChD,IAAMtb,EAAWuT,EAAOvT,SAASsb,EAAa,GAAI,WAClD,OAAO/H,EAAOgI,IAAIvb,EAASwb,GAAG,iBAAiBC,OAAO,QAGzC,SAASC,EAAe9X,GACrC,IAAM3O,EAAQkkB,EAAavV,GAE3B,MAAO,CACLA,MAAOiW,EAAiBjW,GACxBC,QAAS5O,EACT0mB,WAAYnB,EAAmBvlB,O","file":"static/js/main.5f5f97e4.chunk.js","sourcesContent":["import {\n  FrameEntryType,\n  FramesType,\n  GameEndType,\n  GameStartType,\n  MetadataType,\n  SlippiGame,\n  StatsType,\n} from \"@slippi/slippi-js\";\n\nimport generateStats from \"./stats\";\n\nexport interface GameDetails {\n  filePath: string;\n  settings: GameStartType;\n  frames: FramesType;\n  stats: StatsType;\n  metadata: MetadataType;\n  latestFrame: FrameEntryType | null;\n  gameEnd: GameEndType | null;\n}\n\nexport async function generateStatsOutput(files: File[]) {\n  const games = await readFilesAsSlippiGameDetails(files);\n  console.log(games);\n  const output = generateStats(games);\n  console.log(output);\n  return output;\n}\n\nexport async function readFileAsSlippiGame(file: File): Promise<SlippiGame> {\n  const data = (await readFileAsArrayBuffer(file)) as ArrayBuffer;\n  const arr = new Int8Array(data);\n  const buf = Buffer.from(arr);\n  return new SlippiGame(buf);\n}\n\nexport async function readFileAsGameDetails(file: File): Promise<GameDetails> {\n  const game = await readFileAsSlippiGame(file);\n  return generateGameDetails(file.name, game);\n}\n\nexport function generateGameDetails(name: string, game: SlippiGame): GameDetails {\n  return {\n    filePath: name,\n    settings: game.getSettings(),\n    frames: game.getFrames(),\n    stats: game.getStats(),\n    metadata: game.getMetadata(),\n    latestFrame: game.getLatestFrame(),\n    gameEnd: game.getGameEnd(),\n  };\n}\n\nexport async function readFilesAsSlippiGameDetails(files: File[]): Promise<GameDetails[]> {\n  const promises = files.map(async (f) => {\n    console.log(\"checking file: \", f);\n    const data = (await readFileAsArrayBuffer(f)) as ArrayBuffer;\n    const arr = new Int8Array(data);\n    const buf = Buffer.from(arr);\n    const game = new SlippiGame(buf);\n    // console.log(game.getStats());\n    return {\n      filePath: f.name,\n      settings: game.getSettings(),\n      frames: game.getFrames(),\n      stats: game.getStats(),\n      metadata: game.getMetadata(),\n      latestFrame: game.getLatestFrame(),\n      gameEnd: game.getGameEnd(),\n    };\n  });\n  return Promise.all(promises);\n}\n\nexport async function readFileAsArrayBuffer(file: File): Promise<string | ArrayBufferLike> {\n  return new Promise((resolve, reject) => {\n    const fr = new FileReader();\n    fr.onabort = () => reject(\"file reading was aborted\");\n    fr.onerror = () => reject(\"file reading has failed\");\n    if (fr.readAsBinaryString) {\n      fr.addEventListener(\n        \"load\",\n        function () {\n          const string = (this as any).resultString != null ? (this as any).resultString : this.result;\n          const result = new Uint8Array(string.length);\n          for (let i = 0; i < string.length; i++) {\n            result[i] = string.charCodeAt(i);\n          }\n          resolve(result.buffer);\n        },\n        false\n      );\n      fr.readAsBinaryString(file);\n    } else {\n      fr.addEventListener(\n        \"load\",\n        function () {\n          if (this.result) {\n            resolve(this.result);\n          } else {\n            reject(\"no data read\");\n          }\n        },\n        false\n      );\n      fr.readAsArrayBuffer(file);\n    }\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/obs.f3f8c219.png\";","module.exports = __webpack_public_path__ + \"static/media/powered-by.61867ea8.png\";","import { characters as characterUtil, moves as moveUtil } from \"@slippi/slippi-js\";\n\n/*\n * Random functions are taken from: https://stackoverflow.com/questions/1527803/generating-random-whole-numbers-in-javascript-in-a-specific-range\n */\n\n/**\n * Returns a random number between min (inclusive) and max (exclusive)\n */\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\n/**\n * Returns a random integer between min (inclusive) and max (inclusive).\n * The value is no lower than min (or the next integer greater than min\n * if min isn't an integer) and no greater than max (or the next integer\n * lower than max if max isn't an integer).\n * Using Math.round() will give you a non-uniform distribution!\n */\nfunction getRandomInt(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function generateDemoQuery(): Record<string, any> {\n  const paramMap: Record<string, any> = {};\n\n  // Set names\n  paramMap.name1 = \"FOLLOW\";\n  paramMap.name2 = \"ON\";\n  paramMap.sub1 = \"@_vinceau\";\n  paramMap.sub2 = \"TWITTER\";\n\n  // Set colors\n  const [char1, color1] = generateRandomCharacter();\n  const [char2, color2] = generateRandomCharacter();\n  paramMap.char1 = char1;\n  paramMap.color1 = color1;\n  paramMap.char2 = char2;\n  paramMap.color2 = color2;\n\n  // Track game wins\n  let leftWins = 0;\n  let rightWins = 0;\n\n  // Random games\n  const totalGames = getRandomInt(3, 5);\n  paramMap.gt = totalGames;\n  for (let i = 1; i <= totalGames; i++) {\n    const gameKey = `g${i}`;\n    const leftWillWin = Math.random() < 0.5;\n    const leftPlayerInfo = [char1, color1, leftWillWin ? \"winner\" : \"loser\"].join(\",\");\n    const rightPlayerInfo = [char2, color2, leftWillWin ? \"loser\" : \"winner\"].join(\",\");\n    const gameValue = generateRandomGame([leftPlayerInfo, rightPlayerInfo]);\n    paramMap[gameKey] = gameValue;\n\n    if (leftWillWin) {\n      leftWins += 1;\n    } else {\n      rightWins += 1;\n    }\n  }\n\n  // Set score\n  paramMap.score = `${leftWins} - ${rightWins}`;\n  // Set winner\n  if (leftWins !== rightWins) {\n    paramMap.winner = leftWins > rightWins ? \"left\" : \"right\";\n  }\n\n  // Random moves\n  [\"mckm1\", \"mckm2\", \"mcno1\", \"mcno2\"].forEach((key) => {\n    paramMap[key] = generateRandomMove();\n  });\n\n  // Random openings per kill\n  [\"opk1\", \"opk2\"].forEach((key) => {\n    paramMap[key] = getRandomArbitrary(5, 15).toFixed(1);\n  });\n\n  // Total damage done\n  [\"tdd1\", \"tdd2\"].forEach((key) => {\n    paramMap[key] = getRandomArbitrary(1000, 2000).toFixed(1);\n  });\n\n  // Average kill percent\n  [\"akp1\", \"akp2\"].forEach((key) => {\n    paramMap[key] = getRandomArbitrary(50, 200).toFixed(1);\n  });\n\n  // Neutral wins\n  [\"nw1\", \"nw2\"].forEach((key) => {\n    paramMap[key] = getRandomInt(30, 80);\n  });\n\n  return paramMap;\n}\n\nfunction generateRandomMove(): string {\n  const move = getRandomInt(7, 21);\n  const name = moveUtil.getMoveShortName(move).toUpperCase();\n  return `${name} - ${move}`;\n}\n\nfunction generateRandomCharacter() {\n  const charId = getRandomInt(0, 25);\n  const charInfo = characterUtil.getCharacterInfo(charId);\n  const colorIndex = getRandomInt(0, charInfo.colors.length - 1);\n  const color = charInfo.colors[colorIndex];\n  return [charId, color] as const;\n}\n\nconst LEGAL_STAGE_IDS = [2, 3, 8, 28, 31, 32];\n\nfunction generateRandomStageId(): number {\n  const stageIndex = getRandomInt(0, LEGAL_STAGE_IDS.length - 1);\n  return LEGAL_STAGE_IDS[stageIndex];\n}\n\nfunction generateRandomDuration(): string {\n  const mins = getRandomInt(0, 7);\n  const secs = String(getRandomInt(0, 60)).padStart(2, \"0\");\n  return `${mins}:${secs}`;\n}\n\nfunction generateRandomGame(playerInfos: string[]): string {\n  const stageId = generateRandomStageId();\n  const gameDuration = generateRandomDuration();\n  const gameValue = [stageId, gameDuration, ...playerInfos].join(\",\");\n  return gameValue;\n}\n","import { generateDemoQuery } from \"lib/demo\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nexport const RandomView: React.FC = () => {\n  const paramMap = generateDemoQuery();\n  const search = \"?\" + new URLSearchParams(paramMap).toString();\n  return (\n    <Redirect\n      to={{\n        pathname: \"/render\",\n        search,\n      }}\n    />\n  );\n};\n","import SlippiGame from \"@slippi/slippi-js\";\nimport { GameDetails } from \"lib/readFile\";\n\nimport { InitialStateType } from \"./types\";\n\ntype ActionMap<M extends { [index: string]: any }> = {\n  [Key in keyof M]: M[Key] extends undefined\n    ? {\n        type: Key;\n      }\n    : {\n        type: Key;\n        payload: M[Key];\n      };\n};\n\nexport enum Types {\n  ADD_GAME = \"ADD_GAME\",\n  SET_ERROR = \"SET_ERROR\",\n  ADD_FILE = \"ADD_FILE\",\n  REMOVE_FILE = \"REMOVE_FILE\",\n  CLEAR_ALL = \"CLEAR_ALL\",\n}\n\ntype ActionPayload = {\n  [Types.ADD_GAME]: {\n    filename: string;\n    game: SlippiGame;\n    details: GameDetails;\n  };\n  [Types.SET_ERROR]: {\n    filename: string;\n    error: any;\n  };\n  [Types.ADD_FILE]: {\n    filename: string;\n  };\n  [Types.REMOVE_FILE]: {\n    filename: string;\n  };\n  [Types.CLEAR_ALL]: never;\n};\n\nexport type ReducerActions = ActionMap<ActionPayload>[keyof ActionMap<ActionPayload>];\n\nexport const reducer = (state: InitialStateType, action: ReducerActions) => {\n  switch (action.type) {\n    case Types.ADD_GAME: {\n      const { filename, details } = action.payload;\n      const files = state.files;\n      const fileToReplace = files.findIndex((f) => f.filename === filename);\n      if (fileToReplace !== -1) {\n        files[fileToReplace].details = details;\n        files[fileToReplace].loading = false;\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.SET_ERROR: {\n      const { filename, error } = action.payload;\n      const files = state.files;\n      const fileToReplace = files.findIndex((f) => f.filename === filename);\n      if (fileToReplace !== -1) {\n        files[fileToReplace].error = error;\n        files[fileToReplace].loading = false;\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.ADD_FILE: {\n      const { filename } = action.payload;\n      const files = state.files;\n      const alreadyExists = Boolean(files.find((f) => f.filename === filename));\n      if (!alreadyExists) {\n        files.push({\n          filename,\n          loading: true,\n          details: null,\n        });\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.REMOVE_FILE: {\n      const { filename } = action.payload;\n      const files = state.files.filter((f) => f.filename !== filename);\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.CLEAR_ALL: {\n      return {\n        ...state,\n        files: [],\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import React, { createContext, Dispatch, useReducer } from \"react\";\n\nimport { reducer, ReducerActions } from \"./reducers\";\nimport { InitialStateType } from \"./types\";\n\nconst initialState: InitialStateType = {\n  files: [],\n};\n\nconst AppContext = createContext<{\n  state: InitialStateType;\n  dispatch: Dispatch<ReducerActions>;\n}>({\n  state: initialState,\n  dispatch: () => null,\n});\n\nconst mainReducer = (state: InitialStateType, action: ReducerActions) => reducer(state, action);\n\nconst AppProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(mainReducer, initialState);\n\n  return <AppContext.Provider value={{ state, dispatch }}>{children}</AppContext.Provider>;\n};\n\nexport { AppProvider, AppContext };\n","import React from \"react\";\n\nexport const ExternalLink: React.FC<React.HTMLProps<HTMLAnchorElement>> = (props) => {\n  return (\n    <a target=\"_blank\" rel=\"noopener noreferrer\" {...props}>\n      {props.children}\n    </a>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const Header = styled.h1`\n  text-transform: uppercase;\n  font-weight: 800;\n  font-size: 5.5rem;\n  margin: 2rem;\n  padding-bottom: 1rem;\n  position: relative;\n  text-align: center;\n\n  &::before {\n    z-index: -1;\n    content: \"\";\n    display: block;\n    background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.2), transparent);\n    height: 0.1rem;\n    position: absolute;\n    width: 80%;\n    margin-left: 50%;\n    transform: translateX(-50%);\n    bottom: 0;\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { DropzoneOptions, useDropzone } from \"react-dropzone\";\n\nconst getColor = (props: any) => {\n  if (props.isDragAccept) {\n    return \"#00e676\";\n  }\n  if (props.isDragActive) {\n    return \"#2196f3\";\n  }\n  return \"#eeeeee\";\n};\n\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-width: 2px;\n  border-color: ${(props) => getColor(props)};\n  border-style: dashed;\n  background-color: rgba(0, 0, 0, 0.3);\n  color: white;\n  outline: none;\n  transition: border 0.24s ease-in-out;\n  p {\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n`;\n\nexport const DropPad: React.FC<Partial<DropzoneOptions>> = (props) => {\n  const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone(props);\n\n  return (\n    <Container {...getRootProps({ isDragActive, isDragAccept, isDragReject })}>\n      <input {...getInputProps()} />\n      <p>Drag SLP files here or click to select</p>\n    </Container>\n  );\n};\n","import { characters as characterUtil, stages as stageUtil } from \"@slippi/slippi-js\";\n\nexport type Side = \"left\" | \"right\";\n\nfunction sanitize(text: string, replacement = \"-\"): string {\n  return text.toLowerCase().replace(/[. &]+/gi, replacement);\n}\n\nfunction getCharacterFolderFromId(characterId: string | number, color?: string) {\n  const characterName = characterUtil.getCharacterName(+characterId);\n  return getCharacterFolderFromName(characterName, color);\n}\n\nfunction getCharacterFolderFromName(character: string, color = \"Default\") {\n  const charFolder = sanitize(character);\n  const colorFolder = sanitize(color);\n  return `${process.env.PUBLIC_URL}/images/characters/${charFolder}/${colorFolder}`;\n}\n\nexport function getCharacterPortrait(characterId: string | number, color?: string): string {\n  const folder = getCharacterFolderFromId(characterId, color);\n  return `${folder}/portrait.png`;\n}\n\nexport function getCharacterVSScreen(side: Side, characterId: string | number, color?: string): string {\n  const folder = getCharacterFolderFromId(characterId, color);\n  return `${folder}/vs-${side}.png`;\n}\n\nexport function getCharacterStockIcon(characterId: string | number, color?: string): string {\n  const folder = getCharacterFolderFromId(characterId, color);\n  return `${folder}/stock.png`;\n}\n\nexport function getStageIcon(stageId: string | number): string {\n  const stageName = stageUtil.getStageName(+stageId);\n  return `${process.env.PUBLIC_URL}/images/stages/${stageName}.png`;\n}\n","/** @jsx jsx */\nimport { css, Global, jsx } from \"@emotion/core\";\n\nexport interface Theme {\n  primaryColor: string;\n  secondaryColor: string;\n}\n\nexport const defaultTheme: Theme = {\n  primaryColor: \"#286163\",\n  secondaryColor: \"#121020\",\n};\n\nexport const GlobalTheme: React.FC<Theme> = ({ primaryColor, secondaryColor }) => {\n  return (\n    <Global\n      styles={css`\n        body.themed {\n          background: radial-gradient(circle at center -30%, ${primaryColor}, ${secondaryColor});\n        }\n      `}\n    />\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { characters as characterUtil, stages as stageUtil } from \"@slippi/slippi-js\";\nimport { getCharacterStockIcon } from \"lib/resources\";\nimport { convertFrameCountToDurationString } from \"lib/stats\";\nimport { findWinner } from \"lib/winner\";\nimport React from \"react\";\nimport { ProcessedFile } from \"store/types\";\nimport { defaultTheme } from \"styles/theme\";\n\nconst BasicFileItem: React.FC<{ name: string; onRemove?: () => void }> = (props) => {\n  const { onRemove, name, children } = props;\n  return (\n    <div\n      css={css`\n        padding: 1.5rem 2rem;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        color: rgba(255, 255, 255, 0.8);\n        background-color: rgba(0, 0, 0, 0.3);\n        opacity: 0.8;\n        transition: opacity 0.2s ease-in-out;\n        &:hover {\n          opacity: 1;\n          .remove-button {\n            opacity: 1;\n          }\n        }\n        .remove-button {\n          opacity: 0;\n          transition: opacity 0.2s ease-in-out;\n          background: white;\n          color: ${defaultTheme.secondaryColor};\n          border: none;\n          font-weight: bold;\n          font-size: 2.5rem;\n          cursor: pointer;\n          padding: 0.2rem 1rem;\n          margin: 0;\n        }\n      `}\n    >\n      <div\n        css={css`\n          flex: 1;\n        `}\n      >\n        <div\n          css={css`\n            font-size: 1.6rem;\n            font-weight: bold;\n            margin-bottom: 1rem;\n            font-family: monospace;\n          `}\n        >\n          {name}\n        </div>\n        <div>{children}</div>\n      </div>\n      {onRemove && (\n        <button className=\"remove-button\" onClick={onRemove} title=\"Remove\">\n          ✕\n        </button>\n      )}\n    </div>\n  );\n};\n\nconst CharacterIcon: React.FC<{\n  charId: string | number;\n  color: string;\n  winner?: boolean;\n}> = ({ charId, color, winner }) => {\n  const src = getCharacterStockIcon(charId, color);\n  return (\n    <div\n      css={css`\n        position: relative;\n        display: inline-block;\n        margin-top: 0.5rem;\n        ${winner &&\n        `&::after {\n          position: absolute;\n          content: \" \";\n          height: 0.7rem;\n          width: 60%;\n          background-color: #ffa700;\n          left: 20%;\n          bottom: 110%;\n          clip-path: polygon(50% 0%, 75% 35%, 100% 0, 100% 100%, 0 100%, 0 0, 25% 35%);\n        }\n      `}\n      `}\n    >\n      <img src={src} style={{ height: \"3rem\" }} />\n    </div>\n  );\n};\n\nexport interface FileItemProps {\n  file: ProcessedFile;\n  onRemove: () => void;\n}\n\nexport const FileItem: React.FC<FileItemProps> = (props) => {\n  const { file, onRemove } = props;\n  const { filename, loading, error, details } = file;\n  if (loading) {\n    return <BasicFileItem name={filename}> loading...</BasicFileItem>;\n  }\n  if (error || !details) {\n    return (\n      <BasicFileItem onRemove={onRemove} name={filename}>\n        error :c\n      </BasicFileItem>\n    );\n  }\n\n  console.log(details);\n  const stageName = stageUtil.getStageName(details.settings.stageId as number);\n  const players = details.settings.players;\n  const duration = details.latestFrame ? convertFrameCountToDurationString(details.latestFrame.frame) : \"N/A\";\n  const winnerIndex = details.latestFrame ? findWinner(details.latestFrame) : null;\n  const icons = players.map((player) => {\n    const winner = player.playerIndex === winnerIndex;\n    const charId = player.characterId as number;\n    const color = characterUtil.getCharacterColorName(charId, player.characterColor as number);\n    return <CharacterIcon key={`${player.port}-icon`} charId={charId} color={color} winner={winner} />;\n  });\n  return (\n    <BasicFileItem onRemove={onRemove} name={filename}>\n      <div\n        css={css`\n          display: grid;\n          justify-items: center;\n          align-items: center;\n          grid-template-columns: repeat(3, 1fr);\n          font-weight: bold;\n        `}\n      >\n        <div>{stageName}</div>\n        <div\n          css={css`\n            display: grid;\n            grid-auto-flow: column;\n            grid-column-gap: 1rem;\n          `}\n        >\n          {icons}\n        </div>\n        <div>{duration}</div>\n      </div>\n    </BasicFileItem>\n  );\n};\n","import { FrameEntryType } from \"@slippi/slippi-js\";\n\n/**\n * Given the last frame of the game, determine the winner first based on stock count\n * then based on remaining percent.\n * If percents are tied, return null;\n *\n * @returns the player index of the winner\n */\nexport const findWinner = (lastFrame: FrameEntryType): number | null => {\n  const postFrameEntries = Object.keys(lastFrame.players).map((i: any) => (lastFrame.players[i] as any).post);\n  const winnerPostFrame = postFrameEntries.reduce((a, b) => {\n    // Determine winner based on stock count\n    if (a.stocksRemaining > b.stocksRemaining) {\n      return a;\n    }\n    if (a.stocksRemaining < b.stocksRemaining) {\n      return b;\n    }\n\n    // Stocks are the same so determine winner based off remaining percent\n    if (a.percent < b.percent) {\n      return a;\n    }\n    if (a.percent > b.percent) {\n      return b;\n    }\n\n    // Just return null if no winner\n    return null;\n  });\n\n  return winnerPostFrame.playerIndex;\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport { ProcessedFile } from \"store/types\";\n\nimport { FileItem } from \"./FileItem\";\n\nexport interface FileListProps {\n  files: ProcessedFile[];\n  onRemove: (filename: string) => void;\n}\n\nexport const FileList: React.FC<FileListProps> = (props) => {\n  const { files, onRemove } = props;\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-template-columns: 100%;\n        grid-row-gap: 1rem;\n        max-height: 500px;\n        overflow-y: auto;\n      `}\n    >\n      {files.map((f) => (\n        <FileItem key={f.filename} file={f} onRemove={() => onRemove(f.filename)} />\n      ))}\n    </div>\n  );\n};\n","export enum PortColor {\n  P1 = \"#f52e2e\",\n  P2 = \"#5463ff\",\n  P3 = \"#ffc717\",\n  P4 = \"#1f9e40\",\n}\n\nexport function getPortColor(portNumber: number): string {\n  switch (portNumber) {\n    case 1:\n      return PortColor.P1;\n    case 2:\n      return PortColor.P2;\n    case 3:\n      return PortColor.P3;\n    case 4:\n      return PortColor.P4;\n    default:\n      return PortColor.P1;\n  }\n}\n","import generateStats, { filterGames } from \"lib/stats\";\nimport { get } from \"lodash\";\n\nimport { getPortColor } from \"./portColor\";\nimport { GameDetails } from \"./readFile\";\n\nconst extractNameAndCode = (playerPort: number, details: GameDetails) => {\n  const settings = details.settings;\n  const metadata = details.metadata;\n  const index = playerPort - 1;\n  const player = settings.players.find((player) => player.playerIndex === index);\n  const playerTag = player ? player.nametag : null;\n  const netplayName: string | null = get(metadata, [\"players\", index, \"names\", \"netplay\"], null);\n  const netplayCode: string | null = get(metadata, [\"players\", index, \"names\", \"code\"], null);\n  const name = playerTag || netplayName || \"\";\n  return [name, netplayCode || \"\"] as const;\n};\n\nexport function processStats(gameDetails: GameDetails[]): URLSearchParams {\n  const filtered = filterGames(gameDetails);\n  if (!filtered || filtered.length === 0) {\n    throw new Error(\"No valid games\");\n  }\n\n  const { games, summary } = generateStats(filtered);\n  const params: any = {}; // \"mckm1\": , \"mckm2\", \"mcno1\", \"mcno2\", \"opk1\", \"opk2\", \"tdd1\", \"tdd2\", \"dpo1\", \"dpo2\", \"ipm1\", \"ipm2\", \"akp1\", \"akp2\", \"nw1\", \"nw2\"};\n\n  // Set character info\n  const lastGame = games[games.length - 1];\n  const leftPlayer = lastGame.players[0];\n  const rightPlayer = lastGame.players[1];\n  params.leftColor = getPortColor(leftPlayer.port);\n  params.rightColor = getPortColor(rightPlayer.port);\n\n  params.char1 = leftPlayer.characterId;\n  params.char2 = rightPlayer.characterId;\n  params.color1 = leftPlayer.characterColor;\n  params.color2 = rightPlayer.characterColor;\n\n  // Set name tags\n  const lastGameDetails = filtered[filtered.length - 1];\n  const [leftTag, leftCode] = extractNameAndCode(leftPlayer.port, lastGameDetails);\n  const [rightTag, rightCode] = extractNameAndCode(rightPlayer.port, lastGameDetails);\n  params.name1 = leftTag.toUpperCase();\n  params.name2 = rightTag.toUpperCase();\n  params.sub1 = leftCode;\n  params.sub2 = rightCode;\n\n  // Set game info\n  params.gt = games.length; // Set the total number of games\n\n  // Track game wins\n  let leftWins = 0;\n  let rightWins = 0;\n\n  (games as any[]).forEach((game, i) => {\n    console.log(\"processing game: \", game);\n    const gameKey = `g${i + 1}`;\n    const stageId: number = game.stage.id;\n    const gameDuration: string = game.duration;\n    const playerInfo = game.players.map((p: any) => [p.characterId, p.characterColor, p.gameResult].join(\",\"));\n    const gameValue = [stageId, gameDuration, ...playerInfo].join(\",\");\n    console.log(`${gameKey} : ${gameValue}`);\n    params[gameKey] = gameValue;\n\n    // Increment win counts\n    if (game.players[0].gameResult === \"winner\") {\n      leftWins += 1;\n    } else if (game.players[1].gameResult === \"winner\") {\n      rightWins += 1;\n    }\n  });\n\n  params.score = `${leftWins} - ${rightWins}`;\n  if (leftWins !== rightWins) {\n    params.winner = leftWins > rightWins ? \"left\" : \"right\";\n  }\n\n  // Set the stat values\n  (summary as any[]).forEach((s) => {\n    switch (s.id) {\n      case \"openingsPerKill\": {\n        params.opk1 = s.results[0].simple.text;\n        params.opk2 = s.results[1].simple.text;\n        break;\n      }\n      case \"damagePerOpening\": {\n        params.dpo1 = s.results[0].simple.text;\n        params.dpo2 = s.results[1].simple.text;\n        break;\n      }\n      case \"neutralWins\": {\n        params.nw1 = s.results[0].simple.text;\n        params.nw2 = s.results[1].simple.text;\n        break;\n      }\n      case \"killMoves\": {\n        console.log(s);\n        const playerRes = s.results[0].result[0];\n        const opponentRes = s.results[1].result[0];\n        params.mckm1 = `${playerRes.shortName.toUpperCase()} - ${playerRes.count}`;\n        params.mckm2 = `${opponentRes.shortName.toUpperCase()} - ${opponentRes.count}`;\n        break;\n      }\n      case \"neutralOpenerMoves\": {\n        const playerRes = s.results[0].result[0];\n        const opponentRes = s.results[1].result[0];\n        params.mcno1 = `${playerRes.shortName.toUpperCase()} - ${playerRes.count}`;\n        params.mcno2 = `${opponentRes.shortName.toUpperCase()} - ${opponentRes.count}`;\n        break;\n      }\n      case \"inputsPerMinute\": {\n        params.ipm1 = s.results[0].simple.text;\n        params.ipm2 = s.results[1].simple.text;\n        break;\n      }\n      case \"avgKillPercent\": {\n        params.akp1 = s.results[0].simple.text;\n        params.akp2 = s.results[1].simple.text;\n        break;\n      }\n      case \"damageDone\": {\n        params.tdd1 = s.results[0].simple.text;\n        params.tdd2 = s.results[1].simple.text;\n        break;\n      }\n    }\n  });\n\n  console.log(\"returning these params: \", params);\n  return new URLSearchParams(params);\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { DropPad } from \"components/DropPad\";\nimport { FileList } from \"components/FileList\";\nimport { processStats } from \"lib/processStats\";\nimport { GameDetails, generateGameDetails, readFileAsSlippiGame } from \"lib/readFile\";\nimport React, { useCallback, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { defaultTheme } from \"styles/theme\";\n\nimport { AppContext, Types } from \"../store\";\n\nconst ProcessButton = styled.button<{\n  backgroundColor: string;\n  color: string;\n}>`\n  background: ${(p) => p.backgroundColor};\n  border: none;\n  color: ${(p) => p.color};\n  cursor: pointer;\n  font: inherit;\n  padding: 1rem 0rem;\n  width: 100%;\n  font-weight: 700;\n  font-size: 3rem;\n  opacity: 0.8;\n  transition: opacity 0.2s ease-in-out;\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n  &:hover:enabled {\n    opacity: 1;\n  }\n`;\n\nexport const FileListInput: React.FC = () => {\n  const history = useHistory();\n  const { state, dispatch } = useContext(AppContext);\n\n  const onClick = () => {\n    const gameDetails = state.files.filter((f) => f.details !== null).map((f) => f.details as GameDetails);\n    // const s = generateStats(gameDetails);\n    // setStats(s);\n    const params = processStats(gameDetails);\n    const search = \"?\" + params.toString();\n    history.push({\n      pathname: \"/render\",\n      search,\n    });\n  };\n\n  const onRemove = (filename: string) => {\n    dispatch({\n      type: Types.REMOVE_FILE,\n      payload: {\n        filename,\n      },\n    });\n  };\n\n  const onDrop = useCallback(\n    (acceptedFiles: File[]) => {\n      const startTime = new Date().getTime();\n      const promises = acceptedFiles.map(async (file) => {\n        dispatch({\n          type: Types.ADD_FILE,\n          payload: {\n            filename: file.name,\n          },\n        });\n        try {\n          const game = await readFileAsSlippiGame(file);\n          const details = generateGameDetails(file.name, game);\n          dispatch({\n            type: Types.ADD_GAME,\n            payload: {\n              filename: file.name,\n              game,\n              details,\n            },\n          });\n        } catch (err) {\n          dispatch({\n            type: Types.SET_ERROR,\n            payload: {\n              filename: file.name,\n              error: err,\n            },\n          });\n        }\n      });\n      Promise.all(promises).then(() => {\n        const time = new Date().getTime() - startTime;\n        console.log(`Finished processing in ${time}ms`);\n      });\n    },\n    [dispatch]\n  );\n\n  const finishedProcessing = !state.files.find((f) => f.loading);\n  const buttonText =\n    state.files.length === 0 ? \"NO FILES ADDED\" : finishedProcessing ? \"GENERATE STATS\" : \"PLEASE WAIT\";\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-template-columns: 100%;\n        grid-row-gap: 1rem;\n      `}\n    >\n      <DropPad accept=\".slp\" onDrop={onDrop} />\n      <FileList files={state.files} onRemove={onRemove} />\n      <ProcessButton\n        backgroundColor={defaultTheme.primaryColor}\n        color=\"white\"\n        disabled={state.files.length === 0 || !finishedProcessing}\n        onClick={onClick}\n      >\n        {buttonText}\n      </ProcessButton>\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { ExternalLink as A } from \"components/ExternalLink\";\nimport { Header } from \"components/Header\";\nimport { FileListInput } from \"containers/FileListInput\";\nimport React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AppContext, Types } from \"store\";\nimport { defaultTheme, GlobalTheme } from \"styles/theme\";\n\nconst linkStyle = css`\n  display: block;\n  text-align: center;\n  text-decoration: none;\n  color: ${defaultTheme.secondaryColor};\n  background: white;\n  padding: 1rem 0rem;\n  width: 100%;\n  font-weight: 700;\n  font-size: 2.3rem;\n  cursor: pointer;\n  opacity: 0.8;\n  transition: opacity 0.2s ease-in-out;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nexport const MainView: React.FC = () => {\n  const { dispatch } = useContext(AppContext);\n\n  const clearAll = () => {\n    dispatch({\n      type: Types.CLEAR_ALL,\n    });\n  };\n\n  return (\n    <div\n      css={css`\n        height: 100%;\n        width: 100%;\n        max-width: 80rem;\n        margin: 0 auto;\n      `}\n    >\n      <GlobalTheme {...defaultTheme} />\n      <Container>\n        <div\n          css={css`\n            flex: none;\n          `}\n        >\n          <Header\n            onClick={clearAll}\n            title=\"Refresh page\"\n            css={css`\n              cursor: pointer;\n            `}\n          >\n            Slippi Stats\n          </Header>\n        </div>\n        <div\n          css={css`\n            overflow-y: auto;\n            flex: auto;\n          `}\n        >\n          <FileListInput />\n        </div>\n        <div\n          css={css`\n            flex: none;\n            display: grid;\n            grid-template-columns: repeat(3, 1fr);\n            grid-column-gap: 1rem;\n            padding: 2rem 0;\n          `}\n        >\n          <Link css={linkStyle} to=\"/random\" title=\"Show random sample stats\">\n            DEMO\n          </Link>\n          <A css={linkStyle} title=\"Fork this on Github\" href=\"https://github.com/vinceau/slippi-stats\">\n            GITHUB\n          </A>\n          <A css={linkStyle} title=\"Send love\" href=\"https://twitter.com/_vinceau\">\n            AUTHOR\n          </A>\n        </div>\n      </Container>\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\n\nimport obsImage from \"../styles/images/obs.png\";\n\nconst Draggable = styled.a`\n  color: #cccccc;\n  border: solid 0.2rem white;\n  background-color: #333333;\n  display: inline-block;\n  text-decoration: none;\n  padding: 1.5rem 3rem;\n  cursor: move;\n  border-radius: 0.3rem;\n  display: flex;\n  align-items: center;\n  text-transform: uppercase;\n  font-weight: bold;\n`;\n\nexport const OBSDragButton: React.FC = () => {\n  const wrapperRef = React.useRef(null);\n  const pos = 30;\n  const handleDragStart = (e: any) => {\n    console.log(\"drag start\");\n    console.log(e.target);\n    const dragged = e.target;\n    console.log(dragged.href);\n    const img = new Image();\n    img.src = obsImage;\n    // Customize the visible 'thumbnail' while dragging\n    e.dataTransfer.setDragImage(img /*wrapperRef.current*/, pos, pos);\n    // Set the data type, and the value. You specifically want text/uri-list.\n    e.dataTransfer.setData(\"text/uri-list\", dragged.href);\n    // e.preventDefault();\n    // e.stopPropagation();\n  };\n  const handleDragEnd = (e: any) => {\n    console.log(\"end\");\n    e.target.blur();\n  };\n  return (\n    <Draggable\n      href={window.location.href}\n      onDragStart={(e) => handleDragStart(e)}\n      onDragEnd={(e) => handleDragEnd(e)}\n      onClick={(e) => e.preventDefault()}\n      ref={wrapperRef}\n    >\n      <img style={{ width: \"3rem\", marginRight: \"1rem\" }} src={obsImage} /> Drag me into OBS\n    </Draggable>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport function useParam(key: string, defaultValue = \"\") {\n  const [value, setValue] = useState<string>(defaultValue);\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const currentValue = params.get(key);\n    if (currentValue !== value) {\n      setValue(currentValue || defaultValue);\n    }\n  }, [key, defaultValue, location, value]);\n\n  const setParam = (val: string) => {\n    const params = new URLSearchParams(location.search);\n    params.set(key, val);\n    const search = \"?\" + params.toString();\n    history.push({\n      pathname: location.pathname,\n      search,\n    });\n  };\n\n  return [value, setParam] as const;\n}\n","// From: https://usehooks.com/useKeyPress/\n\nimport { useEffect, useState } from \"react\";\n\nexport function useKeyPress(targetKey: any) {\n  // State for keeping track of whether key is pressed\n\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  // Add event listeners\n\n  useEffect(() => {\n    // If pressed key is our target key then set to true\n\n    function downHandler({ key }: any) {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    }\n\n    // If released key is our target key then set to false\n\n    const upHandler = ({ key }: any) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n\n    window.addEventListener(\"keydown\", downHandler);\n\n    window.addEventListener(\"keyup\", upHandler);\n\n    // Remove event listeners on cleanup\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [targetKey]); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n}\n","// From: https://usehooks.com/useOnClickOutside/\n\nimport { useEffect } from \"react\";\n\nexport function useOnClickOutside(ref: any, handler: any) {\n  useEffect(\n    () => {\n      const listener = (event: any) => {\n        // Do nothing if clicking ref's element or descendent elements\n\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener(\"mousedown\", listener);\n\n      document.addEventListener(\"touchstart\", listener);\n\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    },\n\n    // Add ref and handler to effect dependencies\n\n    // It's worth noting that because passed in handler is a new ...\n\n    // ... function on every render that will cause this effect ...\n\n    // ... callback/cleanup to run every render. It's not a big deal ...\n\n    // ... but to optimize you can wrap handler in useCallback before ...\n\n    // ... passing it into this hook.\n\n    [ref, handler]\n  );\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { useOnClickOutside } from \"lib/hooks\";\nimport React, { useRef } from \"react\";\nimport { ChromePicker } from \"react-color\";\nexport const ColorPicker: React.FC<{\n  value: string;\n  onChange: (val: string) => void;\n}> = ({ value, onChange }) => {\n  const [show, setShow] = React.useState(false);\n  const wrapperRef = useRef(null);\n\n  useOnClickOutside(wrapperRef, () => {\n    if (show) {\n      setShow(false);\n    }\n  });\n\n  const onClick = () => {\n    if (!show) {\n      setShow(true);\n    }\n  };\n  return (\n    <div\n      ref={wrapperRef}\n      css={css`\n        cursor: pointer;\n        position: relative;\n        height: 5rem;\n        width: 5rem;\n        border-radius: 0.5rem;\n        background-color: ${value};\n      `}\n      onClick={onClick}\n    >\n      {show && (\n        <div\n          css={css`\n            position: absolute;\n            z-index: 9999;\n            bottom: 0;\n          `}\n        >\n          <ChromePicker color={value} onChange={(color) => onChange(color.hex)} />\n        </div>\n      )}\n    </div>\n  );\n};\n","/** @jsx jsx */ import { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { ColorPicker } from \"components/ColorPicker\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nconst ColorContainer = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  grid-gap: 1rem;\n  justify-items: center;\n  align-items: center;\n`;\n\nconst ColorLabel = styled.div`\n  font-weight: 600;\n  font-size: 1.6rem;\n`;\n\nexport interface DualColorPanelProps {\n  panelLabel: string;\n  leftLabel: string;\n  leftColorParam: string;\n  leftDefault: string;\n  rightLabel: string;\n  rightColorParam: string;\n  rightDefault: string;\n}\n\nexport const DualColorPanel: React.FC<DualColorPanelProps> = (props) => {\n  const { panelLabel, leftLabel, leftColorParam, leftDefault, rightLabel, rightColorParam, rightDefault } = props;\n  const [leftColor, setLeftColor] = useParam(leftColorParam, leftDefault);\n  const [rightColor, setRightColor] = useParam(rightColorParam, rightDefault);\n\n  return (\n    <div>\n      <div\n        css={css`\n          text-align: center;\n          margin-bottom: 2rem;\n          font-weight: 800;\n          font-size: 2rem;\n        `}\n      >\n        {panelLabel}\n      </div>\n      <div\n        css={css`\n          display: grid;\n          grid-column-gap: 2.5rem;\n          grid-template-columns: repeat(2, 1fr);\n        `}\n      >\n        <ColorContainer\n          css={css`\n            justify-self: end;\n          `}\n        >\n          <ColorLabel>{leftLabel}</ColorLabel>\n          <div>\n            <ColorPicker value={leftColor} onChange={setLeftColor} />\n          </div>\n        </ColorContainer>\n        <ColorContainer\n          css={css`\n            justify-self: start;\n          `}\n        >\n          <div>\n            <ColorPicker value={rightColor} onChange={setRightColor} />\n          </div>\n          <ColorLabel>{rightLabel}</ColorLabel>\n        </ColorContainer>\n      </div>\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { ExternalLink as A } from \"components/ExternalLink\";\nimport { OBSDragButton } from \"components/OBSDragButton\";\nimport { useOnClickOutside } from \"lib/hooks\";\nimport { PortColor } from \"lib/portColor\";\nimport React from \"react\";\nimport { defaultTheme } from \"styles/theme\";\n\nimport { DualColorPanel } from \"./Panel\";\n\nconst Content = styled.div`\n  padding-top: 2rem;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n`;\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Heading = styled.h2`\n  display: block;\n  position: absolute;\n  width: 100%;\n  top: 0;\n  transform: translateY(-100%);\n  background-color: inherit;\n  margin: 0;\n  text-align: center;\n  padding: 1rem 0;\n  font-size: 2rem;\n  &::after {\n    content: \"\";\n    display: block;\n    background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.2), transparent);\n    height: 0.1rem;\n    position: absolute;\n    width: 80%;\n    margin-left: 10%;\n    bottom: 0;\n  }\n`;\n\nconst Outer = styled.div`\n  opacity: 0.2;\n  position: relative;\n  background-color: black;\n  &.closed:hover {\n    cursor: pointer;\n    opacity: 0.8;\n  }\n  &.open {\n    opacity: 1;\n    transform: translateY(-100%);\n    .close-button {\n      opacity: 1;\n    }\n  }\n  transition: all 0.2s ease-in-out;\n  .close-button {\n    z-index: 10;\n    position: absolute;\n    right: 3rem;\n    top: 1rem;\n    opacity: 0;\n    transition: opacity 0.2s ease-in-out;\n    color: black;\n    background-color: white;\n    padding: 0.2rem 1rem;\n    font-weight: bold;\n    font-size: 2.5rem;\n    cursor: pointer;\n    transform: translateY(-100%);\n  }\n`;\n\nexport const Options: React.FC = () => {\n  const [open, setOpen] = React.useState(false);\n  const outerRef = React.useRef(null);\n\n  useOnClickOutside(outerRef, () => {\n    if (open) {\n      setOpen(false);\n    }\n  });\n\n  const showOptions = () => {\n    if (!open) {\n      setOpen(true);\n    }\n  };\n\n  const closeOptions = () => setOpen(false);\n\n  return (\n    <Outer className={open ? \"open\" : \"closed\"} ref={outerRef} onClick={showOptions}>\n      <div className=\"close-button\" onClick={closeOptions}>\n        ✕\n      </div>\n      <Heading>OPTIONS</Heading>\n      <Content>\n        <Column>\n          <DualColorPanel\n            panelLabel=\"PLAYER COLOR\"\n            leftLabel=\"LEFT\"\n            rightLabel=\"RIGHT\"\n            leftDefault={PortColor.P1}\n            leftColorParam=\"leftColor\"\n            rightColorParam=\"rightColor\"\n            rightDefault={PortColor.P2}\n          />\n        </Column>\n        <Column>\n          <div\n            css={css`\n              margin-top: 1rem;\n            `}\n          >\n            <OBSDragButton />\n          </div>\n          <div\n            css={css`\n              font-size: 1.5rem;\n              padding: 2rem 0;\n              opacity: 0.5;\n              transition: opacity 0.1s ease-in-out;\n              &:hover {\n                opacity: 1;\n              }\n              a:hover {\n                text-decoration: underline;\n              }\n            `}\n          >\n            Made with love by <A href=\"https://twitter.com/_vinceau\">Vince Au</A>\n          </div>\n        </Column>\n        <Column>\n          <DualColorPanel\n            panelLabel=\"THEME COLOR\"\n            leftLabel=\"PRIMARY\"\n            rightLabel=\"SECONDARY\"\n            leftDefault={defaultTheme.primaryColor}\n            leftColorParam=\"primaryColor\"\n            rightColorParam=\"secondaryColor\"\n            rightDefault={defaultTheme.secondaryColor}\n          />\n        </Column>\n      </Content>\n    </Outer>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { useParam } from \"lib/hooks\";\nimport { getCharacterVSScreen, Side } from \"lib/resources\";\nimport React from \"react\";\n\nexport interface CharDisplayProps {\n  colorParam: string;\n  charParam: string;\n  align: Side;\n  theme: string;\n}\n\n// Some characters have their faces to the right so it get cut off.\n// e.g. Sheik and Bowser\n// So make sure we return the desired alignment\nconst FLIP_RIGHT_CHARS = [\"19\", \"5\"];\n\nfunction getAlignment(facing: Side, char: string, defaultAlignment: Side): Side {\n  if (facing === \"left\") {\n    return defaultAlignment;\n  }\n\n  // We so far only care about the right hand side of the VS-screen\n  if (FLIP_RIGHT_CHARS.includes(char)) {\n    return \"right\";\n  }\n\n  return defaultAlignment;\n}\n\nexport const CharDisplay: React.FC<CharDisplayProps> = (props) => {\n  const { colorParam, charParam, align, theme } = props;\n  const [color] = useParam(colorParam);\n  const [char] = useParam(charParam);\n  const facing: Side = align === \"left\" ? \"right\" : \"left\";\n  const imgSrc = getCharacterVSScreen(facing, char, color);\n  const alignment = getAlignment(facing, char, align);\n  return (\n    <div\n      css={css`\n        height: 80%;\n        width: 100%;\n        position: relative;\n        background: radial-gradient(circle at center -30%, ${theme}, transparent);\n        &::after {\n          content: ' ';\n          position: absolute;\n          height: 100%;\n          width: 100%;\n          background-image: url(\"${imgSrc}\");\n          background-repeat: no-repeat;\n          background-size: cover;\n          background-position: top ${alignment};\n        }\n      `}\n    ></div>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const Block = styled.div<{\n  color: string;\n  backgroundColor: string;\n  optional?: boolean;\n  show?: boolean;\n}>`\n  color: ${(p) => p.color};\n  background-color: ${(p) => p.backgroundColor};\n  text-align: center;\n  padding: 0.3em 0;\n  font-size: 1.2em;\n  box-shadow: 0.2em 0.2em 0.2em black;\n  ${(p) =>\n    p.optional &&\n    `\n  opacity: ${p.show ? 1 : 0};\n  transition: opacity 0.1s ease-in-out;\n  &:hover {\n    opacity: 1;\n  }\n  `};\n`;\n","// From: https://dev.to/joelmturner/build-an-inline-edit-text-input-with-react-hooks-4nah\n\nimport \"./index.scss\";\n\nimport { useKeyPress, useOnClickOutside } from \"lib/hooks\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nexport interface InlineEditProps {\n  text: string;\n  textAlign?: \"left\" | \"right\";\n  onSetText: (text: string) => void;\n}\n\nexport const InlineEdit: React.FC<InlineEditProps> = (props) => {\n  const { text, onSetText, textAlign } = props;\n  const [isInputActive, setIsInputActive] = useState(false);\n  const [inputValue, setInputValue] = useState(text);\n\n  const wrapperRef = useRef(null);\n  const textRef = useRef(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const tab = useKeyPress(\"Tab\");\n  const enter = useKeyPress(\"Enter\");\n  const esc = useKeyPress(\"Escape\");\n\n  useEffect(() => {\n    setInputValue(text);\n  }, [text]);\n\n  // check to see if the user clicked outside of this component\n  useOnClickOutside(wrapperRef, () => {\n    if (isInputActive) {\n      onSetText(inputValue);\n      setIsInputActive(false);\n    }\n  });\n\n  // focus the cursor in the input field on edit start\n  useEffect(() => {\n    if (isInputActive && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isInputActive]);\n\n  useEffect(() => {\n    if (isInputActive) {\n      // if Enter or tab is pressed, save the text and case the editor\n      if (enter || tab) {\n        onSetText(inputValue);\n        setIsInputActive(false);\n      }\n      // if Escape is pressed, revert the text and close the editor\n      if (esc) {\n        setInputValue(props.text);\n        setIsInputActive(false);\n      }\n    }\n  }, [tab, enter, esc, isInputActive, onSetText, inputValue, props.text]); // watch for key presses\n\n  return (\n    <span className=\"inline-text\" ref={wrapperRef}>\n      <span\n        ref={textRef}\n        onClick={() => setIsInputActive(true)}\n        className={`inline-text_copy inline-text_copy--${!isInputActive ? \"active\" : \"hidden\"}`}\n      >\n        {props.text}\n      </span>\n      <input\n        ref={inputRef}\n        style={{ textAlign, maxWidth: \"100%\" }}\n        value={inputValue}\n        onChange={(e) => {\n          setInputValue(e.target.value);\n        }}\n        className={`inline-text_input inline-text_input--${isInputActive ? \"active\" : \"hidden\"}`}\n      />\n    </span>\n  );\n};\n\nInlineEdit.defaultProps = {\n  text: \"\",\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onSetText: () => {},\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\n\nimport { Block } from \"./Block\";\nimport { InlineEdit } from \"./InlineEdit\";\n\nexport interface TextBlockProps {\n  color: string;\n  backgroundColor: string;\n  value: string;\n  optional?: boolean;\n  onEdit?: (val: string) => void;\n}\n\nexport const TextBlock: React.FC<TextBlockProps> = ({ optional, onEdit, backgroundColor, value, color }) => {\n  const child = onEdit ? <InlineEdit text={value} onSetText={onEdit} /> : value;\n  return (\n    <Block optional={optional} show={Boolean(value)} color={color} backgroundColor={backgroundColor}>\n      {child}\n    </Block>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nimport { TextBlock } from \"../components/TextBlock\";\n\nconst Name = styled.div`\n  font-size: 150%;\n  font-weight: 800;\n`;\n\nconst Subtitle = styled.div<{\n  show?: boolean;\n}>`\n  margin-top: -0.3rem;\n  margin-left: auto;\n  margin-right: auto;\n  width: 80%;\n  font-weight: 600;\n`;\n\nexport interface NameBlockProps {\n  nameParam: string;\n  defaultName: string;\n  subtitleParam: string;\n  primaryColor: string;\n  secondaryColor: string;\n}\n\nexport const NameBlock: React.FC<NameBlockProps> = ({\n  nameParam,\n  defaultName,\n  subtitleParam,\n  primaryColor,\n  secondaryColor,\n}) => {\n  const [name, setName] = useParam(nameParam, defaultName);\n  const [sub, setSub] = useParam(subtitleParam);\n  return (\n    <div>\n      <Name>\n        <TextBlock value={name} onEdit={setName} color=\"white\" backgroundColor={primaryColor} />\n      </Name>\n      <Subtitle>\n        <TextBlock value={sub} optional={true} onEdit={setSub} color={secondaryColor} backgroundColor=\"white\" />\n      </Subtitle>\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { Block } from \"components/Block\";\nimport { InlineEdit } from \"components/InlineEdit\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nexport interface ScoreBlockProps {\n  primaryColor: string;\n}\n\nconst StyledBlock = styled(Block)`\n  padding: 0.5rem 4rem;\n  font-size: 5rem;\n  font-weight: 800;\n`;\n\nexport const ScoreBlock: React.FC<ScoreBlockProps> = (props) => {\n  const [score, setScore] = useParam(\"score\", \"0 - 0\");\n  return (\n    <StyledBlock color=\"white\" backgroundColor={props.primaryColor}>\n      <InlineEdit text={score} onSetText={setScore} />\n    </StyledBlock>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { getCharacterPortrait } from \"lib/resources\";\nimport React from \"react\";\n\nconst Outer = styled.div<{\n  highlight?: boolean;\n}>`\n  position: relative;\n  display: block;\n  border: solid 0.1rem rgba(255, 255, 255, ${(p) => (p.highlight ? \"0.8\" : \"0.2\")});\n  height: 5rem;\n  width: 100%;\n  max-width: 10rem;\n`;\n\nconst BaseHeadImage = styled.div`\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  &::after {\n    content: \" \";\n    height: 100%;\n    background-repeat: no-repeat;\n    background-size: cover;\n    position: absolute;\n  }\n`;\n\nconst HeadImage = styled(BaseHeadImage)<{\n  backgroundColor?: string;\n  imageSrc: string;\n  side: \"left\" | \"right\";\n  waypoint: number;\n  dim?: boolean;\n}>`\n  ${(p) => {\n    const invWaypoint = 100 - p.waypoint;\n    return `\n      ${p.side === \"right\" ? `clip-path: polygon(${p.waypoint}% 0, 100% 0, 100% 100%, ${invWaypoint}% 100%);` : \"\"}\n      ${p.dim ? \"filter: brightness(25%);\" : \"\"}\n      ${p.backgroundColor ? `background: radial-gradient(circle at center -30%, ${p.backgroundColor}, black);` : \"\"}\n      &::after {\n        width: ${p.waypoint}%;\n        background-image: url(\"${p.imageSrc}\");\n        background-position: top ${p.side};\n        ${p.side === \"right\" ? `left: ${invWaypoint}%;` : \"transform: scaleX(-1);\"}\n      }\n    `;\n  }}\n`;\n\nexport interface HeadToHeadProps {\n  char1: number | string;\n  color1: string;\n  result1: string;\n  char2: number | string;\n  color2: string;\n  result2: string;\n  leftColor: string;\n  rightColor: string;\n  highlight?: boolean;\n}\n\nexport const HeadToHead: React.FC<HeadToHeadProps> = ({\n  char1,\n  color1,\n  result1,\n  char2,\n  color2,\n  result2,\n  leftColor,\n  rightColor,\n  highlight,\n}) => {\n  const waypoint = 55;\n  const p1 = getCharacterPortrait(char1, color1);\n  const p2 = getCharacterPortrait(char2, color2);\n\n  return (\n    <Outer highlight={highlight}>\n      <HeadImage backgroundColor={leftColor} imageSrc={p1} waypoint={waypoint} side=\"left\" dim={result1 === \"loser\"} />\n      <HeadImage\n        backgroundColor={rightColor}\n        imageSrc={p2}\n        waypoint={waypoint}\n        side=\"right\"\n        dim={result2 === \"loser\"}\n      />\n    </Outer>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { getStageIcon } from \"lib/resources\";\nimport React from \"react\";\n\ninterface StageTimerProps {\n  stageId: string | number;\n  duration: string;\n  highlight?: boolean;\n}\n\nconst Text = styled.span`\n  font-size: 2.5rem;\n  font-weight: bold;\n  opacity: 0.7;\n  text-shadow: 2px 2px 2px black;\n`;\n\nconst Outer = styled.div<{\n  src: string;\n  highlight?: boolean;\n}>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  height: 9rem;\n  width: 100%;\n  border: solid 1px rgba(255, 255, 255, ${(p) => (p.highlight ? \"0.8\" : \"0.2\")});\n  z-index: 0;\n\n  &::after {\n    content: ' ';\n    height: 100%;\n    width: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-image: url(\"${(p) => p.src}\");\n    background-repeat: no-repeat;\n    background-size: 105% auto;\n    background-position: center;\n    filter: blur(2px) brightness(30%);\n    z-index: -1;\n  }\n`;\n\nexport const StageTimer: React.FC<StageTimerProps> = ({ stageId, duration, highlight }) => {\n  const stageIcon = getStageIcon(stageId);\n  return (\n    <Outer src={stageIcon} highlight={highlight}>\n      <Text>{duration}</Text>\n    </Outer>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React from \"react\";\n\nimport { HeadToHead } from \"./HeadToHead\";\nimport { StageTimer } from \"./StageTimer\";\n\nexport interface GameResultProps {\n  stageId: string;\n  duration: string;\n  char1: number | string;\n  color1: string;\n  result1: string;\n  char2: number | string;\n  color2: string;\n  result2: string;\n  leftColor: string;\n  rightColor: string;\n  highlight?: boolean;\n}\n\nexport const GameResult: React.FC<GameResultProps> = (props) => {\n  const { stageId, duration, ...rest } = props;\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-template-columns: 100%;\n        justify-items: center;\n        width: 100%;\n        max-width: 18rem;\n        grid-row-gap: 2rem;\n      `}\n    >\n      <HeadToHead {...rest} />\n      <StageTimer stageId={stageId} duration={duration} highlight={props.highlight} />\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { GameResult } from \"components/GameResult\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nconst Game: React.FC<{\n  index: number;\n  leftColor: string;\n  rightColor: string;\n  winningSide?: string;\n}> = ({ index, leftColor, rightColor, winningSide }) => {\n  const [gameInfo] = useParam(`g${index}`);\n  // The game info starts off undefined\n  if (!gameInfo) {\n    return null;\n  }\n  const [stageId, duration, char1, color1, res1, char2, color2, res2] = gameInfo.split(\",\");\n  const gameWinner = res1 === \"winner\" ? \"left\" : res2 === \"winner\" ? \"right\" : \"\";\n  return (\n    <GameResult\n      highlight={winningSide === gameWinner}\n      stageId={stageId}\n      duration={duration}\n      char1={char1}\n      color1={color1}\n      result1={res1}\n      char2={char2}\n      color2={color2}\n      result2={res2}\n      leftColor={leftColor}\n      rightColor={rightColor}\n    />\n  );\n};\n\nexport const GameDisplay: React.FC<{\n  leftColor: string;\n  rightColor: string;\n  winningSide?: string;\n}> = (props) => {\n  const [gt] = useParam(`gt`);\n  const total = parseInt(gt, 10) || 0;\n\n  const games = [];\n  for (let i = 1; i <= total; i++) {\n    games.push(\n      <Game\n        key={`g${i}`}\n        index={i}\n        leftColor={props.leftColor}\n        rightColor={props.rightColor}\n        winningSide={props.winningSide}\n      />\n    );\n  }\n\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-column-gap: 2rem;\n        grid-template-columns: repeat(${total}, 1fr);\n        justify-items: center;\n      `}\n    >\n      {games}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\n\nimport { InlineEdit } from \"./InlineEdit\";\n\nexport interface StatProps {\n  type?: \"text\" | \"number\";\n  label: string;\n  labelColor?: string;\n  labelBackground?: string;\n  leftText: string;\n  rightText: string;\n  onLeftTextBlur?: (text: string) => void;\n  onRightTextBlur?: (text: string) => void;\n}\n\nconst StatLabel = styled.div<{\n  labelBackground: string;\n  labelColor: string;\n}>`\n  text-align: center;\n  background-color: ${(p) => p.labelBackground};\n  color: ${(p) => p.labelColor};\n  padding: 0.3em 2.5em;\n  font-weight: 700;\n  font-size: 1.2em;\n  box-shadow: 0.2em 0.2em 0.2em black;\n  justify-self: center;\n  z-index: 1;\n`;\n\nconst StatContent = styled.div<{\n  type: \"text\" | \"number\";\n}>`\n  width: 100%;\n  font-weight: 800;\n  font-size: ${(p) => (p.type === \"text\" ? \"1.4em\" : \"2.3em\")};\n`;\n\nconst OuterStat = styled.div`\n  display: grid;\n  grid-template-columns: 20% 60% 20%;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  &::before {\n    z-index: -1;\n    content: \"\";\n    display: block;\n    background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.4), transparent);\n    height: 0.1rem;\n    position: absolute;\n    width: 80%;\n    margin-left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nexport const Stat: React.FC<StatProps> = (props) => {\n  const { type, label, leftText, rightText, labelBackground, labelColor } = props;\n  return (\n    <OuterStat>\n      <StatContent\n        type={type!}\n        css={css`\n          justify-self: start;\n        `}\n      >\n        <InlineEdit text={leftText} onSetText={props.onLeftTextBlur!} />\n      </StatContent>\n      <StatLabel labelBackground={labelBackground!} labelColor={labelColor!}>\n        {label}\n      </StatLabel>\n      <StatContent\n        type={type!}\n        css={css`\n          justify-self: end;\n          text-align: right;\n        `}\n      >\n        <InlineEdit text={rightText} textAlign=\"right\" onSetText={props.onRightTextBlur!} />\n      </StatContent>\n    </OuterStat>\n  );\n};\n\nStat.defaultProps = {\n  type: \"number\",\n  labelColor: \"black\",\n  labelBackground: \"white\",\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onLeftTextBlur: () => {},\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onRightTextBlur: () => {},\n};\n","import { Stat } from \"components/Stat\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\ninterface ThemeProps {\n  primaryColor: string;\n  secondaryColor: string;\n}\n\ninterface ConnectedStatProps extends ThemeProps {\n  param1: string;\n  param2: string;\n  label: string;\n  type?: \"text\" | \"number\";\n}\n\nconst ConnectedStat: React.FC<ConnectedStatProps> = (props) => {\n  const { param1, param2, label, type, primaryColor, secondaryColor } = props;\n  const defaultValue = type === \"number\" ? \"0\" : \"-\";\n  const [field1, setField1] = useParam(param1, defaultValue);\n  const [field2, setField2] = useParam(param2, defaultValue);\n  const labelColor = type === \"number\" ? secondaryColor : \"white\";\n  const labelBackground = type === \"number\" ? \"white\" : primaryColor;\n  return (\n    <Stat\n      type={type}\n      leftText={field1}\n      onLeftTextBlur={(text) => setField1(text)}\n      label={label}\n      rightText={field2}\n      onRightTextBlur={(text) => setField2(text)}\n      labelColor={labelColor}\n      labelBackground={labelBackground}\n    />\n  );\n};\n\nConnectedStat.defaultProps = {\n  type: \"number\",\n};\n\nexport const MostCommonKillMove: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat type=\"text\" param1=\"mckm1\" param2=\"mckm2\" label=\"MOST COMMON KILL MOVE\" {...props} />;\n};\n\nexport const MostCommonNeutralOpener: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat type=\"text\" param1=\"mcno1\" param2=\"mcno2\" label=\"MOST COMMON NEUTRAL OPENER\" {...props} />;\n};\n\nexport const AverageKillPercent: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat param1=\"akp1\" param2=\"akp2\" label=\"AVERAGE KILL PERCENT\" {...props} />;\n};\n\nexport const NeutralWins: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat param1=\"nw1\" param2=\"nw2\" label=\"NEUTRAL WINS\" {...props} />;\n};\n\nexport const DamagePerOpening: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat param1=\"dpo1\" param2=\"dpo2\" label=\"DAMAGE / OPENING\" {...props} />;\n};\n\nexport const InputsPerMinute: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat param1=\"ipm1\" param2=\"ipm2\" label=\"INPUTS / MINUTE\" {...props} />;\n};\n\nexport const OpeningsPerKill: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat param1=\"opk1\" param2=\"opk2\" label=\"OPENINGS / KILL\" {...props} />;\n};\n\nexport const TotalDamageDone: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat param1=\"tdd1\" param2=\"tdd2\" label=\"TOTAL DAMAGE DONE\" {...props} />;\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nimport { GameDisplay } from \"../GameDisplay\";\nimport {\n  AverageKillPercent,\n  DamagePerOpening,\n  InputsPerMinute,\n  MostCommonKillMove,\n  MostCommonNeutralOpener,\n  NeutralWins,\n  OpeningsPerKill,\n  TotalDamageDone,\n} from \"./Statistics\";\n\nconst Divider = styled.div`\n  content: \" \";\n  display: block;\n  height: 0.1rem;\n  width: 100%;\n  margin-top: 0.7rem;\n  background-color: rgba(255, 255, 255, 0.05);\n`;\n\nexport const StatDisplay: React.FC<{\n  primaryColor: string;\n  secondaryColor: string;\n  leftColor: string;\n  rightColor: string;\n}> = (props) => {\n  const [winningSide] = useParam(\"winner\");\n  const { leftColor, rightColor, ...theme } = props;\n  return (\n    <div\n      css={css`\n        background: linear-gradient(to right, ${props.secondaryColor}, transparent, ${props.secondaryColor});\n        width: 100%;\n      `}\n    >\n      <div\n        css={css`\n          display: grid;\n          grid-template-columns: 100%;\n          grid-row-gap: 2rem;\n          margin: 4rem;\n        `}\n      >\n        <MostCommonKillMove {...theme} />\n        <MostCommonNeutralOpener {...theme} />\n        <Divider />\n        <OpeningsPerKill {...theme} />\n        <TotalDamageDone {...theme} />\n        <AverageKillPercent {...theme} />\n        <NeutralWins {...theme} />\n        <Divider />\n        <GameDisplay winningSide={winningSide} leftColor={leftColor} rightColor={rightColor} />\n      </div>\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { useParam } from \"lib/hooks\";\nimport { PortColor } from \"lib/portColor\";\nimport React from \"react\";\nimport { Theme } from \"styles/theme\";\n\nimport { CharDisplay } from \"./CharDisplay\";\nimport { NameBlock } from \"./NameBlock\";\nimport { ScoreBlock } from \"./ScoreBlock\";\nimport { StatDisplay } from \"./StatDisplay\";\n\nconst Outer = styled.div`\n  position: relative;\n  width: 100%;\n  display: grid;\n  grid-template-columns: 20% 60% 20%;\n`;\n\nexport const RenderDisplay: React.FC<Theme> = (theme) => {\n  const [leftColor] = useParam(\"leftColor\", PortColor.P1);\n  const [rightColor] = useParam(\"rightColor\", PortColor.P2);\n  return (\n    <Outer>\n      <div\n        css={css`\n          justify-self: end;\n          width: 100%;\n        `}\n      >\n        <CharDisplay theme={leftColor} charParam=\"char1\" colorParam=\"color1\" align=\"right\" />\n      </div>\n      <StatDisplay leftColor={leftColor} rightColor={rightColor} {...theme} />\n      <div\n        css={css`\n          width: 100%;\n        `}\n      >\n        <CharDisplay theme={rightColor} charParam=\"char2\" colorParam=\"color2\" align=\"left\" />\n      </div>\n      <div\n        css={css`\n          position: absolute;\n          bottom: 15%;\n          display: inline-flex;\n          width: 98%;\n          margin: 0 1%;\n        `}\n      >\n        <div\n          css={css`\n            width: 100%;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n          `}\n        >\n          <div\n            css={css`\n              width: 20%;\n            `}\n          >\n            <NameBlock nameParam=\"name1\" subtitleParam=\"sub1\" defaultName=\"Player\" {...theme} />\n          </div>\n          <div\n            css={css`\n              width: 20%;\n            `}\n          >\n            <NameBlock nameParam=\"name2\" subtitleParam=\"sub2\" defaultName=\"Player\" {...theme} />\n          </div>\n        </div>\n      </div>\n      <div\n        css={css`\n          position: absolute;\n          bottom: -6rem;\n          width: 100%;\n          display: flex;\n          justify-content: center;\n        `}\n      >\n        <ScoreBlock primaryColor={theme.primaryColor} />\n      </div>\n    </Outer>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { ExternalLink as A } from \"components/ExternalLink\";\nimport { Header } from \"components/Header\";\nimport { Options } from \"containers/Options\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { defaultTheme, GlobalTheme } from \"styles/theme\";\n\nimport { RenderDisplay } from \"../containers/RenderDisplay\";\nimport poweredByImage from \"../styles/images/powered-by.png\";\n\nexport const RenderView: React.FC = () => {\n  const [primaryColor] = useParam(\"primaryColor\", defaultTheme.primaryColor);\n  const [secondaryColor] = useParam(\"secondaryColor\", defaultTheme.secondaryColor);\n  return (\n    <div\n      css={css`\n        padding: 0 12rem;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        &:hover {\n          .settings {\n            opacity: 1;\n          }\n        }\n      `}\n    >\n      <GlobalTheme primaryColor={primaryColor} secondaryColor={secondaryColor} />\n      <Link to=\"/\" title=\"Home\">\n        <Header>Post Match Stats</Header>\n      </Link>\n      <div\n        css={css`\n          margin-bottom: 2rem;\n        `}\n      >\n        <A href=\"https://slippi.gg\">\n          <img\n            alt=\"Powered by Slippi\"\n            title=\"Open Slippi.gg homepage\"\n            src={poweredByImage}\n            css={css`\n              max-height: 5rem;\n            `}\n          />\n        </A>\n      </div>\n      <RenderDisplay primaryColor={primaryColor} secondaryColor={secondaryColor} />\n      <div\n        className=\"settings\"\n        css={css`\n          opacity: 0;\n          transition: opacity 0.2s ease-in-out;\n          position: absolute;\n          left: 0;\n          top: 100%;\n          height: 100%;\n          width: 100%;\n          z-index: 10;\n        `}\n      >\n        <Options />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { hot } from \"react-hot-loader/root\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport { RandomView } from \"views/RandomView\";\n\nimport { AppProvider } from \"./store\";\nimport { MainView } from \"./views/MainView\";\nimport { RenderView } from \"./views/RenderView\";\n\nconst App: React.FC = () => {\n  return (\n    <AppProvider>\n      <Router basename=\"/\">\n        <Route exact path=\"/\" component={MainView} />\n        <Route path=\"/render\" component={RenderView} />\n        <Route path=\"/random\" component={RandomView} />\n      </Router>\n    </AppProvider>\n  );\n};\n\nexport default hot(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"./index.scss\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* eslint-disable */\n\n/*\n * Taken from: https://github.com/project-slippi/slippi-set-stats/blob/master/main.js\n */\n\nconst { stages: stageUtil, moves: moveUtil, characters: characterUtil } = require(\"@slippi/slippi-js\");\nconst moment = require(\"moment\");\nconst _ = require(\"lodash\");\n\nconst stats = {\n  OPENINGS_PER_KILL: \"openingsPerKill\",\n  DAMAGE_PER_OPENING: \"damagePerOpening\",\n  NEUTRAL_WINS: \"neutralWins\",\n  KILL_MOVES: \"killMoves\",\n  NEUTRAL_OPENER_MOVES: \"neutralOpenerMoves\",\n  EARLY_KILLS: \"earlyKills\",\n  LATE_DEATHS: \"lateDeaths\",\n  SELF_DESTRUCTS: \"selfDestructs\",\n  INPUTS_PER_MINUTE: \"inputsPerMinute\",\n  AVG_KILL_PERCENT: \"avgKillPercent\",\n  HIGH_DAMAGE_PUNISHES: \"highDamagePunishes\",\n  DAMAGE_DONE: \"damageDone\",\n};\n\nconst statDefininitions = {\n  [stats.OPENINGS_PER_KILL]: {\n    id: stats.OPENINGS_PER_KILL,\n    name: \"Openings / Kill\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"openingsPerKill\", 1);\n    },\n  },\n  [stats.DAMAGE_PER_OPENING]: {\n    id: stats.DAMAGE_PER_OPENING,\n    name: \"Damage / Opening\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"damagePerOpening\", 1);\n    },\n  },\n  [stats.NEUTRAL_WINS]: {\n    id: stats.NEUTRAL_WINS,\n    name: \"Neutral Wins\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 0,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"neutralWinRatio\", 0, \"count\");\n    },\n  },\n  [stats.KILL_MOVES]: {\n    id: stats.KILL_MOVES,\n    name: \"Most Common Kill Move\",\n    type: \"text\",\n    calculate: (games, playerIndex) => {\n      const killMoves = _.flatMap(games, (game) => {\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        const conversionsForPlayer = _.filter(conversions, (conversion) => {\n          const isForPlayer = conversion.playerIndex === playerIndex;\n          const didKill = conversion.didKill;\n          return isForPlayer && didKill;\n        });\n\n        return _.map(conversionsForPlayer, (conversion) => {\n          return _.last(conversion.moves);\n        });\n      });\n\n      const killMovesByMove = _.groupBy(killMoves, \"moveId\");\n      const killMoveCounts = _.map(killMovesByMove, (moves) => {\n        const move = _.first(moves);\n        return {\n          count: moves.length,\n          id: move.moveId,\n          name: moveUtil.getMoveName(move.moveId),\n          shortName: moveUtil.getMoveShortName(move.moveId),\n        };\n      });\n\n      const orderedKillMoveCounts = _.orderBy(killMoveCounts, [\"count\"], [\"desc\"]);\n      const topKillMove = _.first(orderedKillMoveCounts);\n      let simpleText = \"N/A\";\n      if (topKillMove) {\n        simpleText = `${topKillMove.shortName} (${topKillMove.count})`;\n      }\n\n      return {\n        result: orderedKillMoveCounts,\n        simple: {\n          text: simpleText,\n        },\n      };\n    },\n  },\n  [stats.NEUTRAL_OPENER_MOVES]: {\n    id: stats.NEUTRAL_OPENER_MOVES,\n    name: \"Most Common Neutral Opener\",\n    type: \"text\",\n    calculate: (games, playerIndex) => {\n      const neutralMoves = _.flatMap(games, (game) => {\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        const conversionsForPlayer = _.filter(conversions, (conversion) => {\n          const isForPlayer = conversion.playerIndex === playerIndex;\n          const isNeutralWin = conversion.openingType === \"neutral-win\";\n          return isForPlayer && isNeutralWin;\n        });\n\n        return _.map(conversionsForPlayer, (conversion) => {\n          return _.first(conversion.moves);\n        });\n      });\n\n      // TODO: This following code is repeated from kill move code, put in function\n\n      const neutralMovesByMove = _.groupBy(neutralMoves, \"moveId\");\n      const neutralMoveCounts = _.map(neutralMovesByMove, (moves) => {\n        const move = _.first(moves);\n        return {\n          count: moves.length,\n          id: move.moveId,\n          name: moveUtil.getMoveName(move.moveId),\n          shortName: moveUtil.getMoveShortName(move.moveId),\n        };\n      });\n\n      const orderedNeutralMoveCounts = _.orderBy(neutralMoveCounts, [\"count\"], [\"desc\"]);\n      const topNeutralMove = _.first(orderedNeutralMoveCounts);\n      let simpleText = \"N/A\";\n      if (topNeutralMove) {\n        simpleText = `${topNeutralMove.shortName} (${topNeutralMove.count})`;\n      }\n\n      return {\n        result: orderedNeutralMoveCounts,\n        simple: {\n          text: simpleText,\n        },\n      };\n    },\n  },\n  [stats.EARLY_KILLS]: {\n    id: stats.EARLY_KILLS,\n    name: \"Earliest Kill\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const oppStocks = _.flatMap(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        return _.filter(stocks, (stock) => {\n          const isOpp = stock.playerIndex !== playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isOpp && hasEndPercent;\n        });\n      });\n\n      const orderedOppStocks = _.orderBy(oppStocks, [\"endPercent\"], [\"asc\"]);\n      const earliestKillStock = _.first(orderedOppStocks);\n      const simple = {\n        text: \"N/A\",\n        number: null,\n      };\n\n      if (earliestKillStock) {\n        simple.number = earliestKillStock.endPercent;\n        simple.text = simple.number.toFixed(1);\n      }\n\n      return {\n        result: _.take(orderedOppStocks, 5),\n        simple: simple,\n      };\n    },\n  },\n  [stats.LATE_DEATHS]: {\n    id: stats.LATE_DEATHS,\n    name: \"Latest Death\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const playerStocks = _.flatMap(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        return _.filter(stocks, (stock) => {\n          const isPlayer = stock.playerIndex === playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isPlayer && hasEndPercent;\n        });\n      });\n\n      const orderedPlayerStocks = _.orderBy(playerStocks, [\"endPercent\"], [\"desc\"]);\n      const latestDeathStock = _.first(orderedPlayerStocks);\n      const simple = {\n        text: \"N/A\",\n        number: null,\n      };\n\n      if (latestDeathStock) {\n        simple.number = latestDeathStock.endPercent;\n        simple.text = simple.number.toFixed(1);\n      }\n\n      return {\n        result: _.take(orderedPlayerStocks, 5),\n        simple: simple,\n      };\n    },\n  },\n  [stats.SELF_DESTRUCTS]: {\n    id: stats.SELF_DESTRUCTS, // Only show this one if greater than 2 for one player\n    name: \"Total Self-Destructs\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 0,\n    calculate: (games, playerIndex) => {\n      const sdCounts = _.map(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        const playerEndedStocks = _.filter(stocks, (stock) => {\n          const isPlayer = stock.playerIndex === playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isPlayer && hasEndPercent;\n        });\n\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        const oppKillConversions = _.filter(conversions, (conversion) => {\n          const isOpp = conversion.playerIndex !== playerIndex;\n          const didKill = conversion.didKill;\n          return isOpp && didKill;\n        });\n\n        return playerEndedStocks.length - oppKillConversions.length;\n      });\n\n      const sdSum = _.sum(sdCounts);\n\n      return {\n        result: sdSum,\n        simple: {\n          number: sdSum,\n          text: `${sdSum}`,\n        },\n      };\n    },\n  },\n  [stats.INPUTS_PER_MINUTE]: {\n    id: stats.INPUTS_PER_MINUTE,\n    name: \"Inputs / Minute\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"inputsPerMinute\", 1);\n    },\n  },\n  [stats.AVG_KILL_PERCENT]: {\n    id: stats.AVG_KILL_PERCENT,\n    name: \"Average Kill Percent\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const oppStocks = _.flatMap(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        return _.filter(stocks, (stock) => {\n          const isOpp = stock.playerIndex !== playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isOpp && hasEndPercent;\n        });\n      });\n\n      const result = {\n        total: oppStocks.length,\n        count: _.sumBy(oppStocks, \"endPercent\") || 0,\n      };\n\n      result.ratio = result.total ? result.count / result.total : null;\n\n      return {\n        result: result,\n        simple: genSimpleFromRatio(result, 1),\n      };\n    },\n  },\n  [stats.HIGH_DAMAGE_PUNISHES]: {\n    id: stats.HIGH_DAMAGE_PUNISHES,\n    name: \"Highest Damage Punish\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const punishes = _.flatMap(games, (game) => {\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        return _.filter(conversions, (conversion) => {\n          const isForPlayer = conversion.playerIndex === playerIndex;\n          const hasEndPercent = conversion.endPercent !== null;\n          return isForPlayer && hasEndPercent;\n        });\n      });\n\n      const getDamageDone = (punish) => punish.endPercent - punish.startPercent;\n      const orderedPunishes = _.orderBy(punishes, [getDamageDone], \"desc\");\n      const topPunish = _.first(orderedPunishes);\n      const simple = {\n        text: \"N/A\",\n        number: null,\n      };\n\n      if (topPunish) {\n        simple.number = getDamageDone(topPunish);\n        simple.text = simple.number.toFixed(1);\n      }\n\n      return {\n        result: _.take(orderedPunishes, 5),\n        simple: simple,\n      };\n    },\n  },\n  [stats.DAMAGE_DONE]: {\n    id: stats.DAMAGE_DONE,\n    name: \"Total Damage Done\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"damagePerOpening\", 1, \"count\");\n    },\n  },\n};\n\nfunction genOverallRatioStat(games, playerIndex, field, fixedNum, type = \"ratio\") {\n  const statRatios = _.map(games, (game) => {\n    const overallStats = _.get(game, [\"stats\", \"overall\"]);\n    const overallStatsByPlayer = _.keyBy(overallStats, \"playerIndex\");\n    const overallStatsForPlayer = overallStatsByPlayer[playerIndex];\n    return overallStatsForPlayer[field];\n  });\n\n  const avg = averageRatios(statRatios);\n  const simple = genSimpleFromRatio(avg, fixedNum, type);\n\n  return {\n    result: avg,\n    simple: simple,\n  };\n}\n\nfunction averageRatios(ratios) {\n  const result = {};\n\n  result.count = _.sumBy(ratios, \"count\") || 0;\n  result.total = _.sumBy(ratios, \"total\") || 0;\n  result.ratio = result.total ? result.count / result.total : null;\n\n  return result;\n}\n\nfunction genSimpleFromRatio(ratio, fixedNum, type = \"ratio\") {\n  const result = {};\n\n  switch (type) {\n    case \"ratio\":\n      result.number = ratio.ratio;\n      result.text = ratio.ratio !== null ? ratio.ratio.toFixed(fixedNum) : \"N/A\";\n      break;\n    case \"count\":\n      result.number = ratio.count;\n      result.text = ratio.count.toFixed(fixedNum);\n      break;\n  }\n\n  return result;\n}\n\n/*\nfunction parseFilesInFolder() {\n  const dirPath = process.cwd();\n  const dirContents = fs.readdirSync(dirPath, { withFileTypes: true });\n\n  console.log(\"Reading files in directory...\\n\");\n  const gameDetails = _.chain(dirContents).filter((item) => {\n    return item.isFile() && path.extname(item.name) === \".slp\";\n  }).map((slpItem) => {\n    const slpFilePath = path.join(dirPath, slpItem.name);\n    const game = new SlippiGame(slpFilePath);\n    return {\n      filePath: slpFilePath,\n      settings: game.getSettings(),\n      frames: game.getFrames(),\n      stats: game.getStats(),\n      metadata: game.getMetadata(),\n      latestFrame: game.getLatestFrame(),\n      gameEnd: game.getGameEnd(),\n    };\n  }).value();\n\n  return gameDetails;\n}\n*/\n\nexport function filterGames(games) {\n  // console.log(games);\n  const gamesByIsSingles = _.groupBy(games, (game) => {\n    const numberOfPlayers = game.settings.players.length;\n    return numberOfPlayers === 2;\n  });\n\n  const nonSinglesGames = _.get(gamesByIsSingles, false) || [];\n  if (_.some(nonSinglesGames)) {\n    console.log(\"The following games have been excluded because they are not singles games:\");\n    _.forEach(nonSinglesGames, (game) => {\n      console.log(game.filePath);\n    });\n    console.log();\n  }\n\n  const singlesGames = _.get(gamesByIsSingles, true) || [];\n  const gamesByPorts = _.chain(singlesGames)\n    .groupBy((game) => {\n      const ports = _.map(game.settings.players, \"port\");\n      return _.join(ports, \"-\");\n    })\n    .orderBy([\"length\"], [\"desc\"])\n    .value();\n\n  const gamesWithSamePorts = gamesByPorts.shift();\n  if (_.some(gamesByPorts)) {\n    console.log(\"The following games have been excluded because the player ports differ:\");\n    const flatGames = _.flatten(gamesByPorts);\n    _.forEach(flatGames, (game) => {\n      console.log(game.filePath);\n    });\n    console.log();\n  }\n\n  if (_.isEmpty(gamesWithSamePorts)) {\n    throw new Error(\"There were no valid games found to compute stats from.\");\n  }\n\n  console.log(`Including ${gamesWithSamePorts.length} games for stat calculation...`);\n\n  return gamesWithSamePorts;\n}\n\nfunction computeStats(games) {\n  const firstGame = _.first(games);\n  // console.log(firstGame);\n  const orderIndices = _.map(firstGame.settings.players, \"playerIndex\");\n  const reversedIndices = _.chain(orderIndices).clone().reverse().value();\n  const indices = [orderIndices, reversedIndices];\n\n  const statResults = _.flatMap(stats, (statKey) => {\n    const def = statDefininitions[statKey];\n    if (!def.calculate) {\n      return [];\n    }\n\n    const results = _.map(indices, (iIndices) => {\n      const result = def.calculate(games, iIndices[0], iIndices[1]);\n      result.port = iIndices[0] + 1;\n      return result;\n    });\n\n    const output = { ...def };\n    delete output.calculate;\n    output.results = results;\n\n    return [output];\n  });\n\n  return statResults;\n}\n\nfunction generateGameInfo(games) {\n  const getStartAt = (game) => game.metadata.startAt;\n  const orderedGames = _.orderBy(games, [getStartAt], [\"asc\"]);\n\n  const getResultForPlayer = (game, playerIndex) => {\n    // console.log(game);\n    // Calculate assumed game result\n    const gameEnd = game.gameEnd;\n    if (!gameEnd) {\n      return \"unknown\";\n    }\n\n    const players = _.get(game.settings, [\"players\"]);\n    const opp = _.filter(players, (player) => player.playerIndex !== playerIndex);\n    const oppIndex = _.get(opp, [0, \"playerIndex\"]);\n\n    switch (gameEnd.gameEndMethod) {\n      case 1:\n        // This is a TIME! ending, not implemented yet\n        return \"unknown\";\n      case 2:\n        // This is a GAME! ending\n        const latestFrame = _.get(game.latestFrame, \"players\") || [];\n        const playerStocks = _.get(latestFrame, [playerIndex, \"post\", \"stocksRemaining\"]);\n        const oppStocks = _.get(latestFrame, [oppIndex, \"post\", \"stocksRemaining\"]);\n        if (playerStocks === 0 && oppStocks === 0) {\n          return \"unknown\";\n        }\n\n        return playerStocks === 0 ? \"loser\" : \"winner\";\n      case 7:\n        return gameEnd.lrasInitiatorIndex === playerIndex ? \"loser\" : \"winner\";\n    }\n\n    return \"unknown\";\n  };\n\n  const generatePlayerInfo = (game) => (player) => {\n    // console.log(player);\n    return {\n      port: player.port,\n      characterId: player.characterId,\n      characterColor: player.characterColor,\n      nametag: player.nametag,\n      characterName: characterUtil.getCharacterName(player.characterId),\n      characterColor: characterUtil.getCharacterColorName(player.characterId, player.characterColor),\n      gameResult: getResultForPlayer(game, player.playerIndex),\n    };\n  };\n\n  return _.map(orderedGames, (game) => {\n    const playerInfoGen = generatePlayerInfo(game);\n\n    return {\n      stage: {\n        id: game.settings.stageId,\n        name: stageUtil.getStageName(game.settings.stageId),\n      },\n      players: _.map(game.settings.players, playerInfoGen),\n      startTime: game.metadata.startAt,\n      duration: convertFrameCountToDurationString(game.stats.lastFrame),\n    };\n  });\n}\n\nfunction generateBtsSummary(summary) {\n  const fixedStats = [stats.KILL_MOVES, stats.NEUTRAL_OPENER_MOVES, stats.OPENINGS_PER_KILL, stats.DAMAGE_DONE];\n\n  const randomizeCount = 2;\n\n  const generateSummaryItem = (fullStatOutput) => {\n    const type = fullStatOutput.type;\n\n    const output = { ...fullStatOutput };\n    output.results = _.map(fullStatOutput.results, (result) => _.get(result, [\"simple\", type]));\n\n    return output;\n  };\n\n  const result = [];\n\n  const statsById = _.keyBy(summary, \"id\");\n  const statsToRandomizeById = statsById;\n\n  // Add fixed stats\n  _.forEach(fixedStats, (statId) => {\n    const statOutput = statsById[statId];\n    result.push(generateSummaryItem(statOutput));\n\n    delete statsToRandomizeById[statId];\n  });\n\n  // Deal with SDs\n  const sdStat = statsById[stats.SELF_DESTRUCTS];\n  const sds1 = sdStat.results[0].simple.number;\n  const sds2 = sdStat.results[0].simple.number;\n  const shouldIncludeSds = sds1 > 1 || sds2 > 1;\n  if (!shouldIncludeSds) {\n    delete statsToRandomizeById[stats.SELF_DESTRUCTS];\n  }\n\n  const shuffled = _.shuffle(statsToRandomizeById);\n  const shuffledToInclude = _.take(shuffled, randomizeCount);\n  _.forEach(shuffledToInclude, (statOutput) => {\n    result.push(generateSummaryItem(statOutput));\n  });\n\n  return result;\n}\n\nexport function convertFrameCountToDurationString(frameCount) {\n  const duration = moment.duration(frameCount / 60, \"seconds\");\n  return moment.utc(duration.as(\"milliseconds\")).format(\"m:ss\");\n}\n\nexport default function generateOutput(games) {\n  const stats = computeStats(games);\n\n  return {\n    games: generateGameInfo(games),\n    summary: stats,\n    btsSummary: generateBtsSummary(stats),\n  };\n}\n\n// function writeToFile(output) {\n//   console.log(util.inspect(output, { depth: 6, colors: true }));\n//   fs.writeFileSync('output.json', JSON.stringify(output));\n//   console.log(\"Finished writting stats to output.json!\");\n// }\n\n// export default function (games) {\n//   const filteredGames = filterGames(games);\n//   const output = generateOutput(filteredGames);\n//   writeToFile(output);\n//   console.log(output);\n//   return output;\n// }\n"],"sourceRoot":""}
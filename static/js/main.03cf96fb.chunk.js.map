{"version":3,"sources":["store/reducers.ts","store/context.tsx","components/DropPad.tsx","lib/portColor.ts","components/FileList/FileItem.tsx","components/FileList/index.tsx","lib/processStats.ts","containers/FileListInput.tsx","styles/theme.tsx","views/MainView.tsx","lib/hooks/useParam.ts","lib/hooks/useKeyPress.ts","lib/resources.ts","containers/CharDisplay/index.tsx","components/Block.tsx","components/InlineEdit/index.tsx","lib/hooks/useOnClickOutside.ts","components/TextBlock.tsx","containers/NameBlock.tsx","containers/ScoreBlock.tsx","components/GameResult/HeadToHead.tsx","components/GameResult/StageTimer.tsx","components/GameResult/index.tsx","containers/GameDisplay/index.tsx","components/Stat.tsx","containers/StatDisplay/Statistics.tsx","containers/StatDisplay/index.tsx","containers/RenderDisplay.tsx","views/RenderView.tsx","App.tsx","serviceWorker.ts","index.tsx","lib/stats.js","lib/readFile.ts","styles/images/powered-by.png"],"names":["Types","initialState","files","AppContext","createContext","state","dispatch","mainReducer","action","type","ADD_GAME","payload","filename","game","details","fileToReplace","findIndex","f","file","name","loading","SET_ERROR","error","ADD_FILE","Boolean","find","push","reducer","AppProvider","children","useReducer","Provider","value","PortColor","Container","styled","div","props","isDragAccept","isDragActive","getColor","DropPad","useDropzone","getRootProps","getInputProps","isDragReject","className","FileItem","FileList","map","key","getPortColor","portNumber","P1","P2","P3","P4","extractNameAndCode","playerPort","settings","metadata","index","player","players","playerIndex","playerTag","nametag","netplayName","get","ProcessButton","button","FileListInput","history","useHistory","useContext","React","useState","stats","onDrop","useCallback","acceptedFiles","forEach","a","readFileAsSlippiGame","generateGameDetails","finishedProcessing","buttonText","length","css","accept","disabled","onClick","search","gameDetails","filtered","filterGames","Error","generateStats","games","summary","params","lastGame","leftPlayer","rightPlayer","leftColor","port","rightColor","char1","characterId","char2","color1","characterColor","color2","lastGameDetails","leftTag","leftCode","rightTag","rightCode","name1","toUpperCase","name2","sub1","sub2","gt","leftWins","rightWins","i","console","log","gameKey","stageId","stage","id","gameDuration","duration","playerInfo","p","gameResult","join","gameValue","score","s","opk1","results","simple","text","opk2","dpo1","dpo2","nw1","nw2","playerRes","result","opponentRes","mckm1","shortName","count","mckm2","mcno1","mcno2","ipm1","ipm2","akp1","akp2","tdd1","tdd2","URLSearchParams","processStats","filter","toString","pathname","readOnly","JSON","stringify","defaultTheme","primaryColor","secondaryColor","GlobalTheme","styles","MainView","paramMap","reduce","val","min","max","randomVal","Math","random","toFixed","useParam","defaultValue","setValue","location","useLocation","useEffect","currentValue","setParam","set","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","window","addEventListener","removeEventListener","sanitize","replacement","toLowerCase","replace","getCharacterFolderFromId","color","character","charFolder","colorFolder","process","getCharacterFolderFromName","characterUtil","getCharacterName","getCharacterPortrait","folder","CharDisplay","colorParam","charParam","align","theme","imgSrc","side","getCharacterVSScreen","Block","backgroundColor","optional","show","InlineEdit","ref","handler","onSetText","textAlign","isInputActive","setIsInputActive","inputValue","setInputValue","wrapperRef","useRef","textRef","inputRef","tab","enter","esc","listener","event","current","contains","target","document","focus","style","maxWidth","onChange","e","defaultProps","TextBlock","onEdit","child","Name","Subtitle","NameBlock","nameParam","defaultName","subtitleParam","setName","sub","setSub","StyledBlock","ScoreBlock","setScore","Outer","BaseHeadImage","HeadImage","invWaypoint","waypoint","dim","imageSrc","HeadToHead","result1","result2","p1","p2","Text","span","src","StageTimer","stageIcon","stageName","stageUtil","getStageName","getStageIcon","GameResult","rest","Game","gameInfo","split","res1","res2","GameDisplay","total","parseInt","StatLabel","labelBackground","labelColor","StatContent","OuterStat","Stat","label","leftText","rightText","onLeftTextBlur","onRightTextBlur","ConnectedStat","param1","param2","field1","setField1","field2","setField2","MostCommonKillMove","MostCommonNeutralOpener","AverageKillPercent","NeutralWins","OpeningsPerKill","TotalDamageDone","Divider","StatDisplay","RenderDisplay","Header","h1","RenderView","to","textDecoration","title","href","rel","alt","poweredByImage","hot","basename","exact","path","component","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","require","stages","moveUtil","moves","characters","moment","_","OPENINGS_PER_KILL","DAMAGE_PER_OPENING","NEUTRAL_WINS","KILL_MOVES","NEUTRAL_OPENER_MOVES","EARLY_KILLS","LATE_DEATHS","SELF_DESTRUCTS","INPUTS_PER_MINUTE","AVG_KILL_PERCENT","HIGH_DAMAGE_PUNISHES","DAMAGE_DONE","statDefininitions","betterDirection","recommendedRounding","calculate","genOverallRatioStat","killMoves","flatMap","conversions","conversionsForPlayer","conversion","isForPlayer","didKill","last","killMovesByMove","groupBy","killMoveCounts","move","first","moveId","getMoveName","getMoveShortName","orderedKillMoveCounts","orderBy","topKillMove","simpleText","neutralMoves","isNeutralWin","openingType","neutralMovesByMove","neutralMoveCounts","orderedNeutralMoveCounts","topNeutralMove","oppStocks","stocks","stock","isOpp","hasEndPercent","endPercent","orderedOppStocks","earliestKillStock","number","take","playerStocks","isPlayer","orderedPlayerStocks","latestDeathStock","sdCounts","playerEndedStocks","oppKillConversions","sdSum","sum","sumBy","ratio","genSimpleFromRatio","punishes","getDamageDone","punish","startPercent","orderedPunishes","topPunish","field","fixedNum","statRatios","overallStats","keyBy","avg","averageRatios","ratios","gamesByIsSingles","nonSinglesGames","some","filePath","singlesGames","gamesByPorts","chain","ports","gamesWithSamePorts","shift","flatGames","flatten","isEmpty","computeStats","firstGame","orderIndices","indices","clone","reverse","statKey","def","iIndices","output","generateGameInfo","orderedGames","startAt","generatePlayerInfo","characterName","getCharacterColorName","gameEnd","opp","oppIndex","gameEndMethod","latestFrame","lrasInitiatorIndex","getResultForPlayer","playerInfoGen","startTime","convertFrameCountToDurationString","lastFrame","generateBtsSummary","fixedStats","generateSummaryItem","fullStatOutput","statsById","statsToRandomizeById","statId","statOutput","sdStat","sds1","sds2","shuffled","shuffle","shuffledToInclude","frameCount","utc","as","format","generateOutput","btsSummary","readFileAsArrayBuffer","data","arr","Int8Array","buf","Buffer","from","SlippiGame","getSettings","frames","getFrames","getStats","getMetadata","getLatestFrame","getGameEnd","Promise","resolve","reject","fr","FileReader","onabort","onerror","readAsBinaryString","string","this","resultString","Uint8Array","charCodeAt","buffer","readAsArrayBuffer","module","exports"],"mappings":"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","file":"static/js/main.03cf96fb.chunk.js","sourcesContent":["import SlippiGame from \"@slippi/slippi-js\";\n\nimport { GameDetails, InitialStateType } from \"./types\";\n\ntype ActionMap<M extends { [index: string]: any }> = {\n  [Key in keyof M]: M[Key] extends undefined\n    ? {\n        type: Key;\n      }\n    : {\n        type: Key;\n        payload: M[Key];\n      };\n};\n\nexport enum Types {\n  ADD_GAME = \"ADD_GAME\",\n  SET_ERROR = \"SET_ERROR\",\n  ADD_FILE = \"ADD_FILE\",\n}\n\ntype ActionPayload = {\n  [Types.ADD_GAME]: {\n    filename: string;\n    game: SlippiGame;\n    details: GameDetails;\n  };\n  [Types.SET_ERROR]: {\n    filename: string;\n    error: any;\n  };\n  [Types.ADD_FILE]: {\n    file: File;\n  };\n};\n\nexport type ReducerActions = ActionMap<ActionPayload>[keyof ActionMap<ActionPayload>];\n\nexport const reducer = (state: InitialStateType, action: ReducerActions) => {\n  switch (action.type) {\n    case Types.ADD_GAME: {\n      const { filename, game, details } = action.payload;\n      const files = state.files;\n      const fileToReplace = files.findIndex((f) => f.file.name === filename);\n      if (fileToReplace !== -1) {\n        files[fileToReplace].game = game;\n        files[fileToReplace].details = details;\n        files[fileToReplace].loading = false;\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.SET_ERROR: {\n      const { filename, error } = action.payload;\n      const files = state.files;\n      const fileToReplace = files.findIndex((f) => f.file.name === filename);\n      if (fileToReplace !== -1) {\n        files[fileToReplace].error = error;\n        files[fileToReplace].loading = false;\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    case Types.ADD_FILE: {\n      const { file } = action.payload;\n      const files = state.files;\n      const alreadyExists = Boolean(files.find((f) => f.file.name === file.name));\n      if (!alreadyExists) {\n        files.push({\n          file,\n          loading: true,\n          game: null,\n          details: null,\n        });\n      }\n      return {\n        ...state,\n        files,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import React, { createContext, Dispatch, useReducer } from \"react\";\n\nimport { reducer, ReducerActions } from \"./reducers\";\nimport { InitialStateType } from \"./types\";\n\nconst initialState: InitialStateType = {\n  files: [],\n};\n\nconst AppContext = createContext<{\n  state: InitialStateType;\n  dispatch: Dispatch<ReducerActions>;\n}>({\n  state: initialState,\n  dispatch: () => null,\n});\n\nconst mainReducer = (state: InitialStateType, action: ReducerActions) => reducer(state, action);\n\nconst AppProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(mainReducer, initialState);\n\n  return <AppContext.Provider value={{ state, dispatch }}>{children}</AppContext.Provider>;\n};\n\nexport { AppProvider, AppContext };\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { DropzoneOptions, useDropzone } from \"react-dropzone\";\n\nconst getColor = (props: any) => {\n  if (props.isDragAccept) {\n    return \"#00e676\";\n  }\n  if (props.isDragActive) {\n    return \"#2196f3\";\n  }\n  return \"#eeeeee\";\n};\n\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-width: 2px;\n  border-radius: 2px;\n  border-color: ${(props) => getColor(props)};\n  border-style: dashed;\n  background-color: #fafafa;\n  color: #bdbdbd;\n  outline: none;\n  transition: border 0.24s ease-in-out;\n`;\n\nexport const DropPad: React.FC<Partial<DropzoneOptions>> = (props) => {\n  const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone(props);\n\n  return (\n    <div className=\"container\">\n      <Container {...getRootProps({ isDragActive, isDragAccept, isDragReject })}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n      </Container>\n    </div>\n  );\n};\n","export enum PortColor {\n  P1 = \"#f52e2e\",\n  P2 = \"#5463ff\",\n  P3 = \"#ffc717\",\n  P4 = \"#1f9e40\",\n}\n\nexport function getPortColor(portNumber: number): string {\n  switch (portNumber) {\n    case 1:\n      return PortColor.P1;\n    case 2:\n      return PortColor.P2;\n    case 3:\n      return PortColor.P3;\n    case 4:\n      return PortColor.P4;\n    default:\n      return PortColor.P1;\n  }\n}\n","import React from \"react\";\nimport { ProcessedFile } from \"store/types\";\n\nexport const FileItem: React.FC<ProcessedFile> = (props) => {\n  const { file, loading, error } = props;\n  return (\n    <div>\n      {file.name} {loading && <span>processing...</span>} {error && <span>error :c</span>}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport { ProcessedFile } from \"store/types\";\n\nimport { FileItem } from \"./FileItem\";\n\nexport interface FileListProps {\n  files: ProcessedFile[];\n}\n\nexport const FileList: React.FC<FileListProps> = (props) => {\n  const { files } = props;\n  return (\n    <div>\n      {files.map((f) => (\n        <FileItem key={f.file.name} {...f} />\n      ))}\n    </div>\n  );\n};\n","import generateStats, { filterGames } from \"lib/stats\";\nimport { get } from \"lodash\";\nimport { GameDetails } from \"store/types\";\n\nimport { getPortColor } from \"./portColor\";\n\nconst extractNameAndCode = (playerPort: number, details: GameDetails) => {\n  const settings = details.settings;\n  const metadata = details.metadata;\n  const index = playerPort - 1;\n  const player = settings.players.find((player) => player.playerIndex === index);\n  const playerTag = player ? player.nametag : null;\n  const netplayName: string | null = get(metadata, [\"players\", index, \"names\", \"netplay\"], null);\n  const netplayCode: string | null = get(metadata, [\"players\", index, \"names\", \"code\"], null);\n  const name = playerTag || netplayName || \"\";\n  return [name, netplayCode || \"\"] as const;\n};\n\nexport function processStats(gameDetails: GameDetails[]): URLSearchParams {\n  const filtered = filterGames(gameDetails);\n  if (!filtered || filtered.length === 0) {\n    throw new Error(\"No valid games\");\n  }\n\n  const { games, summary } = generateStats(filtered);\n  const params: any = {}; // \"mckm1\": , \"mckm2\", \"mcno1\", \"mcno2\", \"opk1\", \"opk2\", \"tdd1\", \"tdd2\", \"dpo1\", \"dpo2\", \"ipm1\", \"ipm2\", \"akp1\", \"akp2\", \"nw1\", \"nw2\"};\n\n  // Set character info\n  const lastGame = games[games.length - 1];\n  const leftPlayer = lastGame.players[0];\n  const rightPlayer = lastGame.players[1];\n  params.leftColor = getPortColor(leftPlayer.port);\n  params.rightColor = getPortColor(rightPlayer.port);\n\n  params.char1 = leftPlayer.characterId;\n  params.char2 = rightPlayer.characterId;\n  params.color1 = leftPlayer.characterColor;\n  params.color2 = rightPlayer.characterColor;\n\n  // Set name tags\n  const lastGameDetails = filtered[filtered.length - 1];\n  const [leftTag, leftCode] = extractNameAndCode(leftPlayer.port, lastGameDetails);\n  const [rightTag, rightCode] = extractNameAndCode(rightPlayer.port, lastGameDetails);\n  params.name1 = leftTag.toUpperCase();\n  params.name2 = rightTag.toUpperCase();\n  params.sub1 = leftCode;\n  params.sub2 = rightCode;\n\n  // Set game info\n  params.gt = games.length; // Set the total number of games\n\n  // Track game wins\n  let leftWins = 0;\n  let rightWins = 0;\n\n  (games as any[]).forEach((game, i) => {\n    console.log(\"processing game: \", game);\n    const gameKey = `g${i + 1}`;\n    const stageId: number = game.stage.id;\n    const gameDuration: string = game.duration;\n    const playerInfo = game.players.map((p: any) => [p.characterId, p.characterColor, p.gameResult].join(\",\"));\n    const gameValue = [stageId, gameDuration, ...playerInfo].join(\",\");\n    console.log(`${gameKey} : ${gameValue}`);\n    params[gameKey] = gameValue;\n\n    // Increment win counts\n    if (game.players[0].gameResult === \"winner\") {\n      leftWins += 1;\n    } else if (game.players[1].gameResult === \"winner\") {\n      rightWins += 1;\n    }\n  });\n\n  params.score = `${leftWins} - ${rightWins}`;\n\n  // Set the stat values\n  (summary as any[]).forEach((s) => {\n    switch (s.id) {\n      case \"openingsPerKill\": {\n        params.opk1 = s.results[0].simple.text;\n        params.opk2 = s.results[1].simple.text;\n        break;\n      }\n      case \"damagePerOpening\": {\n        params.dpo1 = s.results[0].simple.text;\n        params.dpo2 = s.results[1].simple.text;\n        break;\n      }\n      case \"neutralWins\": {\n        params.nw1 = s.results[0].simple.text;\n        params.nw2 = s.results[1].simple.text;\n        break;\n      }\n      case \"killMoves\": {\n        console.log(s);\n        const playerRes = s.results[0].result[0];\n        const opponentRes = s.results[1].result[0];\n        params.mckm1 = `${playerRes.shortName.toUpperCase()} - ${playerRes.count}`;\n        params.mckm2 = `${opponentRes.shortName.toUpperCase()} - ${opponentRes.count}`;\n        break;\n      }\n      case \"neutralOpenerMoves\": {\n        const playerRes = s.results[0].result[0];\n        const opponentRes = s.results[1].result[0];\n        params.mcno1 = `${playerRes.shortName.toUpperCase()} - ${playerRes.count}`;\n        params.mcno2 = `${opponentRes.shortName.toUpperCase()} - ${opponentRes.count}`;\n        break;\n      }\n      case \"inputsPerMinute\": {\n        params.ipm1 = s.results[0].simple.text;\n        params.ipm2 = s.results[1].simple.text;\n        break;\n      }\n      case \"avgKillPercent\": {\n        params.akp1 = s.results[0].simple.text;\n        params.akp2 = s.results[1].simple.text;\n        break;\n      }\n      case \"damageDone\": {\n        params.tdd1 = s.results[0].simple.text;\n        params.tdd2 = s.results[1].simple.text;\n        break;\n      }\n    }\n  });\n\n  console.log(\"returning these params: \", params);\n  return new URLSearchParams(params);\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { DropPad } from \"components/DropPad\";\nimport { FileList } from \"components/FileList\";\nimport { processStats } from \"lib/processStats\";\nimport { GameDetails, generateGameDetails, readFileAsSlippiGame } from \"lib/readFile\";\nimport generateStats from \"lib/stats\";\nimport React, { useCallback, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { AppContext, Types } from \"../store\";\n\nconst ProcessButton = styled.button`\n  background: #286163;\n  border: none;\n  color: inherit;\n  cursor: pointer;\n  font: inherit;\n  padding: 1rem 0rem;\n  width: 100%;\n  font-weight: 700;\n  font-size: 3rem;\n  &:disabled {\n    opacity: 0.65;\n    cursor: not-allowed;\n  }\n`;\n\nexport const FileListInput: React.FC = () => {\n  const history = useHistory();\n  const { state, dispatch } = useContext(AppContext);\n  const [stats, setStats] = React.useState<any>(null);\n\n  const onClick = () => {\n    const gameDetails = state.files.filter((f) => f.details !== null).map((f) => f.details as GameDetails);\n    // const s = generateStats(gameDetails);\n    // setStats(s);\n    const params = processStats(gameDetails);\n    const search = \"?\" + params.toString();\n    history.push({\n      pathname: \"/render\",\n      search,\n    });\n  };\n\n  const onDrop = useCallback(\n    (acceptedFiles: File[]) => {\n      acceptedFiles.forEach(async (file) => {\n        dispatch({\n          type: Types.ADD_FILE,\n          payload: {\n            file,\n          },\n        });\n        try {\n          const game = await readFileAsSlippiGame(file);\n          const details = generateGameDetails(file.name, game);\n          dispatch({\n            type: Types.ADD_GAME,\n            payload: {\n              filename: file.name,\n              game,\n              details,\n            },\n          });\n        } catch (err) {\n          dispatch({\n            type: Types.SET_ERROR,\n            payload: {\n              filename: file.name,\n              error: err,\n            },\n          });\n        }\n      });\n    },\n    [dispatch]\n  );\n\n  const finishedProcessing = !state.files.find((f) => f.loading);\n  const ready = state.files.length === 0 || finishedProcessing;\n  const buttonText = ready ? \"COMPUTE STATS\" : \"PLEASE WAIT\";\n  return (\n    <div\n      css={css`\n        position: relative;\n        border: solid 1px black;\n        height: 500px;\n        width: 500px;\n      `}\n    >\n      <DropPad accept=\".slp\" onDrop={onDrop} />\n      <FileList files={state.files} />\n      {finishedProcessing ? <div>done</div> : <div>still processing...</div>}\n      <ProcessButton disabled={state.files.length === 0 || !finishedProcessing} onClick={onClick}>\n        {buttonText}\n      </ProcessButton>\n      <textarea readOnly value={JSON.stringify(stats, null, 2)} />\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, Global, jsx } from \"@emotion/core\";\n\nexport interface Theme {\n  primaryColor: string;\n  secondaryColor: string;\n}\n\nexport const defaultTheme: Theme = {\n  primaryColor: \"#286163\",\n  secondaryColor: \"#121020\",\n};\n\nexport const GlobalTheme: React.FC<Theme> = ({ primaryColor, secondaryColor }) => {\n  return (\n    <Global\n      styles={css`\n        body.themed {\n          background: radial-gradient(circle at center -30%, ${primaryColor}, ${secondaryColor});\n        }\n      `}\n    />\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { FileListInput } from \"containers/FileListInput\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { defaultTheme, GlobalTheme } from \"styles/theme\";\n\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nexport const MainView: React.FC = () => {\n  const history = useHistory();\n\n  const onClick = () => {\n    const params = [\"mckm1\", \"mckm2\", \"mcno1\", \"mcno2\", \"opk1\", \"opk2\", \"tdd1\", \"tdd2\", \"dpo1\", \"dpo2\", \"ipm1\", \"ipm2\"];\n    const paramMap = params.reduce((val, key) => {\n      const randomVal = getRandomArbitrary(50, 250);\n      return { ...val, [key]: randomVal.toFixed(1) };\n    }, {} as any);\n    const search = \"?\" + new URLSearchParams(paramMap).toString();\n    history.push({\n      pathname: \"/render\",\n      search,\n    });\n  };\n\n  return (\n    <div\n      css={css`\n        margin: 0 12rem;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      `}\n    >\n      <GlobalTheme {...defaultTheme} />\n      <h1>Slippi Stats</h1>\n      <button onClick={onClick}>randomize</button>\n      <FileListInput />\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport function useParam(key: string, defaultValue = \"\") {\n  const [value, setValue] = useState<string>(defaultValue);\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const currentValue = params.get(key);\n    if (currentValue !== value) {\n      setValue(currentValue || defaultValue);\n    }\n  }, [key, defaultValue, location, value]);\n\n  const setParam = (val: string) => {\n    const params = new URLSearchParams(location.search);\n    params.set(key, val);\n    const search = \"?\" + params.toString();\n    history.push({\n      pathname: location.pathname,\n      search,\n    });\n  };\n\n  return [value, setParam] as const;\n}\n","// From: https://usehooks.com/useKeyPress/\n\nimport { useEffect, useState } from \"react\";\n\nexport function useKeyPress(targetKey: any) {\n  // State for keeping track of whether key is pressed\n\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  // Add event listeners\n\n  useEffect(() => {\n    // If pressed key is our target key then set to true\n\n    function downHandler({ key }: any) {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    }\n\n    // If released key is our target key then set to false\n\n    const upHandler = ({ key }: any) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n\n    window.addEventListener(\"keydown\", downHandler);\n\n    window.addEventListener(\"keyup\", upHandler);\n\n    // Remove event listeners on cleanup\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [targetKey]); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n}\n","import { characters as characterUtil, stages as stageUtil } from \"@slippi/slippi-js\";\n\nexport type Side = \"left\" | \"right\";\n\nfunction sanitize(text: string, replacement = \"-\"): string {\n  return text.toLowerCase().replace(/[. &]+/gi, replacement);\n}\n\nfunction getCharacterFolderFromId(characterId: string | number, color?: string) {\n  const characterName = characterUtil.getCharacterName(+characterId);\n  return getCharacterFolderFromName(characterName, color);\n}\n\nfunction getCharacterFolderFromName(character: string, color = \"Default\") {\n  const charFolder = sanitize(character);\n  const colorFolder = sanitize(color);\n  return `${process.env.PUBLIC_URL}/images/characters/${charFolder}/${colorFolder}`;\n}\n\nexport function getCharacterPortrait(characterId: string | number, color?: string): string {\n  const folder = getCharacterFolderFromId(characterId, color);\n  return `${folder}/portrait.png`;\n}\n\nexport function getCharacterVSScreen(side: Side, characterId: string | number, color?: string): string {\n  const folder = getCharacterFolderFromId(characterId, color);\n  return `${folder}/vs-${side}.png`;\n}\n\nexport function getStageIcon(stageId: string | number): string {\n  const stageName = stageUtil.getStageName(+stageId);\n  return `${process.env.PUBLIC_URL}/images/stages/${stageName}.png`;\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { useParam } from \"lib/hooks\";\nimport { getCharacterVSScreen, Side } from \"lib/resources\";\nimport React from \"react\";\n\nexport interface CharDisplayProps {\n  colorParam: string;\n  charParam: string;\n  align: Side;\n  theme: string;\n}\n\nexport const CharDisplay: React.FC<CharDisplayProps> = (props) => {\n  const { colorParam, charParam, align, theme } = props;\n  const [color] = useParam(colorParam);\n  const [char] = useParam(charParam);\n  const facing: Side = align === \"left\" ? \"right\" : \"left\";\n  const imgSrc = getCharacterVSScreen(facing, char, color);\n  return (\n    <div\n      css={css`\n        height: 80%;\n        width: 100%;\n        position: relative;\n        background: radial-gradient(circle at center -30%, ${theme}, transparent);\n        &::after {\n          content: ' ';\n          position: absolute;\n          height: 100%;\n          width: 100%;\n          background-image: url(\"${imgSrc}\");\n          background-repeat: no-repeat;\n          background-size: cover;\n          background-position: top ${align};\n        }\n      `}\n    ></div>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const Block = styled.div<{\n  color: string;\n  backgroundColor: string;\n  optional?: boolean;\n  show?: boolean;\n}>`\n  color: ${(p) => p.color};\n  background-color: ${(p) => p.backgroundColor};\n  text-align: center;\n  padding: 0.3em 0;\n  font-size: 1.2em;\n  box-shadow: 0.2em 0.2em 0.2em black;\n  ${(p) =>\n    p.optional &&\n    `\n  opacity: ${p.show ? 1 : 0};\n  transition: opacity 0.1s ease-in-out;\n  &:hover {\n    opacity: 1;\n  }\n  `};\n`;\n","// From: https://dev.to/joelmturner/build-an-inline-edit-text-input-with-react-hooks-4nah\n\nimport \"./index.scss\";\n\nimport { useKeyPress, useOnClickOutside } from \"lib/hooks\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nexport interface InlineEditProps {\n  text: string;\n  textAlign?: \"left\" | \"right\";\n  onSetText: (text: string) => void;\n}\n\nexport const InlineEdit: React.FC<InlineEditProps> = (props) => {\n  const { text, onSetText, textAlign } = props;\n  const [isInputActive, setIsInputActive] = useState(false);\n  const [inputValue, setInputValue] = useState(text);\n\n  const wrapperRef = useRef(null);\n  const textRef = useRef(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const tab = useKeyPress(\"Tab\");\n  const enter = useKeyPress(\"Enter\");\n  const esc = useKeyPress(\"Escape\");\n\n  useEffect(() => {\n    setInputValue(text);\n  }, [text]);\n\n  // check to see if the user clicked outside of this component\n  useOnClickOutside(wrapperRef, () => {\n    if (isInputActive) {\n      onSetText(inputValue);\n      setIsInputActive(false);\n    }\n  });\n\n  // focus the cursor in the input field on edit start\n  useEffect(() => {\n    if (isInputActive && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isInputActive]);\n\n  useEffect(() => {\n    if (isInputActive) {\n      // if Enter or tab is pressed, save the text and case the editor\n      if (enter || tab) {\n        onSetText(inputValue);\n        setIsInputActive(false);\n      }\n      // if Escape is pressed, revert the text and close the editor\n      if (esc) {\n        setInputValue(props.text);\n        setIsInputActive(false);\n      }\n    }\n  }, [tab, enter, esc, isInputActive, onSetText, inputValue, props.text]); // watch for key presses\n\n  return (\n    <span className=\"inline-text\" ref={wrapperRef}>\n      <span\n        ref={textRef}\n        onClick={() => setIsInputActive(true)}\n        className={`inline-text_copy inline-text_copy--${!isInputActive ? \"active\" : \"hidden\"}`}\n      >\n        {props.text}\n      </span>\n      <input\n        ref={inputRef}\n        style={{ textAlign, maxWidth: \"100%\" }}\n        value={inputValue}\n        onChange={(e) => {\n          setInputValue(e.target.value);\n        }}\n        className={`inline-text_input inline-text_input--${isInputActive ? \"active\" : \"hidden\"}`}\n      />\n    </span>\n  );\n};\n\nInlineEdit.defaultProps = {\n  text: \"\",\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onSetText: () => {},\n};\n","// From: https://usehooks.com/useOnClickOutside/\n\nimport { useEffect } from \"react\";\n\nexport function useOnClickOutside(ref: any, handler: any) {\n  useEffect(\n    () => {\n      const listener = (event: any) => {\n        // Do nothing if clicking ref's element or descendent elements\n\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener(\"mousedown\", listener);\n\n      document.addEventListener(\"touchstart\", listener);\n\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    },\n\n    // Add ref and handler to effect dependencies\n\n    // It's worth noting that because passed in handler is a new ...\n\n    // ... function on every render that will cause this effect ...\n\n    // ... callback/cleanup to run every render. It's not a big deal ...\n\n    // ... but to optimize you can wrap handler in useCallback before ...\n\n    // ... passing it into this hook.\n\n    [ref, handler]\n  );\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\n\nimport { Block } from \"./Block\";\nimport { InlineEdit } from \"./InlineEdit\";\n\nexport interface TextBlockProps {\n  color: string;\n  backgroundColor: string;\n  value: string;\n  optional?: boolean;\n  onEdit?: (val: string) => void;\n}\n\nexport const TextBlock: React.FC<TextBlockProps> = ({ optional, onEdit, backgroundColor, value, color }) => {\n  const child = onEdit ? <InlineEdit text={value} onSetText={onEdit} /> : value;\n  return (\n    <Block optional={optional} show={Boolean(value)} color={color} backgroundColor={backgroundColor}>\n      {child}\n    </Block>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nimport { TextBlock } from \"../components/TextBlock\";\n\nconst Name = styled.div`\n  font-size: 150%;\n  font-weight: 800;\n`;\n\nconst Subtitle = styled.div<{\n  show?: boolean;\n}>`\n  margin-top: -0.3rem;\n  margin-left: auto;\n  margin-right: auto;\n  width: 80%;\n`;\n\nexport interface NameBlockProps {\n  nameParam: string;\n  defaultName: string;\n  subtitleParam: string;\n  primaryColor: string;\n  secondaryColor: string;\n}\n\nexport const NameBlock: React.FC<NameBlockProps> = ({\n  nameParam,\n  defaultName,\n  subtitleParam,\n  primaryColor,\n  secondaryColor,\n}) => {\n  const [name, setName] = useParam(nameParam, defaultName);\n  const [sub, setSub] = useParam(subtitleParam);\n  return (\n    <div>\n      <Name>\n        <TextBlock value={name} onEdit={setName} color=\"white\" backgroundColor={primaryColor} />\n      </Name>\n      <Subtitle>\n        <TextBlock value={sub} optional={true} onEdit={setSub} color={secondaryColor} backgroundColor=\"white\" />\n      </Subtitle>\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { Block } from \"components/Block\";\nimport { InlineEdit } from \"components/InlineEdit\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nexport interface ScoreBlockProps {\n  primaryColor: string;\n}\n\nconst StyledBlock = styled(Block)`\n  padding: 0.5rem 4rem;\n  font-size: 5rem;\n  font-weight: 800;\n`;\n\nexport const ScoreBlock: React.FC<ScoreBlockProps> = (props) => {\n  const [score, setScore] = useParam(\"score\", \"0 - 0\");\n  return (\n    <StyledBlock color=\"white\" backgroundColor={props.primaryColor}>\n      <InlineEdit text={score} onSetText={setScore} />\n    </StyledBlock>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { getCharacterPortrait } from \"lib/resources\";\nimport React from \"react\";\n\nconst Outer = styled.div`\n  position: relative;\n  display: block;\n  border: solid 0.1rem rgba(255, 255, 255, 0.3);\n  height: 5rem;\n  width: 100%;\n  max-width: 10rem;\n`;\n\nconst BaseHeadImage = styled.div`\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  &::after {\n    content: \" \";\n    height: 100%;\n    background-repeat: no-repeat;\n    background-size: cover;\n    position: absolute;\n  }\n`;\n\nconst HeadImage = styled(BaseHeadImage)<{\n  backgroundColor?: string;\n  imageSrc: string;\n  side: \"left\" | \"right\";\n  waypoint: number;\n  dim?: boolean;\n}>`\n  ${(p) => {\n    const invWaypoint = 100 - p.waypoint;\n    return `\n      ${p.side === \"right\" ? `clip-path: polygon(${p.waypoint}% 0, 100% 0, 100% 100%, ${invWaypoint}% 100%);` : \"\"}\n      ${p.dim ? \"filter: brightness(25%);\" : \"\"}\n      ${p.backgroundColor ? `background: radial-gradient(circle at center -30%, ${p.backgroundColor}, black);` : \"\"}\n      &::after {\n        width: ${p.waypoint}%;\n        background-image: url(\"${p.imageSrc}\");\n        background-position: top ${p.side};\n        ${p.side === \"right\" ? `left: ${invWaypoint}%;` : \"transform: scaleX(-1);\"}\n      }\n    `;\n  }}\n`;\n\nexport interface HeadToHeadProps {\n  char1: number | string;\n  color1: string;\n  result1: string;\n  char2: number | string;\n  color2: string;\n  result2: string;\n  leftColor: string;\n  rightColor: string;\n}\n\nexport const HeadToHead: React.FC<HeadToHeadProps> = ({\n  char1,\n  color1,\n  result1,\n  char2,\n  color2,\n  result2,\n  leftColor,\n  rightColor,\n}) => {\n  const waypoint = 55;\n  const p1 = getCharacterPortrait(char1, color1);\n  const p2 = getCharacterPortrait(char2, color2);\n\n  return (\n    <Outer>\n      <HeadImage backgroundColor={leftColor} imageSrc={p1} waypoint={waypoint} side=\"left\" dim={result1 === \"loser\"} />\n      <HeadImage\n        backgroundColor={rightColor}\n        imageSrc={p2}\n        waypoint={waypoint}\n        side=\"right\"\n        dim={result2 === \"loser\"}\n      />\n    </Outer>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { getStageIcon } from \"lib/resources\";\nimport React from \"react\";\n\ninterface StageTimerProps {\n  stageId: string | number;\n  duration: string;\n}\n\nconst Text = styled.span`\n  font-size: 2.5rem;\n  font-weight: bold;\n  opacity: 0.7;\n  text-shadow: 2px 2px 2px black;\n`;\n\nconst Outer = styled.div<{\n  src: string;\n}>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  height: 9rem;\n  width: 100%;\n  border: solid 1px rgba(255, 255, 255, 0.3);\n  z-index: 0;\n\n  &::after {\n    content: ' ';\n    height: 100%;\n    width: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-image: url(\"${(p) => p.src}\");\n    background-repeat: no-repeat;\n    background-size: 105% auto;\n    background-position: center;\n    filter: blur(2px) brightness(30%);\n    z-index: -1;\n  }\n`;\n\nexport const StageTimer: React.FC<StageTimerProps> = ({ stageId, duration }) => {\n  const stageIcon = getStageIcon(stageId);\n  return (\n    <Outer src={stageIcon}>\n      <Text>{duration}</Text>\n    </Outer>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React from \"react\";\n\nimport { HeadToHead } from \"./HeadToHead\";\nimport { StageTimer } from \"./StageTimer\";\n\nexport interface GameResultProps {\n  stageId: string;\n  duration: string;\n  char1: number | string;\n  color1: string;\n  result1: string;\n  char2: number | string;\n  color2: string;\n  result2: string;\n  leftColor: string;\n  rightColor: string;\n}\n\nexport const GameResult: React.FC<GameResultProps> = (props) => {\n  const { stageId, duration, ...rest } = props;\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-template-columns: 100%;\n        justify-items: center;\n        width: 100%;\n        max-width: 18rem;\n        grid-row-gap: 2rem;\n      `}\n    >\n      <HeadToHead {...rest} />\n      <StageTimer stageId={stageId} duration={duration} />\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { GameResult } from \"components/GameResult\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\nconst Game: React.FC<{\n  index: number;\n  leftColor: string;\n  rightColor: string;\n}> = ({ index, leftColor, rightColor }) => {\n  const [gameInfo] = useParam(`g${index}`);\n  // The game info starts off undefined\n  if (!gameInfo) {\n    return null;\n  }\n\n  const [stageId, duration, char1, color1, res1, char2, color2, res2] = gameInfo.split(\",\");\n  return (\n    <GameResult\n      stageId={stageId}\n      duration={duration}\n      char1={char1}\n      color1={color1}\n      result1={res1}\n      char2={char2}\n      color2={color2}\n      result2={res2}\n      leftColor={leftColor}\n      rightColor={rightColor}\n    />\n  );\n};\n\nexport const GameDisplay: React.FC<{\n  leftColor: string;\n  rightColor: string;\n}> = (props) => {\n  const [gt] = useParam(`gt`);\n  const total = parseInt(gt, 10) || 0;\n\n  const games = [];\n  for (let i = 1; i <= total; i++) {\n    games.push(<Game key={`g${i}`} index={i} leftColor={props.leftColor} rightColor={props.rightColor} />);\n  }\n\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-column-gap: 2rem;\n        grid-template-columns: repeat(${total}, 1fr);\n        justify-items: center;\n      `}\n    >\n      {games}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\n\nimport { InlineEdit } from \"./InlineEdit\";\n\nexport interface StatProps {\n  type?: \"text\" | \"number\";\n  label: string;\n  labelColor?: string;\n  labelBackground?: string;\n  leftText: string;\n  rightText: string;\n  onLeftTextBlur?: (text: string) => void;\n  onRightTextBlur?: (text: string) => void;\n}\n\nconst StatLabel = styled.div<{\n  labelBackground: string;\n  labelColor: string;\n}>`\n  text-align: center;\n  background-color: ${(p) => p.labelBackground};\n  color: ${(p) => p.labelColor};\n  padding: 0.3em 2.5em;\n  font-weight: 700;\n  font-size: 1.2em;\n  box-shadow: 0.2em 0.2em 0.2em black;\n  justify-self: center;\n  z-index: 1;\n`;\n\nconst StatContent = styled.div<{\n  type: \"text\" | \"number\";\n}>`\n  width: 100%;\n  font-weight: 800;\n  font-size: ${(p) => (p.type === \"text\" ? \"1.4em\" : \"2.3em\")};\n`;\n\nconst OuterStat = styled.div`\n  display: grid;\n  grid-template-columns: 20% 60% 20%;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  &::before {\n    z-index: -1;\n    content: \"\";\n    display: block;\n    background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.4), transparent);\n    height: 0.1rem;\n    position: absolute;\n    width: 80%;\n    margin-left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nexport const Stat: React.FC<StatProps> = (props) => {\n  const { type, label, leftText, rightText, labelBackground, labelColor } = props;\n  return (\n    <OuterStat>\n      <StatContent\n        type={type!}\n        css={css`\n          justify-self: start;\n        `}\n      >\n        <InlineEdit text={leftText} onSetText={props.onLeftTextBlur!} />\n      </StatContent>\n      <StatLabel labelBackground={labelBackground!} labelColor={labelColor!}>\n        {label}\n      </StatLabel>\n      <StatContent\n        type={type!}\n        css={css`\n          justify-self: end;\n          text-align: right;\n        `}\n      >\n        <InlineEdit text={rightText} textAlign=\"right\" onSetText={props.onRightTextBlur!} />\n      </StatContent>\n    </OuterStat>\n  );\n};\n\nStat.defaultProps = {\n  type: \"number\",\n  labelColor: \"black\",\n  labelBackground: \"white\",\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onLeftTextBlur: () => {},\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onRightTextBlur: () => {},\n};\n","import { Stat } from \"components/Stat\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\n\ninterface ThemeProps {\n  primaryColor: string;\n  secondaryColor: string;\n}\n\ninterface ConnectedStatProps extends ThemeProps {\n  param1: string;\n  param2: string;\n  label: string;\n  type?: \"text\" | \"number\";\n}\n\nconst ConnectedStat: React.FC<ConnectedStatProps> = (props) => {\n  const { param1, param2, label, type, primaryColor, secondaryColor } = props;\n  const defaultValue = type === \"number\" ? \"0\" : \"-\";\n  const [field1, setField1] = useParam(param1, defaultValue);\n  const [field2, setField2] = useParam(param2, defaultValue);\n  const labelColor = type === \"number\" ? secondaryColor : \"white\";\n  const labelBackground = type === \"number\" ? \"white\" : primaryColor;\n  return (\n    <Stat\n      type={type}\n      leftText={field1}\n      onLeftTextBlur={(text) => setField1(text)}\n      label={label}\n      rightText={field2}\n      onRightTextBlur={(text) => setField2(text)}\n      labelColor={labelColor}\n      labelBackground={labelBackground}\n    />\n  );\n};\n\nConnectedStat.defaultProps = {\n  type: \"number\",\n};\n\nexport const MostCommonKillMove: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat type=\"text\" param1=\"mckm1\" param2=\"mckm2\" label=\"MOST COMMON KILL MOVE\" {...props} />;\n};\n\nexport const MostCommonNeutralOpener: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat type=\"text\" param1=\"mcno1\" param2=\"mcno2\" label=\"MOST COMMON NEUTRAL OPENER\" {...props} />;\n};\n\nexport const AverageKillPercent: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat param1=\"akp1\" param2=\"akp2\" label=\"AVERAGE KILL PERCENT\" {...props} />;\n};\n\nexport const NeutralWins: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat param1=\"nw1\" param2=\"nw2\" label=\"NEUTRAL WINS\" {...props} />;\n};\n\nexport const DamagePerOpening: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat param1=\"dpo1\" param2=\"dpo2\" label=\"DAMAGE / OPENING\" {...props} />;\n};\n\nexport const InputsPerMinute: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat param1=\"ipm1\" param2=\"ipm2\" label=\"INPUTS / MINUTE\" {...props} />;\n};\n\nexport const OpeningsPerKill: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat param1=\"opk1\" param2=\"opk2\" label=\"OPENINGS / KILL\" {...props} />;\n};\n\nexport const TotalDamageDone: React.FC<ThemeProps> = (props) => {\n  return <ConnectedStat param1=\"tdd1\" param2=\"tdd2\" label=\"TOTAL DAMAGE DONE\" {...props} />;\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\n\nimport { GameDisplay } from \"../GameDisplay\";\nimport {\n  AverageKillPercent,\n  DamagePerOpening,\n  InputsPerMinute,\n  MostCommonKillMove,\n  MostCommonNeutralOpener,\n  NeutralWins,\n  OpeningsPerKill,\n  TotalDamageDone,\n} from \"./Statistics\";\n\nconst Divider = styled.div`\n  content: \" \";\n  display: block;\n  height: 0.1rem;\n  width: 100%;\n  margin-top: 0.7rem;\n  background-color: rgba(255, 255, 255, 0.05);\n`;\n\nexport const StatDisplay: React.FC<{\n  primaryColor: string;\n  secondaryColor: string;\n  leftColor: string;\n  rightColor: string;\n}> = (props) => {\n  const { leftColor, rightColor, ...theme } = props;\n  return (\n    <div\n      css={css`\n        background: linear-gradient(to right, ${props.secondaryColor}, transparent, ${props.secondaryColor});\n        width: 100%;\n      `}\n    >\n      <div\n        css={css`\n          display: grid;\n          grid-template-columns: 100%;\n          grid-row-gap: 2rem;\n          margin: 4rem;\n        `}\n      >\n        <MostCommonKillMove {...theme} />\n        <MostCommonNeutralOpener {...theme} />\n        <Divider />\n        <OpeningsPerKill {...theme} />\n        <TotalDamageDone {...theme} />\n        <AverageKillPercent {...theme} />\n        <NeutralWins {...theme} />\n        <Divider />\n        <GameDisplay leftColor={leftColor} rightColor={rightColor} />\n      </div>\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { useParam } from \"lib/hooks\";\nimport { PortColor } from \"lib/portColor\";\nimport React from \"react\";\nimport { Theme } from \"styles/theme\";\n\nimport { CharDisplay } from \"./CharDisplay\";\nimport { NameBlock } from \"./NameBlock\";\nimport { ScoreBlock } from \"./ScoreBlock\";\nimport { StatDisplay } from \"./StatDisplay\";\n\nconst Outer = styled.div`\n  position: relative;\n  width: 100%;\n  display: grid;\n  grid-template-columns: 20% 60% 20%;\n`;\n\nexport const RenderDisplay: React.FC<Theme> = (theme) => {\n  const [leftColor] = useParam(\"leftColor\", PortColor.P1);\n  const [rightColor] = useParam(\"rightColor\", PortColor.P2);\n  return (\n    <Outer>\n      <div\n        css={css`\n          justify-self: end;\n          width: 100%;\n        `}\n      >\n        <CharDisplay theme={leftColor} charParam=\"char1\" colorParam=\"color1\" align=\"right\" />\n      </div>\n      <StatDisplay leftColor={leftColor} rightColor={rightColor} {...theme} />\n      <div\n        css={css`\n          width: 100%;\n        `}\n      >\n        <CharDisplay theme={rightColor} charParam=\"char2\" colorParam=\"color2\" align=\"left\" />\n      </div>\n      <div\n        css={css`\n          position: absolute;\n          bottom: 15%;\n          display: inline-flex;\n          width: 98%;\n          margin: 0 1%;\n        `}\n      >\n        <div\n          css={css`\n            width: 100%;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n          `}\n        >\n          <div\n            css={css`\n              width: 20%;\n            `}\n          >\n            <NameBlock nameParam=\"name1\" subtitleParam=\"sub1\" defaultName=\"Player\" {...theme} />\n          </div>\n          <div\n            css={css`\n              width: 20%;\n            `}\n          >\n            <NameBlock nameParam=\"name2\" subtitleParam=\"sub2\" defaultName=\"Player\" {...theme} />\n          </div>\n        </div>\n      </div>\n      <div\n        css={css`\n          position: absolute;\n          bottom: -6rem;\n          width: 100%;\n          display: flex;\n          justify-content: center;\n        `}\n      >\n        <ScoreBlock primaryColor={theme.primaryColor} />\n      </div>\n    </Outer>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { useParam } from \"lib/hooks\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { defaultTheme, GlobalTheme } from \"styles/theme\";\n\nimport { RenderDisplay } from \"../containers/RenderDisplay\";\nimport poweredByImage from \"../styles/images/powered-by.png\";\n\nconst Header = styled.h1`\n  text-transform: uppercase;\n  font-weight: 800;\n  font-size: 5.5rem;\n  margin: 2rem;\n  padding-bottom: 1rem;\n  position: relative;\n\n  &::before {\n    z-index: -1;\n    content: \"\";\n    display: block;\n    background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.2), transparent);\n    height: 0.1rem;\n    position: absolute;\n    width: 80%;\n    margin-left: 50%;\n    transform: translateX(-50%);\n    bottom: 0;\n  }\n`;\n\nexport const RenderView: React.FC = () => {\n  const [primaryColor] = useParam(\"primaryColor\", defaultTheme.primaryColor);\n  const [secondaryColor] = useParam(\"secondaryColor\", defaultTheme.secondaryColor);\n  return (\n    <div\n      css={css`\n        margin: 0 12rem;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      `}\n    >\n      <GlobalTheme primaryColor={primaryColor} secondaryColor={secondaryColor} />\n      <Link to=\"/\" style={{ textDecoration: \"inherit\", color: \"inherit\" }} title=\"Back to homepage\">\n        <Header>Post Match Stats</Header>\n      </Link>\n      <div\n        css={css`\n          margin-bottom: 2rem;\n        `}\n      >\n        <a href=\"https://slippi.gg\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img\n            alt=\"Powered by Slippi\"\n            title=\"Open Slippi.gg homepage\"\n            src={poweredByImage}\n            css={css`\n              max-height: 5rem;\n            `}\n          />\n        </a>\n      </div>\n      <RenderDisplay primaryColor={primaryColor} secondaryColor={secondaryColor} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { hot } from \"react-hot-loader/root\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport { AppProvider } from \"./store\";\nimport { MainView } from \"./views/MainView\";\nimport { RenderView } from \"./views/RenderView\";\n\nconst App: React.FC = () => {\n  return (\n    <AppProvider>\n      <Router basename=\"/\">\n        <Route exact path=\"/\" component={MainView} />\n        <Route path=\"/render\" component={RenderView} />\n      </Router>\n    </AppProvider>\n  );\n};\n\nexport default hot(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"./index.scss\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* eslint-disable */\n\n/*\n * Taken from: https://github.com/project-slippi/slippi-set-stats/blob/master/main.js\n */\n\nconst { stages: stageUtil, moves: moveUtil, characters: characterUtil } = require(\"@slippi/slippi-js\");\nconst moment = require(\"moment\");\nconst _ = require(\"lodash\");\n\nconst stats = {\n  OPENINGS_PER_KILL: \"openingsPerKill\",\n  DAMAGE_PER_OPENING: \"damagePerOpening\",\n  NEUTRAL_WINS: \"neutralWins\",\n  KILL_MOVES: \"killMoves\",\n  NEUTRAL_OPENER_MOVES: \"neutralOpenerMoves\",\n  EARLY_KILLS: \"earlyKills\",\n  LATE_DEATHS: \"lateDeaths\",\n  SELF_DESTRUCTS: \"selfDestructs\",\n  INPUTS_PER_MINUTE: \"inputsPerMinute\",\n  AVG_KILL_PERCENT: \"avgKillPercent\",\n  HIGH_DAMAGE_PUNISHES: \"highDamagePunishes\",\n  DAMAGE_DONE: \"damageDone\",\n};\n\nconst statDefininitions = {\n  [stats.OPENINGS_PER_KILL]: {\n    id: stats.OPENINGS_PER_KILL,\n    name: \"Openings / Kill\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"openingsPerKill\", 1);\n    },\n  },\n  [stats.DAMAGE_PER_OPENING]: {\n    id: stats.DAMAGE_PER_OPENING,\n    name: \"Damage / Opening\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"damagePerOpening\", 1);\n    },\n  },\n  [stats.NEUTRAL_WINS]: {\n    id: stats.NEUTRAL_WINS,\n    name: \"Neutral Wins\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 0,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"neutralWinRatio\", 0, \"count\");\n    },\n  },\n  [stats.KILL_MOVES]: {\n    id: stats.KILL_MOVES,\n    name: \"Most Common Kill Move\",\n    type: \"text\",\n    calculate: (games, playerIndex) => {\n      const killMoves = _.flatMap(games, (game) => {\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        const conversionsForPlayer = _.filter(conversions, (conversion) => {\n          const isForPlayer = conversion.playerIndex === playerIndex;\n          const didKill = conversion.didKill;\n          return isForPlayer && didKill;\n        });\n\n        return _.map(conversionsForPlayer, (conversion) => {\n          return _.last(conversion.moves);\n        });\n      });\n\n      const killMovesByMove = _.groupBy(killMoves, \"moveId\");\n      const killMoveCounts = _.map(killMovesByMove, (moves) => {\n        const move = _.first(moves);\n        return {\n          count: moves.length,\n          id: move.moveId,\n          name: moveUtil.getMoveName(move.moveId),\n          shortName: moveUtil.getMoveShortName(move.moveId),\n        };\n      });\n\n      const orderedKillMoveCounts = _.orderBy(killMoveCounts, [\"count\"], [\"desc\"]);\n      const topKillMove = _.first(orderedKillMoveCounts);\n      let simpleText = \"N/A\";\n      if (topKillMove) {\n        simpleText = `${topKillMove.shortName} (${topKillMove.count})`;\n      }\n\n      return {\n        result: orderedKillMoveCounts,\n        simple: {\n          text: simpleText,\n        },\n      };\n    },\n  },\n  [stats.NEUTRAL_OPENER_MOVES]: {\n    id: stats.NEUTRAL_OPENER_MOVES,\n    name: \"Most Common Neutral Opener\",\n    type: \"text\",\n    calculate: (games, playerIndex) => {\n      const neutralMoves = _.flatMap(games, (game) => {\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        const conversionsForPlayer = _.filter(conversions, (conversion) => {\n          const isForPlayer = conversion.playerIndex === playerIndex;\n          const isNeutralWin = conversion.openingType === \"neutral-win\";\n          return isForPlayer && isNeutralWin;\n        });\n\n        return _.map(conversionsForPlayer, (conversion) => {\n          return _.first(conversion.moves);\n        });\n      });\n\n      // TODO: This following code is repeated from kill move code, put in function\n\n      const neutralMovesByMove = _.groupBy(neutralMoves, \"moveId\");\n      const neutralMoveCounts = _.map(neutralMovesByMove, (moves) => {\n        const move = _.first(moves);\n        return {\n          count: moves.length,\n          id: move.moveId,\n          name: moveUtil.getMoveName(move.moveId),\n          shortName: moveUtil.getMoveShortName(move.moveId),\n        };\n      });\n\n      const orderedNeutralMoveCounts = _.orderBy(neutralMoveCounts, [\"count\"], [\"desc\"]);\n      const topNeutralMove = _.first(orderedNeutralMoveCounts);\n      let simpleText = \"N/A\";\n      if (topNeutralMove) {\n        simpleText = `${topNeutralMove.shortName} (${topNeutralMove.count})`;\n      }\n\n      return {\n        result: orderedNeutralMoveCounts,\n        simple: {\n          text: simpleText,\n        },\n      };\n    },\n  },\n  [stats.EARLY_KILLS]: {\n    id: stats.EARLY_KILLS,\n    name: \"Earliest Kill\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const oppStocks = _.flatMap(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        return _.filter(stocks, (stock) => {\n          const isOpp = stock.playerIndex !== playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isOpp && hasEndPercent;\n        });\n      });\n\n      const orderedOppStocks = _.orderBy(oppStocks, [\"endPercent\"], [\"asc\"]);\n      const earliestKillStock = _.first(orderedOppStocks);\n      const simple = {\n        text: \"N/A\",\n        number: null,\n      };\n\n      if (earliestKillStock) {\n        simple.number = earliestKillStock.endPercent;\n        simple.text = simple.number.toFixed(1);\n      }\n\n      return {\n        result: _.take(orderedOppStocks, 5),\n        simple: simple,\n      };\n    },\n  },\n  [stats.LATE_DEATHS]: {\n    id: stats.LATE_DEATHS,\n    name: \"Latest Death\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const playerStocks = _.flatMap(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        return _.filter(stocks, (stock) => {\n          const isPlayer = stock.playerIndex === playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isPlayer && hasEndPercent;\n        });\n      });\n\n      const orderedPlayerStocks = _.orderBy(playerStocks, [\"endPercent\"], [\"desc\"]);\n      const latestDeathStock = _.first(orderedPlayerStocks);\n      const simple = {\n        text: \"N/A\",\n        number: null,\n      };\n\n      if (latestDeathStock) {\n        simple.number = latestDeathStock.endPercent;\n        simple.text = simple.number.toFixed(1);\n      }\n\n      return {\n        result: _.take(orderedPlayerStocks, 5),\n        simple: simple,\n      };\n    },\n  },\n  [stats.SELF_DESTRUCTS]: {\n    id: stats.SELF_DESTRUCTS, // Only show this one if greater than 2 for one player\n    name: \"Total Self-Destructs\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 0,\n    calculate: (games, playerIndex) => {\n      const sdCounts = _.map(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        const playerEndedStocks = _.filter(stocks, (stock) => {\n          const isPlayer = stock.playerIndex === playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isPlayer && hasEndPercent;\n        });\n\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        const oppKillConversions = _.filter(conversions, (conversion) => {\n          const isOpp = conversion.playerIndex !== playerIndex;\n          const didKill = conversion.didKill;\n          return isOpp && didKill;\n        });\n\n        return playerEndedStocks.length - oppKillConversions.length;\n      });\n\n      const sdSum = _.sum(sdCounts);\n\n      return {\n        result: sdSum,\n        simple: {\n          number: sdSum,\n          text: `${sdSum}`,\n        },\n      };\n    },\n  },\n  [stats.INPUTS_PER_MINUTE]: {\n    id: stats.INPUTS_PER_MINUTE,\n    name: \"Inputs / Minute\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"inputsPerMinute\", 1);\n    },\n  },\n  [stats.AVG_KILL_PERCENT]: {\n    id: stats.AVG_KILL_PERCENT,\n    name: \"Average Kill Percent\",\n    type: \"number\",\n    betterDirection: \"lower\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const oppStocks = _.flatMap(games, (game) => {\n        const stocks = _.get(game, [\"stats\", \"stocks\"]) || [];\n        return _.filter(stocks, (stock) => {\n          const isOpp = stock.playerIndex !== playerIndex;\n          const hasEndPercent = stock.endPercent !== null;\n          return isOpp && hasEndPercent;\n        });\n      });\n\n      const result = {\n        total: oppStocks.length,\n        count: _.sumBy(oppStocks, \"endPercent\") || 0,\n      };\n\n      result.ratio = result.total ? result.count / result.total : null;\n\n      return {\n        result: result,\n        simple: genSimpleFromRatio(result, 1),\n      };\n    },\n  },\n  [stats.HIGH_DAMAGE_PUNISHES]: {\n    id: stats.HIGH_DAMAGE_PUNISHES,\n    name: \"Highest Damage Punish\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      const punishes = _.flatMap(games, (game) => {\n        const conversions = _.get(game, [\"stats\", \"conversions\"]) || [];\n        return _.filter(conversions, (conversion) => {\n          const isForPlayer = conversion.playerIndex === playerIndex;\n          const hasEndPercent = conversion.endPercent !== null;\n          return isForPlayer && hasEndPercent;\n        });\n      });\n\n      const getDamageDone = (punish) => punish.endPercent - punish.startPercent;\n      const orderedPunishes = _.orderBy(punishes, [getDamageDone], \"desc\");\n      const topPunish = _.first(orderedPunishes);\n      const simple = {\n        text: \"N/A\",\n        number: null,\n      };\n\n      if (topPunish) {\n        simple.number = getDamageDone(topPunish);\n        simple.text = simple.number.toFixed(1);\n      }\n\n      return {\n        result: _.take(orderedPunishes, 5),\n        simple: simple,\n      };\n    },\n  },\n  [stats.DAMAGE_DONE]: {\n    id: stats.DAMAGE_DONE,\n    name: \"Total Damage Done\",\n    type: \"number\",\n    betterDirection: \"higher\",\n    recommendedRounding: 1,\n    calculate: (games, playerIndex) => {\n      return genOverallRatioStat(games, playerIndex, \"damagePerOpening\", 1, \"count\");\n    },\n  },\n};\n\nfunction genOverallRatioStat(games, playerIndex, field, fixedNum, type = \"ratio\") {\n  const statRatios = _.map(games, (game) => {\n    const overallStats = _.get(game, [\"stats\", \"overall\"]);\n    const overallStatsByPlayer = _.keyBy(overallStats, \"playerIndex\");\n    const overallStatsForPlayer = overallStatsByPlayer[playerIndex];\n    return overallStatsForPlayer[field];\n  });\n\n  const avg = averageRatios(statRatios);\n  const simple = genSimpleFromRatio(avg, fixedNum, type);\n\n  return {\n    result: avg,\n    simple: simple,\n  };\n}\n\nfunction averageRatios(ratios) {\n  const result = {};\n\n  result.count = _.sumBy(ratios, \"count\") || 0;\n  result.total = _.sumBy(ratios, \"total\") || 0;\n  result.ratio = result.total ? result.count / result.total : null;\n\n  return result;\n}\n\nfunction genSimpleFromRatio(ratio, fixedNum, type = \"ratio\") {\n  const result = {};\n\n  switch (type) {\n    case \"ratio\":\n      result.number = ratio.ratio;\n      result.text = ratio.ratio !== null ? ratio.ratio.toFixed(fixedNum) : \"N/A\";\n      break;\n    case \"count\":\n      result.number = ratio.count;\n      result.text = ratio.count.toFixed(fixedNum);\n      break;\n  }\n\n  return result;\n}\n\n/*\nfunction parseFilesInFolder() {\n  const dirPath = process.cwd();\n  const dirContents = fs.readdirSync(dirPath, { withFileTypes: true });\n\n  console.log(\"Reading files in directory...\\n\");\n  const gameDetails = _.chain(dirContents).filter((item) => {\n    return item.isFile() && path.extname(item.name) === \".slp\";\n  }).map((slpItem) => {\n    const slpFilePath = path.join(dirPath, slpItem.name);\n    const game = new SlippiGame(slpFilePath);\n    return {\n      filePath: slpFilePath,\n      settings: game.getSettings(),\n      frames: game.getFrames(),\n      stats: game.getStats(),\n      metadata: game.getMetadata(),\n      latestFrame: game.getLatestFrame(),\n      gameEnd: game.getGameEnd(),\n    };\n  }).value();\n\n  return gameDetails;\n}\n*/\n\nexport function filterGames(games) {\n  // console.log(games);\n  const gamesByIsSingles = _.groupBy(games, (game) => {\n    const numberOfPlayers = game.settings.players.length;\n    return numberOfPlayers === 2;\n  });\n\n  const nonSinglesGames = _.get(gamesByIsSingles, false) || [];\n  if (_.some(nonSinglesGames)) {\n    console.log(\"The following games have been excluded because they are not singles games:\");\n    _.forEach(nonSinglesGames, (game) => {\n      console.log(game.filePath);\n    });\n    console.log();\n  }\n\n  const singlesGames = _.get(gamesByIsSingles, true) || [];\n  const gamesByPorts = _.chain(singlesGames)\n    .groupBy((game) => {\n      const ports = _.map(game.settings.players, \"port\");\n      return _.join(ports, \"-\");\n    })\n    .orderBy([\"length\"], [\"desc\"])\n    .value();\n\n  const gamesWithSamePorts = gamesByPorts.shift();\n  if (_.some(gamesByPorts)) {\n    console.log(\"The following games have been excluded because the player ports differ:\");\n    const flatGames = _.flatten(gamesByPorts);\n    _.forEach(flatGames, (game) => {\n      console.log(game.filePath);\n    });\n    console.log();\n  }\n\n  if (_.isEmpty(gamesWithSamePorts)) {\n    throw new Error(\"There were no valid games found to compute stats from.\");\n  }\n\n  console.log(`Including ${gamesWithSamePorts.length} games for stat calculation...`);\n\n  return gamesWithSamePorts;\n}\n\nfunction computeStats(games) {\n  const firstGame = _.first(games);\n  // console.log(firstGame);\n  const orderIndices = _.map(firstGame.settings.players, \"playerIndex\");\n  const reversedIndices = _.chain(orderIndices).clone().reverse().value();\n  const indices = [orderIndices, reversedIndices];\n\n  const statResults = _.flatMap(stats, (statKey) => {\n    const def = statDefininitions[statKey];\n    if (!def.calculate) {\n      return [];\n    }\n\n    const results = _.map(indices, (iIndices) => {\n      const result = def.calculate(games, iIndices[0], iIndices[1]);\n      result.port = iIndices[0] + 1;\n      return result;\n    });\n\n    const output = { ...def };\n    delete output.calculate;\n    output.results = results;\n\n    return [output];\n  });\n\n  return statResults;\n}\n\nfunction generateGameInfo(games) {\n  const getStartAt = (game) => game.metadata.startAt;\n  const orderedGames = _.orderBy(games, [getStartAt], [\"asc\"]);\n\n  const getResultForPlayer = (game, playerIndex) => {\n    // console.log(game);\n    // Calculate assumed game result\n    const gameEnd = game.gameEnd;\n    if (!gameEnd) {\n      return \"unknown\";\n    }\n\n    const players = _.get(game.settings, [\"players\"]);\n    const opp = _.filter(players, (player) => player.playerIndex !== playerIndex);\n    const oppIndex = _.get(opp, [0, \"playerIndex\"]);\n\n    switch (gameEnd.gameEndMethod) {\n      case 1:\n        // This is a TIME! ending, not implemented yet\n        return \"unknown\";\n      case 2:\n        // This is a GAME! ending\n        const latestFrame = _.get(game.latestFrame, \"players\") || [];\n        const playerStocks = _.get(latestFrame, [playerIndex, \"post\", \"stocksRemaining\"]);\n        const oppStocks = _.get(latestFrame, [oppIndex, \"post\", \"stocksRemaining\"]);\n        if (playerStocks === 0 && oppStocks === 0) {\n          return \"unknown\";\n        }\n\n        return playerStocks === 0 ? \"loser\" : \"winner\";\n      case 7:\n        return gameEnd.lrasInitiatorIndex === playerIndex ? \"loser\" : \"winner\";\n    }\n\n    return \"unknown\";\n  };\n\n  const generatePlayerInfo = (game) => (player) => {\n    // console.log(player);\n    return {\n      port: player.port,\n      characterId: player.characterId,\n      characterColor: player.characterColor,\n      nametag: player.nametag,\n      characterName: characterUtil.getCharacterName(player.characterId),\n      characterColor: characterUtil.getCharacterColorName(player.characterId, player.characterColor),\n      gameResult: getResultForPlayer(game, player.playerIndex),\n    };\n  };\n\n  return _.map(orderedGames, (game) => {\n    const playerInfoGen = generatePlayerInfo(game);\n\n    return {\n      stage: {\n        id: game.settings.stageId,\n        name: stageUtil.getStageName(game.settings.stageId),\n      },\n      players: _.map(game.settings.players, playerInfoGen),\n      startTime: game.metadata.startAt,\n      duration: convertFrameCountToDurationString(game.stats.lastFrame),\n    };\n  });\n}\n\nfunction generateBtsSummary(summary) {\n  const fixedStats = [stats.KILL_MOVES, stats.NEUTRAL_OPENER_MOVES, stats.OPENINGS_PER_KILL, stats.DAMAGE_DONE];\n\n  const randomizeCount = 2;\n\n  const generateSummaryItem = (fullStatOutput) => {\n    const type = fullStatOutput.type;\n\n    const output = { ...fullStatOutput };\n    output.results = _.map(fullStatOutput.results, (result) => _.get(result, [\"simple\", type]));\n\n    return output;\n  };\n\n  const result = [];\n\n  const statsById = _.keyBy(summary, \"id\");\n  const statsToRandomizeById = statsById;\n\n  // Add fixed stats\n  _.forEach(fixedStats, (statId) => {\n    const statOutput = statsById[statId];\n    result.push(generateSummaryItem(statOutput));\n\n    delete statsToRandomizeById[statId];\n  });\n\n  // Deal with SDs\n  const sdStat = statsById[stats.SELF_DESTRUCTS];\n  const sds1 = sdStat.results[0].simple.number;\n  const sds2 = sdStat.results[0].simple.number;\n  const shouldIncludeSds = sds1 > 1 || sds2 > 1;\n  if (!shouldIncludeSds) {\n    delete statsToRandomizeById[stats.SELF_DESTRUCTS];\n  }\n\n  const shuffled = _.shuffle(statsToRandomizeById);\n  const shuffledToInclude = _.take(shuffled, randomizeCount);\n  _.forEach(shuffledToInclude, (statOutput) => {\n    result.push(generateSummaryItem(statOutput));\n  });\n\n  return result;\n}\n\nfunction convertFrameCountToDurationString(frameCount) {\n  const duration = moment.duration(frameCount / 60, \"seconds\");\n  return moment.utc(duration.as(\"milliseconds\")).format(\"m:ss\");\n}\n\nexport default function generateOutput(games) {\n  const stats = computeStats(games);\n\n  return {\n    games: generateGameInfo(games),\n    summary: stats,\n    btsSummary: generateBtsSummary(stats),\n  };\n}\n\n// function writeToFile(output) {\n//   console.log(util.inspect(output, { depth: 6, colors: true }));\n//   fs.writeFileSync('output.json', JSON.stringify(output));\n//   console.log(\"Finished writting stats to output.json!\");\n// }\n\n// export default function (games) {\n//   const filteredGames = filterGames(games);\n//   const output = generateOutput(filteredGames);\n//   writeToFile(output);\n//   console.log(output);\n//   return output;\n// }\n","import {\n  FrameEntryType,\n  FramesType,\n  GameEndType,\n  GameStartType,\n  MetadataType,\n  SlippiGame,\n  StatsType,\n} from \"@slippi/slippi-js\";\n\nimport generateStats from \"./stats\";\n\nexport interface GameDetails {\n  filePath: string;\n  settings: GameStartType;\n  frames: FramesType;\n  stats: StatsType;\n  metadata: MetadataType;\n  latestFrame: FrameEntryType | null;\n  gameEnd: GameEndType | null;\n}\n\nexport async function generateStatsOutput(files: File[]) {\n  const games = await readFilesAsSlippiGameDetails(files);\n  console.log(games);\n  const output = generateStats(games);\n  console.log(output);\n  return output;\n}\n\nexport async function readFileAsSlippiGame(file: File): Promise<SlippiGame> {\n  const data = (await readFileAsArrayBuffer(file)) as ArrayBuffer;\n  const arr = new Int8Array(data);\n  const buf = Buffer.from(arr);\n  return new SlippiGame(buf);\n}\n\nexport async function readFileAsGameDetails(file: File): Promise<GameDetails> {\n  const game = await readFileAsSlippiGame(file);\n  return generateGameDetails(file.name, game);\n}\n\nexport function generateGameDetails(name: string, game: SlippiGame): GameDetails {\n  return {\n    filePath: name,\n    settings: game.getSettings(),\n    frames: game.getFrames(),\n    stats: game.getStats(),\n    metadata: game.getMetadata(),\n    latestFrame: game.getLatestFrame(),\n    gameEnd: game.getGameEnd(),\n  };\n}\n\nexport async function readFilesAsSlippiGameDetails(files: File[]): Promise<GameDetails[]> {\n  const promises = files.map(async (f) => {\n    console.log(\"checking file: \", f);\n    const data = (await readFileAsArrayBuffer(f)) as ArrayBuffer;\n    const arr = new Int8Array(data);\n    const buf = Buffer.from(arr);\n    const game = new SlippiGame(buf);\n    // console.log(game.getStats());\n    return {\n      filePath: f.name,\n      settings: game.getSettings(),\n      frames: game.getFrames(),\n      stats: game.getStats(),\n      metadata: game.getMetadata(),\n      latestFrame: game.getLatestFrame(),\n      gameEnd: game.getGameEnd(),\n    };\n  });\n  return Promise.all(promises);\n}\n\nexport async function readFileAsArrayBuffer(file: File): Promise<string | ArrayBufferLike> {\n  return new Promise((resolve, reject) => {\n    const fr = new FileReader();\n    fr.onabort = () => reject(\"file reading was aborted\");\n    fr.onerror = () => reject(\"file reading has failed\");\n    if (fr.readAsBinaryString) {\n      fr.addEventListener(\n        \"load\",\n        function () {\n          const string = (this as any).resultString != null ? (this as any).resultString : this.result;\n          const result = new Uint8Array(string.length);\n          for (let i = 0; i < string.length; i++) {\n            result[i] = string.charCodeAt(i);\n          }\n          resolve(result.buffer);\n        },\n        false\n      );\n      fr.readAsBinaryString(file);\n    } else {\n      fr.addEventListener(\n        \"load\",\n        function () {\n          if (this.result) {\n            resolve(this.result);\n          } else {\n            reject(\"no data read\");\n          }\n        },\n        false\n      );\n      fr.readAsArrayBuffer(file);\n    }\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/powered-by.61867ea8.png\";"],"sourceRoot":""}